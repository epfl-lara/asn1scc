; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!4450 () Bool)

(assert start!4450)

(declare-fun res!15984 () Bool)

(declare-fun e!11642 () Bool)

(assert (=> start!4450 (=> (not res!15984) (not e!11642))))

(declare-fun nBits!604 () (_ BitVec 64))

(assert (=> start!4450 (= res!15984 (bvsge nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> start!4450 e!11642))

(assert (=> start!4450 true))

(declare-datatypes ((array!1211 0))(
  ( (array!1212 (arr!946 (Array (_ BitVec 32) (_ BitVec 8))) (size!511 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!892 0))(
  ( (BitStream!893 (buf!829 array!1211) (currentByte!2068 (_ BitVec 32)) (currentBit!2063 (_ BitVec 32))) )
))
(declare-fun thiss!1917 () BitStream!892)

(declare-fun e!11643 () Bool)

(declare-fun inv!12 (BitStream!892) Bool)

(assert (=> start!4450 (and (inv!12 thiss!1917) e!11643)))

(declare-fun b!18171 () Bool)

(declare-fun e!11640 () Bool)

(assert (=> b!18171 (= e!11642 (not e!11640))))

(declare-fun res!15985 () Bool)

(assert (=> b!18171 (=> res!15985 e!11640)))

(declare-datatypes ((tuple2!2102 0))(
  ( (tuple2!2103 (_1!1127 array!1211) (_2!1127 BitStream!892)) )
))
(declare-fun lt!26161 () tuple2!2102)

(assert (=> b!18171 (= res!15985 (= (currentByte!2068 thiss!1917) (size!511 (buf!829 (_2!1127 lt!26161)))))))

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!18171 (invariant!0 (currentBit!2063 (_2!1127 lt!26161)) (currentByte!2068 (_2!1127 lt!26161)) (size!511 (buf!829 (_2!1127 lt!26161))))))

(declare-fun readBits!0 (BitStream!892 (_ BitVec 64)) tuple2!2102)

(assert (=> b!18171 (= lt!26161 (readBits!0 thiss!1917 nBits!604))))

(declare-fun b!18170 () Bool)

(declare-fun res!15986 () Bool)

(assert (=> b!18170 (=> (not res!15986) (not e!11642))))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!18170 (= res!15986 (validate_offset_bits!1 ((_ sign_extend 32) (size!511 (buf!829 thiss!1917))) ((_ sign_extend 32) (currentByte!2068 thiss!1917)) ((_ sign_extend 32) (currentBit!2063 thiss!1917)) nBits!604))))

(declare-fun b!18172 () Bool)

(assert (=> b!18172 (= e!11640 (inv!12 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))))))

(declare-fun b!18173 () Bool)

(declare-fun array_inv!481 (array!1211) Bool)

(assert (=> b!18173 (= e!11643 (array_inv!481 (buf!829 thiss!1917)))))

(assert (= (and start!4450 res!15984) b!18170))

(assert (= (and b!18170 res!15986) b!18171))

(assert (= (and b!18171 (not res!15985)) b!18172))

(assert (= start!4450 b!18173))

(declare-fun m!24511 () Bool)

(assert (=> b!18170 m!24511))

(declare-fun m!24513 () Bool)

(assert (=> b!18171 m!24513))

(declare-fun m!24515 () Bool)

(assert (=> b!18171 m!24515))

(declare-fun m!24517 () Bool)

(assert (=> b!18172 m!24517))

(declare-fun m!24519 () Bool)

(assert (=> b!18173 m!24519))

(declare-fun m!24521 () Bool)

(assert (=> start!4450 m!24521))

(push 1)

(assert (not b!18171))

(assert (not b!18173))

(assert (not start!4450))

(assert (not b!18170))

(assert (not b!18172))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!5992 () Bool)

(assert (=> d!5992 (= (invariant!0 (currentBit!2063 (_2!1127 lt!26161)) (currentByte!2068 (_2!1127 lt!26161)) (size!511 (buf!829 (_2!1127 lt!26161)))) (and (bvsge (currentBit!2063 (_2!1127 lt!26161)) #b00000000000000000000000000000000) (bvslt (currentBit!2063 (_2!1127 lt!26161)) #b00000000000000000000000000001000) (bvsge (currentByte!2068 (_2!1127 lt!26161)) #b00000000000000000000000000000000) (or (bvslt (currentByte!2068 (_2!1127 lt!26161)) (size!511 (buf!829 (_2!1127 lt!26161)))) (and (= (currentBit!2063 (_2!1127 lt!26161)) #b00000000000000000000000000000000) (= (currentByte!2068 (_2!1127 lt!26161)) (size!511 (buf!829 (_2!1127 lt!26161))))))))))

(assert (=> b!18171 d!5992))

(declare-fun b!18208 () Bool)

(declare-fun res!16016 () Bool)

(declare-fun e!11670 () Bool)

(assert (=> b!18208 (=> (not res!16016) (not e!11670))))

(declare-fun lt!26192 () tuple2!2102)

(declare-fun lt!26190 () (_ BitVec 64))

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!18208 (= res!16016 (= (bvadd lt!26190 nBits!604) (bitIndex!0 (size!511 (buf!829 (_2!1127 lt!26192))) (currentByte!2068 (_2!1127 lt!26192)) (currentBit!2063 (_2!1127 lt!26192)))))))

(assert (=> b!18208 (or (not (= (bvand lt!26190 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!26190 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!26190 nBits!604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!18208 (= lt!26190 (bitIndex!0 (size!511 (buf!829 thiss!1917)) (currentByte!2068 thiss!1917) (currentBit!2063 thiss!1917)))))

(declare-fun b!18209 () Bool)

(declare-fun res!16018 () Bool)

(assert (=> b!18209 (=> (not res!16018) (not e!11670))))

(assert (=> b!18209 (= res!16018 (bvsle (currentByte!2068 thiss!1917) (currentByte!2068 (_2!1127 lt!26192))))))

(declare-fun b!18210 () Bool)

(declare-fun res!16015 () Bool)

(assert (=> b!18210 (=> (not res!16015) (not e!11670))))

(assert (=> b!18210 (= res!16015 (invariant!0 (currentBit!2063 (_2!1127 lt!26192)) (currentByte!2068 (_2!1127 lt!26192)) (size!511 (buf!829 (_2!1127 lt!26192)))))))

(declare-fun b!18212 () Bool)

(declare-datatypes ((List!204 0))(
  ( (Nil!201) (Cons!200 (h!319 Bool) (t!954 List!204)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!892 array!1211 (_ BitVec 64) (_ BitVec 64)) List!204)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!892 BitStream!892 (_ BitVec 64)) List!204)

(assert (=> b!18212 (= e!11670 (= (byteArrayBitContentToList!0 (_2!1127 lt!26192) (_1!1127 lt!26192) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bitStreamReadBitsIntoList!0 (_2!1127 lt!26192) thiss!1917 nBits!604)))))

(declare-fun d!5994 () Bool)

(assert (=> d!5994 e!11670))

(declare-fun res!16019 () Bool)

(assert (=> d!5994 (=> (not res!16019) (not e!11670))))

(assert (=> d!5994 (= res!16019 (= (buf!829 (_2!1127 lt!26192)) (buf!829 thiss!1917)))))

(declare-datatypes ((Unit!1614 0))(
  ( (Unit!1615) )
))
(declare-datatypes ((tuple3!140 0))(
  ( (tuple3!141 (_1!1130 Unit!1614) (_2!1130 BitStream!892) (_3!76 array!1211)) )
))
(declare-fun lt!26187 () tuple3!140)

(assert (=> d!5994 (= lt!26192 (tuple2!2103 (_3!76 lt!26187) (_2!1130 lt!26187)))))

(declare-fun readBitsLoop!0 (BitStream!892 (_ BitVec 64) array!1211 (_ BitVec 64) (_ BitVec 64)) tuple3!140)

(assert (=> d!5994 (= lt!26187 (readBitsLoop!0 thiss!1917 nBits!604 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604))))

(assert (=> d!5994 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bvsle nBits!604 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!5994 (= (readBits!0 thiss!1917 nBits!604) lt!26192)))

(declare-fun b!18211 () Bool)

(declare-fun res!16017 () Bool)

(assert (=> b!18211 (=> (not res!16017) (not e!11670))))

(declare-fun lt!26189 () (_ BitVec 64))

(assert (=> b!18211 (= res!16017 (= (size!511 (_1!1127 lt!26192)) ((_ extract 31 0) lt!26189)))))

(assert (=> b!18211 (and (bvslt lt!26189 #b0000000000000000000000000000000010000000000000000000000000000000) (bvsge lt!26189 #b1111111111111111111111111111111110000000000000000000000000000000))))

(declare-fun lt!26193 () (_ BitVec 64))

(declare-fun lt!26186 () (_ BitVec 64))

(assert (=> b!18211 (= lt!26189 (bvsdiv lt!26193 lt!26186))))

(assert (=> b!18211 (and (not (= lt!26186 #b0000000000000000000000000000000000000000000000000000000000000000)) (or (not (= lt!26193 #b1000000000000000000000000000000000000000000000000000000000000000)) (not (= lt!26186 #b1111111111111111111111111111111111111111111111111111111111111111))))))

(assert (=> b!18211 (= lt!26186 #b0000000000000000000000000000000000000000000000000000000000001000)))

(declare-fun lt!26194 () (_ BitVec 64))

(declare-fun lt!26191 () (_ BitVec 64))

(assert (=> b!18211 (= lt!26193 (bvsub lt!26194 lt!26191))))

(assert (=> b!18211 (or (= (bvand lt!26194 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!26191 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!26194 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!26194 lt!26191) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!18211 (= lt!26191 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!26188 () (_ BitVec 64))

(assert (=> b!18211 (= lt!26194 (bvadd nBits!604 lt!26188))))

(assert (=> b!18211 (or (not (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!26188 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd nBits!604 lt!26188) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!18211 (= lt!26188 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (= (and d!5994 res!16019) b!18208))

(assert (= (and b!18208 res!16016) b!18210))

(assert (= (and b!18210 res!16015) b!18211))

(assert (= (and b!18211 res!16017) b!18209))

(assert (= (and b!18209 res!16018) b!18212))

(declare-fun m!24547 () Bool)

(assert (=> b!18208 m!24547))

(declare-fun m!24549 () Bool)

(assert (=> b!18208 m!24549))

(declare-fun m!24551 () Bool)

(assert (=> b!18210 m!24551))

(declare-fun m!24553 () Bool)

(assert (=> b!18212 m!24553))

(declare-fun m!24555 () Bool)

(assert (=> b!18212 m!24555))

(declare-fun m!24557 () Bool)

(assert (=> d!5994 m!24557))

(assert (=> b!18171 d!5994))

(declare-fun d!6004 () Bool)

(declare-fun remainingBits!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))

(assert (=> d!6004 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!511 (buf!829 thiss!1917))) ((_ sign_extend 32) (currentByte!2068 thiss!1917)) ((_ sign_extend 32) (currentBit!2063 thiss!1917)) nBits!604) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!511 (buf!829 thiss!1917))) ((_ sign_extend 32) (currentByte!2068 thiss!1917)) ((_ sign_extend 32) (currentBit!2063 thiss!1917))) nBits!604))))

(declare-fun bs!1701 () Bool)

(assert (= bs!1701 d!6004))

(declare-fun m!24559 () Bool)

(assert (=> bs!1701 m!24559))

(assert (=> b!18170 d!6004))

(declare-fun d!6006 () Bool)

(assert (=> d!6006 (= (inv!12 thiss!1917) (invariant!0 (currentBit!2063 thiss!1917) (currentByte!2068 thiss!1917) (size!511 (buf!829 thiss!1917))))))

(declare-fun bs!1702 () Bool)

(assert (= bs!1702 d!6006))

(declare-fun m!24561 () Bool)

(assert (=> bs!1702 m!24561))

(assert (=> start!4450 d!6006))

(declare-fun d!6008 () Bool)

(assert (=> d!6008 (= (array_inv!481 (buf!829 thiss!1917)) (bvsge (size!511 (buf!829 thiss!1917)) #b00000000000000000000000000000000))))

(assert (=> b!18173 d!6008))

(declare-fun d!6010 () Bool)

(assert (=> d!6010 (= (inv!12 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) (invariant!0 (currentBit!2063 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) (currentByte!2068 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) (size!511 (buf!829 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))))))))

(declare-fun bs!1703 () Bool)

(assert (= bs!1703 d!6010))

(declare-fun m!24563 () Bool)

(assert (=> bs!1703 m!24563))

(assert (=> b!18172 d!6010))

(push 1)

(assert (not d!6010))

(assert (not b!18210))

(assert (not d!6006))

(assert (not d!6004))

(assert (not b!18208))

(assert (not d!5994))

(assert (not b!18212))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!6064 () Bool)

(assert (=> d!6064 (= (invariant!0 (currentBit!2063 thiss!1917) (currentByte!2068 thiss!1917) (size!511 (buf!829 thiss!1917))) (and (bvsge (currentBit!2063 thiss!1917) #b00000000000000000000000000000000) (bvslt (currentBit!2063 thiss!1917) #b00000000000000000000000000001000) (bvsge (currentByte!2068 thiss!1917) #b00000000000000000000000000000000) (or (bvslt (currentByte!2068 thiss!1917) (size!511 (buf!829 thiss!1917))) (and (= (currentBit!2063 thiss!1917) #b00000000000000000000000000000000) (= (currentByte!2068 thiss!1917) (size!511 (buf!829 thiss!1917)))))))))

(assert (=> d!6006 d!6064))

(declare-fun d!6066 () Bool)

(assert (=> d!6066 (= (invariant!0 (currentBit!2063 (_2!1127 lt!26192)) (currentByte!2068 (_2!1127 lt!26192)) (size!511 (buf!829 (_2!1127 lt!26192)))) (and (bvsge (currentBit!2063 (_2!1127 lt!26192)) #b00000000000000000000000000000000) (bvslt (currentBit!2063 (_2!1127 lt!26192)) #b00000000000000000000000000001000) (bvsge (currentByte!2068 (_2!1127 lt!26192)) #b00000000000000000000000000000000) (or (bvslt (currentByte!2068 (_2!1127 lt!26192)) (size!511 (buf!829 (_2!1127 lt!26192)))) (and (= (currentBit!2063 (_2!1127 lt!26192)) #b00000000000000000000000000000000) (= (currentByte!2068 (_2!1127 lt!26192)) (size!511 (buf!829 (_2!1127 lt!26192))))))))))

(assert (=> b!18210 d!6066))

(declare-fun d!6068 () Bool)

(assert (=> d!6068 (= (remainingBits!0 ((_ sign_extend 32) (size!511 (buf!829 thiss!1917))) ((_ sign_extend 32) (currentByte!2068 thiss!1917)) ((_ sign_extend 32) (currentBit!2063 thiss!1917))) (bvsub (bvmul ((_ sign_extend 32) (size!511 (buf!829 thiss!1917))) #b0000000000000000000000000000000000000000000000000000000000001000) (bvadd (bvmul ((_ sign_extend 32) (currentByte!2068 thiss!1917)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2063 thiss!1917)))))))

(assert (=> d!6004 d!6068))

(declare-fun b!18367 () Bool)

(declare-fun e!11735 () Bool)

(declare-fun lt!26604 () tuple3!140)

(declare-fun bitAt!0 (array!1211 (_ BitVec 64)) Bool)

(declare-datatypes ((tuple2!2120 0))(
  ( (tuple2!2121 (_1!1139 BitStream!892) (_2!1139 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!892) tuple2!2120)

(assert (=> b!18367 (= e!11735 (= (bitAt!0 (_3!76 lt!26604) #b0000000000000000000000000000000000000000000000000000000000000000) (_2!1139 (readBitPure!0 thiss!1917))))))

(declare-fun b!18368 () Bool)

(declare-fun e!11738 () tuple3!140)

(declare-fun lt!26622 () Unit!1614)

(declare-fun lt!26630 () tuple3!140)

(assert (=> b!18368 (= e!11738 (tuple3!141 lt!26622 (_2!1130 lt!26630) (_3!76 lt!26630)))))

(declare-datatypes ((tuple2!2122 0))(
  ( (tuple2!2123 (_1!1140 Bool) (_2!1140 BitStream!892)) )
))
(declare-fun lt!26617 () tuple2!2122)

(declare-fun readBit!0 (BitStream!892) tuple2!2122)

(assert (=> b!18368 (= lt!26617 (readBit!0 thiss!1917))))

(declare-fun lt!26603 () (_ BitVec 32))

(assert (=> b!18368 (= lt!26603 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!26606 () (_ BitVec 32))

(assert (=> b!18368 (= lt!26606 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!26627 () array!1211)

(assert (=> b!18368 (= lt!26627 (array!1212 (store (arr!946 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!26603 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!946 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!26603)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!26606)))) ((_ sign_extend 24) (ite (_1!1140 lt!26617) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!26606) #b00000000))))) (size!511 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!26623 () (_ BitVec 64))

(assert (=> b!18368 (= lt!26623 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!26618 () (_ BitVec 64))

(assert (=> b!18368 (= lt!26618 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!26620 () Unit!1614)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!892 BitStream!892 (_ BitVec 64) (_ BitVec 64)) Unit!1614)

(assert (=> b!18368 (= lt!26620 (validateOffsetBitsIneqLemma!0 thiss!1917 (_2!1140 lt!26617) lt!26623 lt!26618))))

(assert (=> b!18368 (validate_offset_bits!1 ((_ sign_extend 32) (size!511 (buf!829 (_2!1140 lt!26617)))) ((_ sign_extend 32) (currentByte!2068 (_2!1140 lt!26617))) ((_ sign_extend 32) (currentBit!2063 (_2!1140 lt!26617))) (bvsub lt!26623 lt!26618))))

(declare-fun lt!26608 () Unit!1614)

(assert (=> b!18368 (= lt!26608 lt!26620)))

(assert (=> b!18368 (= lt!26630 (readBitsLoop!0 (_2!1140 lt!26617) nBits!604 lt!26627 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) nBits!604))))

(declare-fun res!16122 () Bool)

(assert (=> b!18368 (= res!16122 (= (bvsub (bvadd (bitIndex!0 (size!511 (buf!829 thiss!1917)) (currentByte!2068 thiss!1917) (currentBit!2063 thiss!1917)) nBits!604) #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!511 (buf!829 (_2!1130 lt!26630))) (currentByte!2068 (_2!1130 lt!26630)) (currentBit!2063 (_2!1130 lt!26630)))))))

(declare-fun e!11737 () Bool)

(assert (=> b!18368 (=> (not res!16122) (not e!11737))))

(assert (=> b!18368 e!11737))

(declare-fun lt!26607 () Unit!1614)

(declare-fun Unit!1628 () Unit!1614)

(assert (=> b!18368 (= lt!26607 Unit!1628)))

(declare-fun lt!26613 () (_ BitVec 32))

(assert (=> b!18368 (= lt!26613 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!26626 () (_ BitVec 32))

(assert (=> b!18368 (= lt!26626 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!26605 () Unit!1614)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!1211 (_ BitVec 64) Bool) Unit!1614)

(assert (=> b!18368 (= lt!26605 (arrayBitRangesUpdatedAtLemma!0 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 (_1!1140 lt!26617)))))

(declare-fun call!292 () Bool)

(assert (=> b!18368 call!292))

(declare-fun lt!26629 () Unit!1614)

(assert (=> b!18368 (= lt!26629 lt!26605)))

(declare-fun lt!26616 () (_ BitVec 64))

(assert (=> b!18368 (= lt!26616 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!26637 () Unit!1614)

(declare-fun arrayBitRangesEqTransitive!0 (array!1211 array!1211 array!1211 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1614)

(assert (=> b!18368 (= lt!26637 (arrayBitRangesEqTransitive!0 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!26627 (_3!76 lt!26630) lt!26616 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(declare-fun call!293 () Bool)

(assert (=> b!18368 call!293))

(declare-fun lt!26614 () Unit!1614)

(assert (=> b!18368 (= lt!26614 lt!26637)))

(declare-fun arrayBitRangesEq!0 (array!1211 array!1211 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!18368 (arrayBitRangesEq!0 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!76 lt!26630) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!26635 () Unit!1614)

(declare-fun Unit!1629 () Unit!1614)

(assert (=> b!18368 (= lt!26635 Unit!1629)))

(declare-fun lt!26612 () Unit!1614)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!1211 array!1211 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1614)

(assert (=> b!18368 (= lt!26612 (arrayBitRangesEqImpliesEq!0 lt!26627 (_3!76 lt!26630) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!18368 (= (bitAt!0 lt!26627 #b0000000000000000000000000000000000000000000000000000000000000000) (bitAt!0 (_3!76 lt!26630) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!26633 () Unit!1614)

(assert (=> b!18368 (= lt!26633 lt!26612)))

(declare-fun lt!26624 () Unit!1614)

(declare-fun Unit!1630 () Unit!1614)

(assert (=> b!18368 (= lt!26624 Unit!1630)))

(declare-fun lt!26611 () Bool)

(assert (=> b!18368 (= lt!26611 (= (bitAt!0 (_3!76 lt!26630) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!1140 lt!26617)))))

(declare-fun Unit!1631 () Unit!1614)

(assert (=> b!18368 (= lt!26622 Unit!1631)))

(assert (=> b!18368 lt!26611))

(declare-fun b!18370 () Bool)

(declare-fun res!16124 () Bool)

(declare-fun e!11736 () Bool)

(assert (=> b!18370 (=> (not res!16124) (not e!11736))))

(assert (=> b!18370 (= res!16124 e!11735)))

(declare-fun res!16123 () Bool)

(assert (=> b!18370 (=> res!16123 e!11735)))

(assert (=> b!18370 (= res!16123 (not (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604)))))

(declare-fun b!18371 () Bool)

(declare-fun res!16127 () Bool)

(assert (=> b!18371 (=> (not res!16127) (not e!11736))))

(assert (=> b!18371 (= res!16127 (arrayBitRangesEq!0 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!76 lt!26604) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!6070 () Bool)

(assert (=> d!6070 e!11736))

(declare-fun res!16125 () Bool)

(assert (=> d!6070 (=> (not res!16125) (not e!11736))))

(declare-fun lt!26610 () (_ BitVec 64))

(assert (=> d!6070 (= res!16125 (= (bvsub lt!26610 #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!511 (buf!829 (_2!1130 lt!26604))) (currentByte!2068 (_2!1130 lt!26604)) (currentBit!2063 (_2!1130 lt!26604)))))))

(assert (=> d!6070 (or (= (bvand lt!26610 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!26610 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!26610 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!26625 () (_ BitVec 64))

(assert (=> d!6070 (= lt!26610 (bvadd lt!26625 nBits!604))))

(assert (=> d!6070 (or (not (= (bvand lt!26625 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!26625 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!26625 nBits!604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!6070 (= lt!26625 (bitIndex!0 (size!511 (buf!829 thiss!1917)) (currentByte!2068 thiss!1917) (currentBit!2063 thiss!1917)))))

(assert (=> d!6070 (= lt!26604 e!11738)))

(declare-fun c!1378 () Bool)

(assert (=> d!6070 (= c!1378 (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604))))

(assert (=> d!6070 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bvsle nBits!604 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!6070 (= (readBitsLoop!0 thiss!1917 nBits!604 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) lt!26604)))

(declare-fun b!18369 () Bool)

(assert (=> b!18369 (= e!11737 (and (= (buf!829 thiss!1917) (buf!829 (_2!1130 lt!26630))) (= (size!511 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!511 (_3!76 lt!26630)))))))

(declare-fun b!18372 () Bool)

(declare-fun res!16128 () Bool)

(assert (=> b!18372 (=> (not res!16128) (not e!11736))))

(assert (=> b!18372 (= res!16128 (and (= (buf!829 thiss!1917) (buf!829 (_2!1130 lt!26604))) (= (size!511 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!511 (_3!76 lt!26604)))))))

(declare-fun b!18373 () Bool)

(assert (=> b!18373 (= e!11736 (= (byteArrayBitContentToList!0 (_2!1130 lt!26604) (_3!76 lt!26604) #b0000000000000000000000000000000000000000000000000000000000000000 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000)) (bitStreamReadBitsIntoList!0 (_2!1130 lt!26604) thiss!1917 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!18373 (or (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!18373 (or (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!18374 () Bool)

(declare-fun res!16126 () Bool)

(assert (=> b!18374 (=> (not res!16126) (not e!11736))))

(assert (=> b!18374 (= res!16126 (invariant!0 (currentBit!2063 (_2!1130 lt!26604)) (currentByte!2068 (_2!1130 lt!26604)) (size!511 (buf!829 (_2!1130 lt!26604)))))))

(declare-fun lt!26636 () array!1211)

(declare-fun lt!26609 () (_ BitVec 64))

(declare-fun bm!289 () Bool)

(declare-fun lt!26621 () (_ BitVec 64))

(declare-fun lt!26628 () array!1211)

(assert (=> bm!289 (= call!292 (arrayBitRangesEq!0 (ite c!1378 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!26628) (ite c!1378 (array!1212 (store (arr!946 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!26613 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!946 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!26613)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!26626)))) ((_ sign_extend 24) (ite (_1!1140 lt!26617) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!26626) #b00000000))))) (size!511 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))) lt!26636) (ite c!1378 #b0000000000000000000000000000000000000000000000000000000000000000 lt!26621) (ite c!1378 #b0000000000000000000000000000000000000000000000000000000000000000 lt!26609)))))

(declare-fun bm!290 () Bool)

(assert (=> bm!290 (= call!293 (arrayBitRangesEq!0 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (ite c!1378 (_3!76 lt!26630) (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (ite c!1378 lt!26616 #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!1378 #b0000000000000000000000000000000000000000000000000000000000000000 (bvmul ((_ sign_extend 32) (size!511 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!26632 () Unit!1614)

(declare-fun b!18375 () Bool)

(assert (=> b!18375 (= e!11738 (tuple3!141 lt!26632 thiss!1917 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun lt!26615 () Unit!1614)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!1211) Unit!1614)

(assert (=> b!18375 (= lt!26615 (arrayBitRangesEqReflexiveLemma!0 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(assert (=> b!18375 call!293))

(declare-fun lt!26638 () Unit!1614)

(assert (=> b!18375 (= lt!26638 lt!26615)))

(assert (=> b!18375 (= lt!26628 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(assert (=> b!18375 (= lt!26636 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!26631 () (_ BitVec 64))

(assert (=> b!18375 (= lt!26631 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!26634 () (_ BitVec 64))

(assert (=> b!18375 (= lt!26634 ((_ sign_extend 32) (size!511 (array!1212 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!26619 () (_ BitVec 64))

(assert (=> b!18375 (= lt!26619 (bvmul lt!26634 #b0000000000000000000000000000000000000000000000000000000000001000))))

(assert (=> b!18375 (= lt!26621 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!18375 (= lt!26609 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!1211 array!1211 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1614)

(assert (=> b!18375 (= lt!26632 (arrayBitRangesEqSlicedLemma!0 lt!26628 lt!26636 lt!26631 lt!26619 lt!26621 lt!26609))))

(assert (=> b!18375 call!292))

(assert (= (and d!6070 c!1378) b!18368))

(assert (= (and d!6070 (not c!1378)) b!18375))

(assert (= (and b!18368 res!16122) b!18369))

(assert (= (or b!18368 b!18375) bm!289))

(assert (= (or b!18368 b!18375) bm!290))

(assert (= (and d!6070 res!16125) b!18372))

(assert (= (and b!18372 res!16128) b!18371))

(assert (= (and b!18371 res!16127) b!18370))

(assert (= (and b!18370 (not res!16123)) b!18367))

(assert (= (and b!18370 res!16124) b!18374))

(assert (= (and b!18374 res!16126) b!18373))

(declare-fun m!24741 () Bool)

(assert (=> b!18371 m!24741))

(declare-fun m!24743 () Bool)

(assert (=> bm!290 m!24743))

(declare-fun m!24745 () Bool)

(assert (=> d!6070 m!24745))

(assert (=> d!6070 m!24549))

(declare-fun m!24747 () Bool)

(assert (=> b!18373 m!24747))

(declare-fun m!24749 () Bool)

(assert (=> b!18373 m!24749))

(declare-fun m!24751 () Bool)

(assert (=> b!18367 m!24751))

(declare-fun m!24753 () Bool)

(assert (=> b!18367 m!24753))

(declare-fun m!24755 () Bool)

(assert (=> b!18375 m!24755))

(declare-fun m!24757 () Bool)

(assert (=> b!18375 m!24757))

(declare-fun m!24759 () Bool)

(assert (=> bm!289 m!24759))

(declare-fun m!24761 () Bool)

(assert (=> bm!289 m!24761))

(declare-fun m!24763 () Bool)

(assert (=> bm!289 m!24763))

(declare-fun m!24765 () Bool)

(assert (=> bm!289 m!24765))

(declare-fun m!24767 () Bool)

(assert (=> b!18368 m!24767))

(declare-fun m!24769 () Bool)

(assert (=> b!18368 m!24769))

(declare-fun m!24771 () Bool)

(assert (=> b!18368 m!24771))

(declare-fun m!24773 () Bool)

(assert (=> b!18368 m!24773))

(declare-fun m!24775 () Bool)

(assert (=> b!18368 m!24775))

(declare-fun m!24777 () Bool)

(assert (=> b!18368 m!24777))

(declare-fun m!24779 () Bool)

(assert (=> b!18368 m!24779))

(declare-fun m!24781 () Bool)

(assert (=> b!18368 m!24781))

(assert (=> b!18368 m!24549))

(declare-fun m!24783 () Bool)

(assert (=> b!18368 m!24783))

(declare-fun m!24785 () Bool)

(assert (=> b!18368 m!24785))

(declare-fun m!24787 () Bool)

(assert (=> b!18368 m!24787))

(declare-fun m!24789 () Bool)

(assert (=> b!18368 m!24789))

(declare-fun m!24791 () Bool)

(assert (=> b!18368 m!24791))

(declare-fun m!24793 () Bool)

(assert (=> b!18368 m!24793))

(declare-fun m!24795 () Bool)

(assert (=> b!18374 m!24795))

(assert (=> d!5994 d!6070))

(declare-fun d!6072 () Bool)

(declare-fun e!11741 () Bool)

(assert (=> d!6072 e!11741))

(declare-fun res!16133 () Bool)

(assert (=> d!6072 (=> (not res!16133) (not e!11741))))

(declare-fun lt!26656 () (_ BitVec 64))

(declare-fun lt!26655 () (_ BitVec 64))

(declare-fun lt!26652 () (_ BitVec 64))

(assert (=> d!6072 (= res!16133 (= lt!26652 (bvsub lt!26655 lt!26656)))))

(assert (=> d!6072 (or (= (bvand lt!26655 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!26656 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!26655 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!26655 lt!26656) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!6072 (= lt!26656 (remainingBits!0 ((_ sign_extend 32) (size!511 (buf!829 (_2!1127 lt!26192)))) ((_ sign_extend 32) (currentByte!2068 (_2!1127 lt!26192))) ((_ sign_extend 32) (currentBit!2063 (_2!1127 lt!26192)))))))

(declare-fun lt!26651 () (_ BitVec 64))

(declare-fun lt!26654 () (_ BitVec 64))

(assert (=> d!6072 (= lt!26655 (bvmul lt!26651 lt!26654))))

(assert (=> d!6072 (or (= lt!26651 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!26654 (bvsdiv (bvmul lt!26651 lt!26654) lt!26651)))))

(assert (=> d!6072 (= lt!26654 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!6072 (= lt!26651 ((_ sign_extend 32) (size!511 (buf!829 (_2!1127 lt!26192)))))))

(assert (=> d!6072 (= lt!26652 (bvadd (bvmul ((_ sign_extend 32) (currentByte!2068 (_2!1127 lt!26192))) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2063 (_2!1127 lt!26192)))))))

(assert (=> d!6072 (invariant!0 (currentBit!2063 (_2!1127 lt!26192)) (currentByte!2068 (_2!1127 lt!26192)) (size!511 (buf!829 (_2!1127 lt!26192))))))

(assert (=> d!6072 (= (bitIndex!0 (size!511 (buf!829 (_2!1127 lt!26192))) (currentByte!2068 (_2!1127 lt!26192)) (currentBit!2063 (_2!1127 lt!26192))) lt!26652)))

(declare-fun b!18380 () Bool)

(declare-fun res!16134 () Bool)

(assert (=> b!18380 (=> (not res!16134) (not e!11741))))

(assert (=> b!18380 (= res!16134 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!26652))))

(declare-fun b!18381 () Bool)

(declare-fun lt!26653 () (_ BitVec 64))

(assert (=> b!18381 (= e!11741 (bvsle lt!26652 (bvmul lt!26653 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!18381 (or (= lt!26653 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!26653 #b0000000000000000000000000000000000000000000000000000000000001000) lt!26653)))))

(assert (=> b!18381 (= lt!26653 ((_ sign_extend 32) (size!511 (buf!829 (_2!1127 lt!26192)))))))

(assert (= (and d!6072 res!16133) b!18380))

(assert (= (and b!18380 res!16134) b!18381))

(declare-fun m!24797 () Bool)

(assert (=> d!6072 m!24797))

(assert (=> d!6072 m!24551))

(assert (=> b!18208 d!6072))

(declare-fun d!6074 () Bool)

(declare-fun e!11742 () Bool)

(assert (=> d!6074 e!11742))

(declare-fun res!16135 () Bool)

(assert (=> d!6074 (=> (not res!16135) (not e!11742))))

(declare-fun lt!26661 () (_ BitVec 64))

(declare-fun lt!26658 () (_ BitVec 64))

(declare-fun lt!26662 () (_ BitVec 64))

(assert (=> d!6074 (= res!16135 (= lt!26658 (bvsub lt!26661 lt!26662)))))

(assert (=> d!6074 (or (= (bvand lt!26661 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!26662 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!26661 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!26661 lt!26662) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!6074 (= lt!26662 (remainingBits!0 ((_ sign_extend 32) (size!511 (buf!829 thiss!1917))) ((_ sign_extend 32) (currentByte!2068 thiss!1917)) ((_ sign_extend 32) (currentBit!2063 thiss!1917))))))

(declare-fun lt!26657 () (_ BitVec 64))

(declare-fun lt!26660 () (_ BitVec 64))

(assert (=> d!6074 (= lt!26661 (bvmul lt!26657 lt!26660))))

(assert (=> d!6074 (or (= lt!26657 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!26660 (bvsdiv (bvmul lt!26657 lt!26660) lt!26657)))))

(assert (=> d!6074 (= lt!26660 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!6074 (= lt!26657 ((_ sign_extend 32) (size!511 (buf!829 thiss!1917))))))

(assert (=> d!6074 (= lt!26658 (bvadd (bvmul ((_ sign_extend 32) (currentByte!2068 thiss!1917)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2063 thiss!1917))))))

(assert (=> d!6074 (invariant!0 (currentBit!2063 thiss!1917) (currentByte!2068 thiss!1917) (size!511 (buf!829 thiss!1917)))))

(assert (=> d!6074 (= (bitIndex!0 (size!511 (buf!829 thiss!1917)) (currentByte!2068 thiss!1917) (currentBit!2063 thiss!1917)) lt!26658)))

(declare-fun b!18382 () Bool)

(declare-fun res!16136 () Bool)

(assert (=> b!18382 (=> (not res!16136) (not e!11742))))

(assert (=> b!18382 (= res!16136 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!26658))))

(declare-fun b!18383 () Bool)

(declare-fun lt!26659 () (_ BitVec 64))

(assert (=> b!18383 (= e!11742 (bvsle lt!26658 (bvmul lt!26659 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!18383 (or (= lt!26659 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!26659 #b0000000000000000000000000000000000000000000000000000000000001000) lt!26659)))))

(assert (=> b!18383 (= lt!26659 ((_ sign_extend 32) (size!511 (buf!829 thiss!1917))))))

(assert (= (and d!6074 res!16135) b!18382))

(assert (= (and b!18382 res!16136) b!18383))

(assert (=> d!6074 m!24559))

(assert (=> d!6074 m!24561))

(assert (=> b!18208 d!6074))

(declare-fun d!6076 () Bool)

(assert (=> d!6076 (= (invariant!0 (currentBit!2063 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) (currentByte!2068 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) (size!511 (buf!829 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))))) (and (bvsge (currentBit!2063 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) #b00000000000000000000000000000000) (bvslt (currentBit!2063 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) #b00000000000000000000000000001000) (bvsge (currentByte!2068 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) #b00000000000000000000000000000000) (or (bvslt (currentByte!2068 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) (size!511 (buf!829 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))))) (and (= (currentBit!2063 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) #b00000000000000000000000000000000) (= (currentByte!2068 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161)))) (size!511 (buf!829 (BitStream!893 (buf!829 (_2!1127 lt!26161)) (currentByte!2068 thiss!1917) (currentBit!2063 (_2!1127 lt!26161))))))))))))

(assert (=> d!6010 d!6076))

(declare-fun d!6078 () Bool)

(declare-fun c!1381 () Bool)

(assert (=> d!6078 (= c!1381 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!11745 () List!204)

(assert (=> d!6078 (= (byteArrayBitContentToList!0 (_2!1127 lt!26192) (_1!1127 lt!26192) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) e!11745)))

(declare-fun b!18388 () Bool)

(assert (=> b!18388 (= e!11745 Nil!201)))

(declare-fun b!18389 () Bool)

(assert (=> b!18389 (= e!11745 (Cons!200 (not (= (bvand ((_ sign_extend 24) (select (arr!946 (_1!1127 lt!26192)) ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 (_2!1127 lt!26192) (_1!1127 lt!26192) (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!6078 c!1381) b!18388))

(assert (= (and d!6078 (not c!1381)) b!18389))

(declare-fun m!24799 () Bool)

(assert (=> b!18389 m!24799))

(declare-fun m!24801 () Bool)

(assert (=> b!18389 m!24801))

(declare-fun m!24803 () Bool)

(assert (=> b!18389 m!24803))

(assert (=> b!18212 d!6078))

(declare-fun b!18400 () Bool)

(declare-fun e!11751 () Bool)

(declare-fun lt!26671 () List!204)

(declare-fun isEmpty!48 (List!204) Bool)

(assert (=> b!18400 (= e!11751 (isEmpty!48 lt!26671))))

(declare-fun b!18398 () Bool)

(declare-datatypes ((tuple2!2124 0))(
  ( (tuple2!2125 (_1!1141 List!204) (_2!1141 BitStream!892)) )
))
(declare-fun e!11750 () tuple2!2124)

(assert (=> b!18398 (= e!11750 (tuple2!2125 Nil!201 thiss!1917))))

(declare-fun b!18399 () Bool)

(declare-fun lt!26669 () (_ BitVec 64))

(declare-fun lt!26670 () tuple2!2122)

(assert (=> b!18399 (= e!11750 (tuple2!2125 (Cons!200 (_1!1140 lt!26670) (bitStreamReadBitsIntoList!0 (_2!1127 lt!26192) (_2!1140 lt!26670) (bvsub nBits!604 lt!26669))) (_2!1140 lt!26670)))))

(assert (=> b!18399 (= lt!26670 (readBit!0 thiss!1917))))

(assert (=> b!18399 (= lt!26669 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun d!6080 () Bool)

(assert (=> d!6080 e!11751))

(declare-fun c!1387 () Bool)

(assert (=> d!6080 (= c!1387 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!6080 (= lt!26671 (_1!1141 e!11750))))

(declare-fun c!1386 () Bool)

(assert (=> d!6080 (= c!1386 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!6080 (bvsge nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> d!6080 (= (bitStreamReadBitsIntoList!0 (_2!1127 lt!26192) thiss!1917 nBits!604) lt!26671)))

(declare-fun b!18401 () Bool)

(declare-fun length!43 (List!204) Int)

(assert (=> b!18401 (= e!11751 (> (length!43 lt!26671) 0))))

(assert (= (and d!6080 c!1386) b!18398))

(assert (= (and d!6080 (not c!1386)) b!18399))

(assert (= (and d!6080 c!1387) b!18400))

(assert (= (and d!6080 (not c!1387)) b!18401))

(declare-fun m!24805 () Bool)

(assert (=> b!18400 m!24805))

(declare-fun m!24807 () Bool)

(assert (=> b!18399 m!24807))

(assert (=> b!18399 m!24777))

(declare-fun m!24809 () Bool)

(assert (=> b!18401 m!24809))

(assert (=> b!18212 d!6080))

(push 1)

(assert (not b!18368))

(assert (not bm!289))

(assert (not b!18373))

(assert (not d!6072))

(assert (not b!18375))

(assert (not b!18401))

(assert (not b!18374))

(assert (not b!18399))

(assert (not bm!290))

(assert (not d!6074))

(assert (not d!6070))

(assert (not b!18367))

(assert (not b!18371))

(assert (not b!18400))

(assert (not b!18389))

(check-sat)

(pop 1)

(push 1)

(check-sat)

