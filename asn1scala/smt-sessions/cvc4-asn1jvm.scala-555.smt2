; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!15906 () Bool)

(assert start!15906)

(declare-fun lt!127209 () (_ BitVec 64))

(declare-fun nBits!516 () (_ BitVec 64))

(declare-fun lt!127208 () (_ BitVec 64))

(declare-fun e!52811 () Bool)

(declare-fun b!80315 () Bool)

(assert (=> b!80315 (= e!52811 (and (= lt!127209 (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000)) (not (= lt!127209 (bvand (bvadd lt!127208 nBits!516) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> b!80315 (= lt!127209 (bvand lt!127208 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-datatypes ((array!3518 0))(
  ( (array!3519 (arr!2231 (Array (_ BitVec 32) (_ BitVec 8))) (size!1624 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!2810 0))(
  ( (BitStream!2811 (buf!2014 array!3518) (currentByte!3906 (_ BitVec 32)) (currentBit!3901 (_ BitVec 32))) )
))
(declare-fun thiss!1716 () BitStream!2810)

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!80315 (= lt!127208 (bitIndex!0 (size!1624 (buf!2014 thiss!1716)) (currentByte!3906 thiss!1716) (currentBit!3901 thiss!1716)))))

(declare-fun b!80313 () Bool)

(declare-fun res!66445 () Bool)

(assert (=> b!80313 (=> (not res!66445) (not e!52811))))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!80313 (= res!66445 (validate_offset_bits!1 ((_ sign_extend 32) (size!1624 (buf!2014 thiss!1716))) ((_ sign_extend 32) (currentByte!3906 thiss!1716)) ((_ sign_extend 32) (currentBit!3901 thiss!1716)) nBits!516))))

(declare-fun b!80316 () Bool)

(declare-fun e!52810 () Bool)

(declare-fun array_inv!1470 (array!3518) Bool)

(assert (=> b!80316 (= e!52810 (array_inv!1470 (buf!2014 thiss!1716)))))

(declare-fun b!80314 () Bool)

(declare-fun res!66443 () Bool)

(assert (=> b!80314 (=> (not res!66443) (not e!52811))))

(declare-datatypes ((Unit!5294 0))(
  ( (Unit!5295) )
))
(declare-datatypes ((tuple3!284 0))(
  ( (tuple3!285 (_1!3727 Unit!5294) (_2!3727 BitStream!2810) (_3!163 array!3518)) )
))
(declare-fun readBitsLoop!0 (BitStream!2810 (_ BitVec 64) array!3518 (_ BitVec 64) (_ BitVec 64)) tuple3!284)

(assert (=> b!80314 (= res!66443 (= (buf!2014 (_2!3727 (readBitsLoop!0 thiss!1716 nBits!516 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516))) (buf!2014 thiss!1716)))))

(declare-fun res!66444 () Bool)

(assert (=> start!15906 (=> (not res!66444) (not e!52811))))

(assert (=> start!15906 (= res!66444 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) (bvsle nBits!516 #b0000000000000000000000000000001111111111111111111111111111111000)))))

(assert (=> start!15906 e!52811))

(assert (=> start!15906 true))

(declare-fun inv!12 (BitStream!2810) Bool)

(assert (=> start!15906 (and (inv!12 thiss!1716) e!52810)))

(assert (= (and start!15906 res!66444) b!80313))

(assert (= (and b!80313 res!66445) b!80314))

(assert (= (and b!80314 res!66443) b!80315))

(assert (= start!15906 b!80316))

(declare-fun m!125771 () Bool)

(assert (=> b!80315 m!125771))

(declare-fun m!125773 () Bool)

(assert (=> b!80314 m!125773))

(declare-fun m!125775 () Bool)

(assert (=> b!80313 m!125775))

(declare-fun m!125777 () Bool)

(assert (=> start!15906 m!125777))

(declare-fun m!125779 () Bool)

(assert (=> b!80316 m!125779))

(push 1)

(assert (not b!80316))

(assert (not b!80313))

(assert (not b!80315))

(assert (not b!80314))

(assert (not start!15906))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun b!80392 () Bool)

(declare-fun e!52848 () tuple3!284)

(declare-fun lt!127501 () Unit!5294)

(assert (=> b!80392 (= e!52848 (tuple3!285 lt!127501 thiss!1716 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun lt!127517 () Unit!5294)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!3518) Unit!5294)

(assert (=> b!80392 (= lt!127517 (arrayBitRangesEqReflexiveLemma!0 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun call!1014 () Bool)

(assert (=> b!80392 call!1014))

(declare-fun lt!127520 () Unit!5294)

(assert (=> b!80392 (= lt!127520 lt!127517)))

(declare-fun lt!127518 () array!3518)

(assert (=> b!80392 (= lt!127518 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!127515 () array!3518)

(assert (=> b!80392 (= lt!127515 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!127499 () (_ BitVec 64))

(assert (=> b!80392 (= lt!127499 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!127516 () (_ BitVec 64))

(assert (=> b!80392 (= lt!127516 ((_ sign_extend 32) (size!1624 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!127530 () (_ BitVec 64))

(assert (=> b!80392 (= lt!127530 (bvmul lt!127516 #b0000000000000000000000000000000000000000000000000000000000001000))))

(declare-fun lt!127511 () (_ BitVec 64))

(assert (=> b!80392 (= lt!127511 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!127500 () (_ BitVec 64))

(assert (=> b!80392 (= lt!127500 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!3518 array!3518 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5294)

(assert (=> b!80392 (= lt!127501 (arrayBitRangesEqSlicedLemma!0 lt!127518 lt!127515 lt!127499 lt!127530 lt!127511 lt!127500))))

(declare-fun call!1015 () Bool)

(assert (=> b!80392 call!1015))

(declare-fun b!80393 () Bool)

(declare-fun e!52850 () Bool)

(declare-fun lt!127532 () tuple3!284)

(declare-fun bitAt!0 (array!3518 (_ BitVec 64)) Bool)

(declare-datatypes ((tuple2!7134 0))(
  ( (tuple2!7135 (_1!3731 BitStream!2810) (_2!3731 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!2810) tuple2!7134)

(assert (=> b!80393 (= e!52850 (= (bitAt!0 (_3!163 lt!127532) #b0000000000000000000000000000000000000000000000000000000000000000) (_2!3731 (readBitPure!0 thiss!1716))))))

(declare-fun d!25200 () Bool)

(declare-fun e!52849 () Bool)

(assert (=> d!25200 e!52849))

(declare-fun res!66510 () Bool)

(assert (=> d!25200 (=> (not res!66510) (not e!52849))))

(declare-fun lt!127510 () (_ BitVec 64))

(assert (=> d!25200 (= res!66510 (= (bvsub lt!127510 #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!1624 (buf!2014 (_2!3727 lt!127532))) (currentByte!3906 (_2!3727 lt!127532)) (currentBit!3901 (_2!3727 lt!127532)))))))

(assert (=> d!25200 (or (= (bvand lt!127510 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!127510 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!127510 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!127533 () (_ BitVec 64))

(assert (=> d!25200 (= lt!127510 (bvadd lt!127533 nBits!516))))

(assert (=> d!25200 (or (not (= (bvand lt!127533 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!127533 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!127533 nBits!516) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25200 (= lt!127533 (bitIndex!0 (size!1624 (buf!2014 thiss!1716)) (currentByte!3906 thiss!1716) (currentBit!3901 thiss!1716)))))

(assert (=> d!25200 (= lt!127532 e!52848)))

(declare-fun c!5656 () Bool)

(assert (=> d!25200 (= c!5656 (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516))))

(assert (=> d!25200 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) (bvsle nBits!516 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!25200 (= (readBitsLoop!0 thiss!1716 nBits!516 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) lt!127532)))

(declare-fun lt!127519 () tuple3!284)

(declare-fun e!52847 () Bool)

(declare-fun b!80394 () Bool)

(assert (=> b!80394 (= e!52847 (and (= (buf!2014 thiss!1716) (buf!2014 (_2!3727 lt!127519))) (= (size!1624 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!1624 (_3!163 lt!127519)))))))

(declare-fun lt!127514 () (_ BitVec 64))

(declare-fun bm!1011 () Bool)

(declare-fun arrayBitRangesEq!0 (array!3518 array!3518 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> bm!1011 (= call!1014 (arrayBitRangesEq!0 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) (ite c!5656 (_3!163 lt!127519) (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) (ite c!5656 lt!127514 #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!5656 #b0000000000000000000000000000000000000000000000000000000000000000 (bvmul ((_ sign_extend 32) (size!1624 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun b!80395 () Bool)

(declare-fun res!66511 () Bool)

(assert (=> b!80395 (=> (not res!66511) (not e!52849))))

(assert (=> b!80395 (= res!66511 (and (= (buf!2014 thiss!1716) (buf!2014 (_2!3727 lt!127532))) (= (size!1624 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!1624 (_3!163 lt!127532)))))))

(declare-fun b!80396 () Bool)

(declare-fun res!66512 () Bool)

(assert (=> b!80396 (=> (not res!66512) (not e!52849))))

(assert (=> b!80396 (= res!66512 e!52850)))

(declare-fun res!66509 () Bool)

(assert (=> b!80396 (=> res!66509 e!52850)))

(assert (=> b!80396 (= res!66509 (not (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516)))))

(declare-fun b!80397 () Bool)

(declare-fun res!66507 () Bool)

(assert (=> b!80397 (=> (not res!66507) (not e!52849))))

(assert (=> b!80397 (= res!66507 (arrayBitRangesEq!0 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!163 lt!127532) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1012 () Bool)

(assert (=> bm!1012 (= call!1015 (arrayBitRangesEq!0 (ite c!5656 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!127518) (ite c!5656 (_3!163 lt!127519) lt!127515) (ite c!5656 #b0000000000000000000000000000000000000000000000000000000000000000 lt!127511) (ite c!5656 #b0000000000000000000000000000000000000000000000000000000000000000 lt!127500)))))

(declare-fun b!80398 () Bool)

(declare-fun lt!127513 () Unit!5294)

(assert (=> b!80398 (= e!52848 (tuple3!285 lt!127513 (_2!3727 lt!127519) (_3!163 lt!127519)))))

(declare-datatypes ((tuple2!7138 0))(
  ( (tuple2!7139 (_1!3733 Bool) (_2!3733 BitStream!2810)) )
))
(declare-fun lt!127527 () tuple2!7138)

(declare-fun readBit!0 (BitStream!2810) tuple2!7138)

(assert (=> b!80398 (= lt!127527 (readBit!0 thiss!1716))))

(declare-fun lt!127531 () (_ BitVec 32))

(assert (=> b!80398 (= lt!127531 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!127525 () (_ BitVec 32))

(assert (=> b!80398 (= lt!127525 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!127507 () array!3518)

(assert (=> b!80398 (= lt!127507 (array!3519 (store (arr!2231 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!127531 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!2231 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!127531)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!127525)))) ((_ sign_extend 24) (ite (_1!3733 lt!127527) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!127525) #b00000000))))) (size!1624 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!127524 () (_ BitVec 64))

(assert (=> b!80398 (= lt!127524 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!127508 () (_ BitVec 64))

(assert (=> b!80398 (= lt!127508 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!127512 () Unit!5294)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!2810 BitStream!2810 (_ BitVec 64) (_ BitVec 64)) Unit!5294)

(assert (=> b!80398 (= lt!127512 (validateOffsetBitsIneqLemma!0 thiss!1716 (_2!3733 lt!127527) lt!127524 lt!127508))))

(assert (=> b!80398 (validate_offset_bits!1 ((_ sign_extend 32) (size!1624 (buf!2014 (_2!3733 lt!127527)))) ((_ sign_extend 32) (currentByte!3906 (_2!3733 lt!127527))) ((_ sign_extend 32) (currentBit!3901 (_2!3733 lt!127527))) (bvsub lt!127524 lt!127508))))

(declare-fun lt!127506 () Unit!5294)

(assert (=> b!80398 (= lt!127506 lt!127512)))

(assert (=> b!80398 (= lt!127519 (readBitsLoop!0 (_2!3733 lt!127527) nBits!516 lt!127507 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) nBits!516))))

(declare-fun res!66508 () Bool)

(assert (=> b!80398 (= res!66508 (= (bvsub (bvadd (bitIndex!0 (size!1624 (buf!2014 thiss!1716)) (currentByte!3906 thiss!1716) (currentBit!3901 thiss!1716)) nBits!516) #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!1624 (buf!2014 (_2!3727 lt!127519))) (currentByte!3906 (_2!3727 lt!127519)) (currentBit!3901 (_2!3727 lt!127519)))))))

(assert (=> b!80398 (=> (not res!66508) (not e!52847))))

(assert (=> b!80398 e!52847))

(declare-fun lt!127528 () Unit!5294)

(declare-fun Unit!5304 () Unit!5294)

(assert (=> b!80398 (= lt!127528 Unit!5304)))

(declare-fun lt!127523 () (_ BitVec 32))

(assert (=> b!80398 (= lt!127523 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!127505 () (_ BitVec 32))

(assert (=> b!80398 (= lt!127505 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!127502 () Unit!5294)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!3518 (_ BitVec 64) Bool) Unit!5294)

(assert (=> b!80398 (= lt!127502 (arrayBitRangesUpdatedAtLemma!0 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 (_1!3733 lt!127527)))))

(assert (=> b!80398 (arrayBitRangesEq!0 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) (array!3519 (store (arr!2231 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!127523 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!2231 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!127523)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!127505)))) ((_ sign_extend 24) (ite (_1!3733 lt!127527) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!127505) #b00000000))))) (size!1624 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!127509 () Unit!5294)

(assert (=> b!80398 (= lt!127509 lt!127502)))

(assert (=> b!80398 (= lt!127514 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!127504 () Unit!5294)

(declare-fun arrayBitRangesEqTransitive!0 (array!3518 array!3518 array!3518 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5294)

(assert (=> b!80398 (= lt!127504 (arrayBitRangesEqTransitive!0 (array!3519 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!127507 (_3!163 lt!127519) lt!127514 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!80398 call!1014))

(declare-fun lt!127521 () Unit!5294)

(assert (=> b!80398 (= lt!127521 lt!127504)))

(assert (=> b!80398 call!1015))

(declare-fun lt!127529 () Unit!5294)

(declare-fun Unit!5305 () Unit!5294)

(assert (=> b!80398 (= lt!127529 Unit!5305)))

(declare-fun lt!127503 () Unit!5294)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!3518 array!3518 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5294)

(assert (=> b!80398 (= lt!127503 (arrayBitRangesEqImpliesEq!0 lt!127507 (_3!163 lt!127519) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!80398 (= (bitAt!0 lt!127507 #b0000000000000000000000000000000000000000000000000000000000000000) (bitAt!0 (_3!163 lt!127519) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!127526 () Unit!5294)

(assert (=> b!80398 (= lt!127526 lt!127503)))

(declare-fun lt!127522 () Unit!5294)

(declare-fun Unit!5306 () Unit!5294)

(assert (=> b!80398 (= lt!127522 Unit!5306)))

(declare-fun lt!127498 () Bool)

(assert (=> b!80398 (= lt!127498 (= (bitAt!0 (_3!163 lt!127519) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!3733 lt!127527)))))

(declare-fun Unit!5307 () Unit!5294)

(assert (=> b!80398 (= lt!127513 Unit!5307)))

(assert (=> b!80398 lt!127498))

(declare-fun b!80399 () Bool)

(declare-datatypes ((List!797 0))(
  ( (Nil!794) (Cons!793 (h!912 Bool) (t!1547 List!797)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!2810 array!3518 (_ BitVec 64) (_ BitVec 64)) List!797)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!2810 BitStream!2810 (_ BitVec 64)) List!797)

(assert (=> b!80399 (= e!52849 (= (byteArrayBitContentToList!0 (_2!3727 lt!127532) (_3!163 lt!127532) #b0000000000000000000000000000000000000000000000000000000000000000 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000)) (bitStreamReadBitsIntoList!0 (_2!3727 lt!127532) thiss!1716 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80399 (or (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80399 (or (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80400 () Bool)

(declare-fun res!66513 () Bool)

(assert (=> b!80400 (=> (not res!66513) (not e!52849))))

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!80400 (= res!66513 (invariant!0 (currentBit!3901 (_2!3727 lt!127532)) (currentByte!3906 (_2!3727 lt!127532)) (size!1624 (buf!2014 (_2!3727 lt!127532)))))))

(assert (= (and d!25200 c!5656) b!80398))

(assert (= (and d!25200 (not c!5656)) b!80392))

(assert (= (and b!80398 res!66508) b!80394))

(assert (= (or b!80398 b!80392) bm!1012))

(assert (= (or b!80398 b!80392) bm!1011))

(assert (= (and d!25200 res!66510) b!80395))

(assert (= (and b!80395 res!66511) b!80397))

(assert (= (and b!80397 res!66507) b!80396))

(assert (= (and b!80396 (not res!66509)) b!80393))

(assert (= (and b!80396 res!66512) b!80400))

(assert (= (and b!80400 res!66513) b!80399))

(declare-fun m!125845 () Bool)

(assert (=> b!80400 m!125845))

(declare-fun m!125847 () Bool)

(assert (=> bm!1011 m!125847))

(declare-fun m!125849 () Bool)

(assert (=> b!80397 m!125849))

(declare-fun m!125851 () Bool)

(assert (=> b!80399 m!125851))

(declare-fun m!125853 () Bool)

(assert (=> b!80399 m!125853))

(declare-fun m!125855 () Bool)

(assert (=> bm!1012 m!125855))

(declare-fun m!125857 () Bool)

(assert (=> b!80392 m!125857))

(declare-fun m!125859 () Bool)

(assert (=> b!80392 m!125859))

(declare-fun m!125861 () Bool)

(assert (=> d!25200 m!125861))

(assert (=> d!25200 m!125771))

(declare-fun m!125863 () Bool)

(assert (=> b!80393 m!125863))

(declare-fun m!125865 () Bool)

(assert (=> b!80393 m!125865))

(declare-fun m!125867 () Bool)

(assert (=> b!80398 m!125867))

(declare-fun m!125869 () Bool)

(assert (=> b!80398 m!125869))

(declare-fun m!125871 () Bool)

(assert (=> b!80398 m!125871))

(declare-fun m!125873 () Bool)

(assert (=> b!80398 m!125873))

(declare-fun m!125875 () Bool)

(assert (=> b!80398 m!125875))

(declare-fun m!125877 () Bool)

(assert (=> b!80398 m!125877))

(declare-fun m!125879 () Bool)

(assert (=> b!80398 m!125879))

(declare-fun m!125881 () Bool)

(assert (=> b!80398 m!125881))

(declare-fun m!125883 () Bool)

(assert (=> b!80398 m!125883))

(declare-fun m!125885 () Bool)

(assert (=> b!80398 m!125885))

(declare-fun m!125887 () Bool)

(assert (=> b!80398 m!125887))

(declare-fun m!125889 () Bool)

(assert (=> b!80398 m!125889))

(declare-fun m!125891 () Bool)

(assert (=> b!80398 m!125891))

(declare-fun m!125893 () Bool)

(assert (=> b!80398 m!125893))

(declare-fun m!125895 () Bool)

(assert (=> b!80398 m!125895))

(assert (=> b!80398 m!125771))

(declare-fun m!125897 () Bool)

(assert (=> b!80398 m!125897))

(declare-fun m!125899 () Bool)

(assert (=> b!80398 m!125899))

(assert (=> b!80314 d!25200))

(declare-fun d!25206 () Bool)

(declare-fun e!52857 () Bool)

(assert (=> d!25206 e!52857))

(declare-fun res!66525 () Bool)

(assert (=> d!25206 (=> (not res!66525) (not e!52857))))

(declare-fun lt!127585 () (_ BitVec 64))

(declare-fun lt!127583 () (_ BitVec 64))

(declare-fun lt!127582 () (_ BitVec 64))

(assert (=> d!25206 (= res!66525 (= lt!127583 (bvsub lt!127582 lt!127585)))))

(assert (=> d!25206 (or (= (bvand lt!127582 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!127585 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!127582 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!127582 lt!127585) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun remainingBits!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))

(assert (=> d!25206 (= lt!127585 (remainingBits!0 ((_ sign_extend 32) (size!1624 (buf!2014 thiss!1716))) ((_ sign_extend 32) (currentByte!3906 thiss!1716)) ((_ sign_extend 32) (currentBit!3901 thiss!1716))))))

(declare-fun lt!127586 () (_ BitVec 64))

(declare-fun lt!127587 () (_ BitVec 64))

(assert (=> d!25206 (= lt!127582 (bvmul lt!127586 lt!127587))))

(assert (=> d!25206 (or (= lt!127586 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!127587 (bvsdiv (bvmul lt!127586 lt!127587) lt!127586)))))

(assert (=> d!25206 (= lt!127587 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!25206 (= lt!127586 ((_ sign_extend 32) (size!1624 (buf!2014 thiss!1716))))))

(assert (=> d!25206 (= lt!127583 (bvadd (bvmul ((_ sign_extend 32) (currentByte!3906 thiss!1716)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!3901 thiss!1716))))))

(assert (=> d!25206 (invariant!0 (currentBit!3901 thiss!1716) (currentByte!3906 thiss!1716) (size!1624 (buf!2014 thiss!1716)))))

(assert (=> d!25206 (= (bitIndex!0 (size!1624 (buf!2014 thiss!1716)) (currentByte!3906 thiss!1716) (currentBit!3901 thiss!1716)) lt!127583)))

(declare-fun b!80414 () Bool)

(declare-fun res!66526 () Bool)

(assert (=> b!80414 (=> (not res!66526) (not e!52857))))

(assert (=> b!80414 (= res!66526 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!127583))))

