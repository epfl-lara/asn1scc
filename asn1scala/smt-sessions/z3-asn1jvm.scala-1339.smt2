; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!37488 () Bool)

(assert start!37488)

(declare-fun res!141083 () Bool)

(declare-fun e!118452 () Bool)

(assert (=> start!37488 (=> (not res!141083) (not e!118452))))

(declare-fun uintSizeInBytes!5 () (_ BitVec 32))

(declare-fun v!147 () (_ BitVec 64))

(declare-fun i!474 () (_ BitVec 32))

(get-info :version)

(declare-datatypes ((Unit!11945 0))(
  ( (Unit!11946) )
))
(declare-datatypes ((ControlFlow!80 0))(
  ( (Return!79 (value!6924 (_ BitVec 64))) (Proceed!79 (value!6925 Unit!11945)) )
))
(declare-fun Unit!11947 () Unit!11945)

(assert (=> start!37488 (= res!141083 (and (bvsge uintSizeInBytes!5 #b00000000000000000000000000000001) (bvsle uintSizeInBytes!5 #b00000000000000000000000000001001) (not ((_ is Return!79) (ite (bvsle (bvand v!147 (bvshl #b0000000000000000000000000000000000000000000000000000000010000000 ((_ sign_extend 32) (bvmul #b00000000000000000000000000001000 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001))))) #b0000000000000000000000000000000000000000000000000000000000000000) (Return!79 v!147) (Proceed!79 Unit!11947)))) (bvsle i!474 #b00000000000000000000000000000111) (bvsge i!474 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)) (bvsge i!474 uintSizeInBytes!5) (bvsge (bvsub i!474 #b00000000000000000000000000000001) uintSizeInBytes!5)))))

(assert (=> start!37488 e!118452))

(assert (=> start!37488 true))

(declare-fun b!169776 () Bool)

(declare-datatypes ((tuple3!992 0))(
  ( (tuple3!993 (_1!7952 Unit!11945) (_2!7952 (_ BitVec 32)) (_3!622 (_ BitVec 64))) )
))
(declare-fun lt!262279 () tuple3!992)

(assert (=> b!169776 (= e!118452 (or (bvsgt (_2!7952 lt!262279) #b00000000000000000000000000000111) (bvslt (_2!7952 lt!262279) (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001))))))

(declare-fun vv!30 () (_ BitVec 64))

(declare-fun uint2intWhile!0 ((_ BitVec 32) (_ BitVec 64) (_ BitVec 32) (_ BitVec 64)) tuple3!992)

(assert (=> b!169776 (= lt!262279 (uint2intWhile!0 uintSizeInBytes!5 v!147 (bvsub i!474 #b00000000000000000000000000000001) (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474))))))

(assert (= (and start!37488 res!141083) b!169776))

(declare-fun m!269557 () Bool)

(assert (=> b!169776 m!269557))

(declare-fun m!269559 () Bool)

(assert (=> b!169776 m!269559))

(check-sat (not b!169776))
(check-sat)
(get-model)

(declare-fun d!60001 () Bool)

(declare-fun e!118460 () Bool)

(assert (=> d!60001 e!118460))

(declare-fun res!141092 () Bool)

(assert (=> d!60001 (=> (not res!141092) (not e!118460))))

(declare-fun lt!262291 () tuple3!992)

(declare-fun lt!262293 () (_ BitVec 32))

(assert (=> d!60001 (= res!141092 (bvsle (_2!7952 lt!262291) (bvsub lt!262293 #b00000000000000000000000000000001)))))

(assert (=> d!60001 (or (= (bvand lt!262293 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!262293 #b10000000000000000000000000000000) (bvand (bvsub lt!262293 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(assert (=> d!60001 (= lt!262293 #b00000000000000000000000000001000)))

(declare-fun e!118461 () tuple3!992)

(assert (=> d!60001 (= lt!262291 e!118461)))

(declare-fun c!8768 () Bool)

(declare-fun lt!262292 () (_ BitVec 32))

(assert (=> d!60001 (= c!8768 (bvsge lt!262292 uintSizeInBytes!5))))

(assert (=> d!60001 (= lt!262292 (bvsub (bvsub i!474 #b00000000000000000000000000000001) #b00000000000000000000000000000001))))

(declare-fun lt!262294 () (_ BitVec 64))

(assert (=> d!60001 (= lt!262294 (bvor (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474)) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) (bvsub i!474 #b00000000000000000000000000000001))))))

(assert (=> d!60001 (and (bvsle (bvsub i!474 #b00000000000000000000000000000001) #b00000000000000000000000000000111) (bvsge (bvsub i!474 #b00000000000000000000000000000001) (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)) (bvsge (bvsub i!474 #b00000000000000000000000000000001) uintSizeInBytes!5))))

(assert (=> d!60001 (= (uint2intWhile!0 uintSizeInBytes!5 v!147 (bvsub i!474 #b00000000000000000000000000000001) (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474))) lt!262291)))

(declare-fun b!169788 () Bool)

(assert (=> b!169788 (= e!118461 (uint2intWhile!0 uintSizeInBytes!5 v!147 lt!262292 lt!262294))))

(declare-fun b!169791 () Bool)

(assert (=> b!169791 (= e!118460 (bvslt (_2!7952 lt!262291) uintSizeInBytes!5))))

(declare-fun b!169789 () Bool)

(declare-fun Unit!11951 () Unit!11945)

(assert (=> b!169789 (= e!118461 (tuple3!993 Unit!11951 lt!262292 lt!262294))))

(declare-fun b!169790 () Bool)

(declare-fun res!141091 () Bool)

(assert (=> b!169790 (=> (not res!141091) (not e!118460))))

(assert (=> b!169790 (= res!141091 (bvsge (_2!7952 lt!262291) (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)))))

(assert (=> b!169790 (or (= (bvand uintSizeInBytes!5 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand uintSizeInBytes!5 #b10000000000000000000000000000000) (bvand (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(assert (= (and d!60001 c!8768) b!169788))

(assert (= (and d!60001 (not c!8768)) b!169789))

(assert (= (and d!60001 res!141092) b!169790))

(assert (= (and b!169790 res!141091) b!169791))

(declare-fun m!269565 () Bool)

(assert (=> d!60001 m!269565))

(declare-fun m!269567 () Bool)

(assert (=> b!169788 m!269567))

(assert (=> b!169776 d!60001))

(check-sat (not b!169788))
(check-sat)
