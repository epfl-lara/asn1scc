; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!37496 () Bool)

(assert start!37496)

(declare-fun res!141101 () Bool)

(declare-fun e!118470 () Bool)

(assert (=> start!37496 (=> (not res!141101) (not e!118470))))

(declare-fun uintSizeInBytes!5 () (_ BitVec 32))

(declare-fun i!474 () (_ BitVec 32))

(declare-fun v!147 () (_ BitVec 64))

(declare-datatypes ((Unit!11953 0))(
  ( (Unit!11954) )
))
(declare-datatypes ((ControlFlow!82 0))(
  ( (Return!81 (value!6933 (_ BitVec 64))) (Proceed!81 (value!6934 Unit!11953)) )
))
(declare-fun Unit!11955 () Unit!11953)

(assert (=> start!37496 (= res!141101 (and (bvsge uintSizeInBytes!5 #b00000000000000000000000000000001) (bvsle uintSizeInBytes!5 #b00000000000000000000000000001001) (not (is-Return!81 (ite (bvsle (bvand v!147 (bvshl #b0000000000000000000000000000000000000000000000000000000010000000 ((_ sign_extend 32) (bvmul #b00000000000000000000000000001000 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001))))) #b0000000000000000000000000000000000000000000000000000000000000000) (Return!81 v!147) (Proceed!81 Unit!11955)))) (bvsle i!474 #b00000000000000000000000000000111) (bvsge i!474 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)) (bvsge i!474 uintSizeInBytes!5) (bvsge (bvsub i!474 #b00000000000000000000000000000001) uintSizeInBytes!5)))))

(assert (=> start!37496 e!118470))

(assert (=> start!37496 true))

(declare-fun vv!30 () (_ BitVec 64))

(declare-fun b!169806 () Bool)

(declare-datatypes ((tuple3!996 0))(
  ( (tuple3!997 (_1!7954 Unit!11953) (_2!7954 (_ BitVec 32)) (_3!624 (_ BitVec 64))) )
))
(declare-fun uint2intWhile!0 ((_ BitVec 32) (_ BitVec 64) (_ BitVec 32) (_ BitVec 64)) tuple3!996)

(assert (=> b!169806 (= e!118470 (bvsge (_2!7954 (uint2intWhile!0 uintSizeInBytes!5 v!147 (bvsub i!474 #b00000000000000000000000000000001) (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474)))) uintSizeInBytes!5))))

(assert (= (and start!37496 res!141101) b!169806))

(declare-fun m!269573 () Bool)

(assert (=> b!169806 m!269573))

(declare-fun m!269575 () Bool)

(assert (=> b!169806 m!269575))

(push 1)

(assert (not b!169806))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

