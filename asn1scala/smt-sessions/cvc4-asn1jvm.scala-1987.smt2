; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!51096 () Bool)

(assert start!51096)

(declare-fun res!199719 () Bool)

(declare-fun e!165058 () Bool)

(assert (=> start!51096 (=> (not res!199719) (not e!165058))))

(declare-fun v!315 () (_ BitVec 64))

(assert (=> start!51096 (= res!199719 (bvslt v!315 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> start!51096 e!165058))

(assert (=> start!51096 true))

(declare-fun b!238921 () Bool)

(declare-fun e!165059 () Bool)

(assert (=> b!238921 (= e!165058 e!165059)))

(declare-fun res!199718 () Bool)

(assert (=> b!238921 (=> (not res!199718) (not e!165059))))

(declare-fun i!888 () (_ BitVec 32))

(declare-fun lt!373747 () (_ BitVec 32))

(assert (=> b!238921 (= res!199718 (and (bvsge i!888 (bvsub lt!373747 #b00000000000000000000000000000001)) (bvsle i!888 #b00000000000000000000000001000000) (bvslt i!888 #b00000000000000000000000001000000) (bvslt (bvadd #b00000000000000000000000000000001 i!888) #b00000000000000000000000001000000)))))

(declare-fun lt!373748 () (_ BitVec 32))

(assert (=> b!238921 (= lt!373747 (bvmul #b00000000000000000000000000001000 lt!373748))))

(assert (=> b!238921 (= lt!373748 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!315 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!315 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!315 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!315 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!315 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(declare-fun b!238922 () Bool)

(assert (=> b!238922 (= e!165059 (and (not (= lt!373748 #b00000000000000000000000000000000)) (not (= #b00000000000000000000000000001000 (bvsdiv lt!373747 lt!373748)))))))

(declare-datatypes ((Unit!17411 0))(
  ( (Unit!17412) )
))
(declare-datatypes ((tuple3!1528 0))(
  ( (tuple3!1529 (_1!11013 Unit!17411) (_2!11013 (_ BitVec 32)) (_3!906 Bool)) )
))
(declare-fun lt!373749 () tuple3!1528)

(declare-fun allOnes!72 () Bool)

(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1528)

(assert (=> b!238922 (= lt!373749 (GetBytesNeededForNegativeNumberWhile!0 v!315 (bvadd #b00000000000000000000000000000001 i!888) (and allOnes!72 (not (= (bvand v!315 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) i!888))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and start!51096 res!199719) b!238921))

(assert (= (and b!238921 res!199718) b!238922))

(declare-fun m!360973 () Bool)

(assert (=> b!238922 m!360973))

(push 1)

(assert (not b!238922))

(check-sat)

(pop 1)

(push 1)

(check-sat)

