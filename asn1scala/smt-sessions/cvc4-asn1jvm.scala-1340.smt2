; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!37500 () Bool)

(assert start!37500)

(declare-fun res!141107 () Bool)

(declare-fun e!118476 () Bool)

(assert (=> start!37500 (=> (not res!141107) (not e!118476))))

(declare-fun v!147 () (_ BitVec 64))

(declare-fun i!474 () (_ BitVec 32))

(declare-fun uintSizeInBytes!5 () (_ BitVec 32))

(declare-datatypes ((Unit!11959 0))(
  ( (Unit!11960) )
))
(declare-datatypes ((ControlFlow!84 0))(
  ( (Return!83 (value!6937 (_ BitVec 64))) (Proceed!83 (value!6938 Unit!11959)) )
))
(declare-fun Unit!11961 () Unit!11959)

(assert (=> start!37500 (= res!141107 (and (bvsge uintSizeInBytes!5 #b00000000000000000000000000000001) (bvsle uintSizeInBytes!5 #b00000000000000000000000000001001) (not (is-Return!83 (ite (bvsle (bvand v!147 (bvshl #b0000000000000000000000000000000000000000000000000000000010000000 ((_ sign_extend 32) (bvmul #b00000000000000000000000000001000 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001))))) #b0000000000000000000000000000000000000000000000000000000000000000) (Return!83 v!147) (Proceed!83 Unit!11961)))) (bvsle i!474 #b00000000000000000000000000000111) (bvsge i!474 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)) (bvsge i!474 uintSizeInBytes!5) (bvsge (bvsub i!474 #b00000000000000000000000000000001) uintSizeInBytes!5)))))

(assert (=> start!37500 e!118476))

(assert (=> start!37500 true))

(declare-fun vv!30 () (_ BitVec 64))

(declare-fun b!169812 () Bool)

(declare-datatypes ((tuple3!1000 0))(
  ( (tuple3!1001 (_1!7956 Unit!11959) (_2!7956 (_ BitVec 32)) (_3!626 (_ BitVec 64))) )
))
(declare-fun uint2intWhile!0 ((_ BitVec 32) (_ BitVec 64) (_ BitVec 32) (_ BitVec 64)) tuple3!1000)

(assert (=> b!169812 (= e!118476 (bvsge (_2!7956 (uint2intWhile!0 uintSizeInBytes!5 v!147 (bvsub i!474 #b00000000000000000000000000000001) (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474)))) uintSizeInBytes!5))))

(assert (= (and start!37500 res!141107) b!169812))

(declare-fun m!269581 () Bool)

(assert (=> b!169812 m!269581))

(declare-fun m!269583 () Bool)

(assert (=> b!169812 m!269583))

(push 1)

(assert (not b!169812))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

