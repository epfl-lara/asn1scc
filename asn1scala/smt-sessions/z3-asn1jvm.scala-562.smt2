; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!15976 () Bool)

(assert start!15976)

(declare-fun res!66789 () Bool)

(declare-fun e!53091 () Bool)

(assert (=> start!15976 (=> (not res!66789) (not e!53091))))

(declare-fun nBits!516 () (_ BitVec 64))

(assert (=> start!15976 (= res!66789 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) (bvsle nBits!516 #b0000000000000000000000000000001111111111111111111111111111111000)))))

(assert (=> start!15976 e!53091))

(assert (=> start!15976 true))

(declare-datatypes ((array!3561 0))(
  ( (array!3562 (arr!2254 (Array (_ BitVec 32) (_ BitVec 8))) (size!1644 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!2850 0))(
  ( (BitStream!2851 (buf!2034 array!3561) (currentByte!3932 (_ BitVec 32)) (currentBit!3927 (_ BitVec 32))) )
))
(declare-fun thiss!1716 () BitStream!2850)

(declare-fun e!53090 () Bool)

(declare-fun inv!12 (BitStream!2850) Bool)

(assert (=> start!15976 (and (inv!12 thiss!1716) e!53090)))

(declare-fun b!80737 () Bool)

(declare-fun res!66790 () Bool)

(assert (=> b!80737 (=> (not res!66790) (not e!53091))))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!80737 (= res!66790 (validate_offset_bits!1 ((_ sign_extend 32) (size!1644 (buf!2034 thiss!1716))) ((_ sign_extend 32) (currentByte!3932 thiss!1716)) ((_ sign_extend 32) (currentBit!3927 thiss!1716)) nBits!516))))

(declare-fun b!80738 () Bool)

(declare-datatypes ((Unit!5346 0))(
  ( (Unit!5347) )
))
(declare-datatypes ((tuple3!324 0))(
  ( (tuple3!325 (_1!3753 Unit!5346) (_2!3753 BitStream!2850) (_3!183 array!3561)) )
))
(declare-fun readBitsLoop!0 (BitStream!2850 (_ BitVec 64) array!3561 (_ BitVec 64) (_ BitVec 64)) tuple3!324)

(assert (=> b!80738 (= e!53091 (not (= (buf!2034 (_2!3753 (readBitsLoop!0 thiss!1716 nBits!516 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516))) (buf!2034 thiss!1716))))))

(declare-fun b!80739 () Bool)

(declare-fun array_inv!1490 (array!3561) Bool)

(assert (=> b!80739 (= e!53090 (array_inv!1490 (buf!2034 thiss!1716)))))

(assert (= (and start!15976 res!66789) b!80737))

(assert (= (and b!80737 res!66790) b!80738))

(assert (= start!15976 b!80739))

(declare-fun m!126221 () Bool)

(assert (=> start!15976 m!126221))

(declare-fun m!126223 () Bool)

(assert (=> b!80737 m!126223))

(declare-fun m!126225 () Bool)

(assert (=> b!80738 m!126225))

(declare-fun m!126227 () Bool)

(assert (=> b!80739 m!126227))

(check-sat (not b!80739) (not b!80738) (not b!80737) (not start!15976))
(check-sat)
(get-model)

(declare-fun d!25228 () Bool)

(assert (=> d!25228 (= (array_inv!1490 (buf!2034 thiss!1716)) (bvsge (size!1644 (buf!2034 thiss!1716)) #b00000000000000000000000000000000))))

(assert (=> b!80739 d!25228))

(declare-fun b!80777 () Bool)

(declare-fun res!66814 () Bool)

(declare-fun e!53116 () Bool)

(assert (=> b!80777 (=> (not res!66814) (not e!53116))))

(declare-fun lt!127851 () tuple3!324)

(assert (=> b!80777 (= res!66814 (and (= (buf!2034 thiss!1716) (buf!2034 (_2!3753 lt!127851))) (= (size!1644 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!1644 (_3!183 lt!127851)))))))

(declare-fun b!80778 () Bool)

(declare-datatypes ((List!798 0))(
  ( (Nil!795) (Cons!794 (h!913 Bool) (t!1548 List!798)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!2850 array!3561 (_ BitVec 64) (_ BitVec 64)) List!798)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!2850 BitStream!2850 (_ BitVec 64)) List!798)

(assert (=> b!80778 (= e!53116 (= (byteArrayBitContentToList!0 (_2!3753 lt!127851) (_3!183 lt!127851) #b0000000000000000000000000000000000000000000000000000000000000000 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000)) (bitStreamReadBitsIntoList!0 (_2!3753 lt!127851) thiss!1716 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!80778 (or (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!80778 (or (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!80779 () Bool)

(declare-fun res!66818 () Bool)

(assert (=> b!80779 (=> (not res!66818) (not e!53116))))

(declare-fun e!53115 () Bool)

(assert (=> b!80779 (= res!66818 e!53115)))

(declare-fun res!66817 () Bool)

(assert (=> b!80779 (=> res!66817 e!53115)))

(assert (=> b!80779 (= res!66817 (not (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516)))))

(declare-fun b!80781 () Bool)

(declare-fun res!66815 () Bool)

(assert (=> b!80781 (=> (not res!66815) (not e!53116))))

(declare-fun arrayBitRangesEq!0 (array!3561 array!3561 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!80781 (= res!66815 (arrayBitRangesEq!0 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!183 lt!127851) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!80782 () Bool)

(declare-fun res!66819 () Bool)

(assert (=> b!80782 (=> (not res!66819) (not e!53116))))

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!80782 (= res!66819 (invariant!0 (currentBit!3927 (_2!3753 lt!127851)) (currentByte!3932 (_2!3753 lt!127851)) (size!1644 (buf!2034 (_2!3753 lt!127851)))))))

(declare-fun bm!1019 () Bool)

(declare-fun call!1022 () Bool)

(declare-fun c!5664 () Bool)

(declare-fun lt!127829 () (_ BitVec 64))

(declare-fun lt!127827 () tuple3!324)

(assert (=> bm!1019 (= call!1022 (arrayBitRangesEq!0 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) (ite c!5664 (_3!183 lt!127827) (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) (ite c!5664 lt!127829 #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!5664 #b0000000000000000000000000000000000000000000000000000000000000000 (bvmul ((_ sign_extend 32) (size!1644 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun b!80783 () Bool)

(declare-fun e!53118 () tuple3!324)

(declare-fun lt!127811 () Unit!5346)

(assert (=> b!80783 (= e!53118 (tuple3!325 lt!127811 (_2!3753 lt!127827) (_3!183 lt!127827)))))

(declare-datatypes ((tuple2!7140 0))(
  ( (tuple2!7141 (_1!3755 Bool) (_2!3755 BitStream!2850)) )
))
(declare-fun lt!127839 () tuple2!7140)

(declare-fun readBit!0 (BitStream!2850) tuple2!7140)

(assert (=> b!80783 (= lt!127839 (readBit!0 thiss!1716))))

(declare-fun lt!127842 () (_ BitVec 32))

(assert (=> b!80783 (= lt!127842 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!127836 () (_ BitVec 32))

(assert (=> b!80783 (= lt!127836 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!127843 () array!3561)

(assert (=> b!80783 (= lt!127843 (array!3562 (store (arr!2254 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!127842 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!2254 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!127842)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!127836)))) ((_ sign_extend 24) (ite (_1!3755 lt!127839) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!127836) #b00000000))))) (size!1644 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!127850 () (_ BitVec 64))

(assert (=> b!80783 (= lt!127850 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!127837 () (_ BitVec 64))

(assert (=> b!80783 (= lt!127837 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!127812 () Unit!5346)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!2850 BitStream!2850 (_ BitVec 64) (_ BitVec 64)) Unit!5346)

(assert (=> b!80783 (= lt!127812 (validateOffsetBitsIneqLemma!0 thiss!1716 (_2!3755 lt!127839) lt!127850 lt!127837))))

(assert (=> b!80783 (validate_offset_bits!1 ((_ sign_extend 32) (size!1644 (buf!2034 (_2!3755 lt!127839)))) ((_ sign_extend 32) (currentByte!3932 (_2!3755 lt!127839))) ((_ sign_extend 32) (currentBit!3927 (_2!3755 lt!127839))) (bvsub lt!127850 lt!127837))))

(declare-fun lt!127845 () Unit!5346)

(assert (=> b!80783 (= lt!127845 lt!127812)))

(assert (=> b!80783 (= lt!127827 (readBitsLoop!0 (_2!3755 lt!127839) nBits!516 lt!127843 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) nBits!516))))

(declare-fun res!66813 () Bool)

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!80783 (= res!66813 (= (bvsub (bvadd (bitIndex!0 (size!1644 (buf!2034 thiss!1716)) (currentByte!3932 thiss!1716) (currentBit!3927 thiss!1716)) nBits!516) #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!1644 (buf!2034 (_2!3753 lt!127827))) (currentByte!3932 (_2!3753 lt!127827)) (currentBit!3927 (_2!3753 lt!127827)))))))

(declare-fun e!53117 () Bool)

(assert (=> b!80783 (=> (not res!66813) (not e!53117))))

(assert (=> b!80783 e!53117))

(declare-fun lt!127849 () Unit!5346)

(declare-fun Unit!5350 () Unit!5346)

(assert (=> b!80783 (= lt!127849 Unit!5350)))

(declare-fun lt!127824 () (_ BitVec 32))

(assert (=> b!80783 (= lt!127824 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!127820 () (_ BitVec 32))

(assert (=> b!80783 (= lt!127820 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!127826 () Unit!5346)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!3561 (_ BitVec 64) Bool) Unit!5346)

(assert (=> b!80783 (= lt!127826 (arrayBitRangesUpdatedAtLemma!0 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 (_1!3755 lt!127839)))))

(assert (=> b!80783 (arrayBitRangesEq!0 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) (array!3562 (store (arr!2254 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!127824 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!2254 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!127824)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!127820)))) ((_ sign_extend 24) (ite (_1!3755 lt!127839) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!127820) #b00000000))))) (size!1644 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!127825 () Unit!5346)

(assert (=> b!80783 (= lt!127825 lt!127826)))

(assert (=> b!80783 (= lt!127829 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!127831 () Unit!5346)

(declare-fun arrayBitRangesEqTransitive!0 (array!3561 array!3561 array!3561 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5346)

(assert (=> b!80783 (= lt!127831 (arrayBitRangesEqTransitive!0 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!127843 (_3!183 lt!127827) lt!127829 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!80783 call!1022))

(declare-fun lt!127848 () Unit!5346)

(assert (=> b!80783 (= lt!127848 lt!127831)))

(declare-fun call!1023 () Bool)

(assert (=> b!80783 call!1023))

(declare-fun lt!127822 () Unit!5346)

(declare-fun Unit!5351 () Unit!5346)

(assert (=> b!80783 (= lt!127822 Unit!5351)))

(declare-fun lt!127852 () Unit!5346)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!3561 array!3561 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5346)

(assert (=> b!80783 (= lt!127852 (arrayBitRangesEqImpliesEq!0 lt!127843 (_3!183 lt!127827) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(declare-fun bitAt!0 (array!3561 (_ BitVec 64)) Bool)

(assert (=> b!80783 (= (bitAt!0 lt!127843 #b0000000000000000000000000000000000000000000000000000000000000000) (bitAt!0 (_3!183 lt!127827) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!127819 () Unit!5346)

(assert (=> b!80783 (= lt!127819 lt!127852)))

(declare-fun lt!127817 () Unit!5346)

(declare-fun Unit!5352 () Unit!5346)

(assert (=> b!80783 (= lt!127817 Unit!5352)))

(declare-fun lt!127832 () Bool)

(assert (=> b!80783 (= lt!127832 (= (bitAt!0 (_3!183 lt!127827) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!3755 lt!127839)))))

(declare-fun Unit!5353 () Unit!5346)

(assert (=> b!80783 (= lt!127811 Unit!5353)))

(assert (=> b!80783 lt!127832))

(declare-fun lt!127830 () Unit!5346)

(declare-fun b!80784 () Bool)

(assert (=> b!80784 (= e!53118 (tuple3!325 lt!127830 thiss!1716 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun lt!127823 () Unit!5346)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!3561) Unit!5346)

(assert (=> b!80784 (= lt!127823 (arrayBitRangesEqReflexiveLemma!0 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(assert (=> b!80784 call!1022))

(declare-fun lt!127840 () Unit!5346)

(assert (=> b!80784 (= lt!127840 lt!127823)))

(declare-fun lt!127844 () array!3561)

(assert (=> b!80784 (= lt!127844 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!127847 () array!3561)

(assert (=> b!80784 (= lt!127847 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!127838 () (_ BitVec 64))

(assert (=> b!80784 (= lt!127838 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!127818 () (_ BitVec 64))

(assert (=> b!80784 (= lt!127818 ((_ sign_extend 32) (size!1644 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!127828 () (_ BitVec 64))

(assert (=> b!80784 (= lt!127828 (bvmul lt!127818 #b0000000000000000000000000000000000000000000000000000000000001000))))

(declare-fun lt!127833 () (_ BitVec 64))

(assert (=> b!80784 (= lt!127833 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!127841 () (_ BitVec 64))

(assert (=> b!80784 (= lt!127841 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!3561 array!3561 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5346)

(assert (=> b!80784 (= lt!127830 (arrayBitRangesEqSlicedLemma!0 lt!127844 lt!127847 lt!127838 lt!127828 lt!127833 lt!127841))))

(assert (=> b!80784 call!1023))

(declare-fun d!25230 () Bool)

(assert (=> d!25230 e!53116))

(declare-fun res!66816 () Bool)

(assert (=> d!25230 (=> (not res!66816) (not e!53116))))

(declare-fun lt!127821 () (_ BitVec 64))

(assert (=> d!25230 (= res!66816 (= (bvsub lt!127821 #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!1644 (buf!2034 (_2!3753 lt!127851))) (currentByte!3932 (_2!3753 lt!127851)) (currentBit!3927 (_2!3753 lt!127851)))))))

(assert (=> d!25230 (or (= (bvand lt!127821 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!127821 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!127821 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!127846 () (_ BitVec 64))

(assert (=> d!25230 (= lt!127821 (bvadd lt!127846 nBits!516))))

(assert (=> d!25230 (or (not (= (bvand lt!127846 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!127846 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!127846 nBits!516) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25230 (= lt!127846 (bitIndex!0 (size!1644 (buf!2034 thiss!1716)) (currentByte!3932 thiss!1716) (currentBit!3927 thiss!1716)))))

(assert (=> d!25230 (= lt!127851 e!53118)))

(assert (=> d!25230 (= c!5664 (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516))))

(assert (=> d!25230 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) (bvsle nBits!516 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!25230 (= (readBitsLoop!0 thiss!1716 nBits!516 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) lt!127851)))

(declare-fun b!80780 () Bool)

(declare-datatypes ((tuple2!7146 0))(
  ( (tuple2!7147 (_1!3758 BitStream!2850) (_2!3758 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!2850) tuple2!7146)

(assert (=> b!80780 (= e!53115 (= (bitAt!0 (_3!183 lt!127851) #b0000000000000000000000000000000000000000000000000000000000000000) (_2!3758 (readBitPure!0 thiss!1716))))))

(declare-fun bm!1020 () Bool)

(assert (=> bm!1020 (= call!1023 (arrayBitRangesEq!0 (ite c!5664 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!127844) (ite c!5664 (_3!183 lt!127827) lt!127847) (ite c!5664 #b0000000000000000000000000000000000000000000000000000000000000000 lt!127833) (ite c!5664 #b0000000000000000000000000000000000000000000000000000000000000000 lt!127841)))))

(declare-fun b!80785 () Bool)

(assert (=> b!80785 (= e!53117 (and (= (buf!2034 thiss!1716) (buf!2034 (_2!3753 lt!127827))) (= (size!1644 (array!3562 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!1644 (_3!183 lt!127827)))))))

(assert (= (and d!25230 c!5664) b!80783))

(assert (= (and d!25230 (not c!5664)) b!80784))

(assert (= (and b!80783 res!66813) b!80785))

(assert (= (or b!80783 b!80784) bm!1020))

(assert (= (or b!80783 b!80784) bm!1019))

(assert (= (and d!25230 res!66816) b!80777))

(assert (= (and b!80777 res!66814) b!80781))

(assert (= (and b!80781 res!66815) b!80779))

(assert (= (and b!80779 (not res!66817)) b!80780))

(assert (= (and b!80779 res!66818) b!80782))

(assert (= (and b!80782 res!66819) b!80778))

(declare-fun m!126237 () Bool)

(assert (=> bm!1019 m!126237))

(declare-fun m!126239 () Bool)

(assert (=> b!80778 m!126239))

(declare-fun m!126241 () Bool)

(assert (=> b!80778 m!126241))

(declare-fun m!126243 () Bool)

(assert (=> d!25230 m!126243))

(declare-fun m!126245 () Bool)

(assert (=> d!25230 m!126245))

(declare-fun m!126247 () Bool)

(assert (=> b!80782 m!126247))

(declare-fun m!126249 () Bool)

(assert (=> b!80783 m!126249))

(declare-fun m!126251 () Bool)

(assert (=> b!80783 m!126251))

(declare-fun m!126253 () Bool)

(assert (=> b!80783 m!126253))

(declare-fun m!126255 () Bool)

(assert (=> b!80783 m!126255))

(declare-fun m!126257 () Bool)

(assert (=> b!80783 m!126257))

(declare-fun m!126259 () Bool)

(assert (=> b!80783 m!126259))

(declare-fun m!126261 () Bool)

(assert (=> b!80783 m!126261))

(declare-fun m!126263 () Bool)

(assert (=> b!80783 m!126263))

(declare-fun m!126265 () Bool)

(assert (=> b!80783 m!126265))

(declare-fun m!126267 () Bool)

(assert (=> b!80783 m!126267))

(declare-fun m!126269 () Bool)

(assert (=> b!80783 m!126269))

(declare-fun m!126271 () Bool)

(assert (=> b!80783 m!126271))

(assert (=> b!80783 m!126245))

(declare-fun m!126273 () Bool)

(assert (=> b!80783 m!126273))

(declare-fun m!126275 () Bool)

(assert (=> b!80783 m!126275))

(declare-fun m!126277 () Bool)

(assert (=> b!80783 m!126277))

(declare-fun m!126279 () Bool)

(assert (=> b!80783 m!126279))

(declare-fun m!126281 () Bool)

(assert (=> b!80783 m!126281))

(declare-fun m!126283 () Bool)

(assert (=> b!80780 m!126283))

(declare-fun m!126285 () Bool)

(assert (=> b!80780 m!126285))

(declare-fun m!126287 () Bool)

(assert (=> b!80781 m!126287))

(declare-fun m!126289 () Bool)

(assert (=> bm!1020 m!126289))

(declare-fun m!126291 () Bool)

(assert (=> b!80784 m!126291))

(declare-fun m!126293 () Bool)

(assert (=> b!80784 m!126293))

(assert (=> b!80738 d!25230))

(declare-fun d!25236 () Bool)

(declare-fun remainingBits!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))

(assert (=> d!25236 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!1644 (buf!2034 thiss!1716))) ((_ sign_extend 32) (currentByte!3932 thiss!1716)) ((_ sign_extend 32) (currentBit!3927 thiss!1716)) nBits!516) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!1644 (buf!2034 thiss!1716))) ((_ sign_extend 32) (currentByte!3932 thiss!1716)) ((_ sign_extend 32) (currentBit!3927 thiss!1716))) nBits!516))))

(declare-fun bs!6174 () Bool)

(assert (= bs!6174 d!25236))

(declare-fun m!126295 () Bool)

(assert (=> bs!6174 m!126295))

(assert (=> b!80737 d!25236))

(declare-fun d!25238 () Bool)

(assert (=> d!25238 (= (inv!12 thiss!1716) (invariant!0 (currentBit!3927 thiss!1716) (currentByte!3932 thiss!1716) (size!1644 (buf!2034 thiss!1716))))))

(declare-fun bs!6175 () Bool)

(assert (= bs!6175 d!25238))

(declare-fun m!126297 () Bool)

(assert (=> bs!6175 m!126297))

(assert (=> start!15976 d!25238))

(check-sat (not d!25236) (not b!80784) (not b!80781) (not b!80782) (not bm!1020) (not d!25238) (not bm!1019) (not d!25230) (not b!80778) (not b!80783) (not b!80780))
(check-sat)
