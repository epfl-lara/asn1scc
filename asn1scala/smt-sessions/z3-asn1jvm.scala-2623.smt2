; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!64734 () Bool)

(assert start!64734)

(declare-fun b!290596 () Bool)

(declare-fun res!240070 () Bool)

(declare-fun e!206996 () Bool)

(assert (=> b!290596 (=> (not res!240070) (not e!206996))))

(declare-fun from!505 () (_ BitVec 64))

(declare-fun to!474 () (_ BitVec 64))

(assert (=> b!290596 (= res!240070 (bvslt from!505 to!474))))

(declare-fun b!290597 () Bool)

(declare-fun e!206995 () Bool)

(declare-fun lt!421775 () Bool)

(declare-datatypes ((array!17248 0))(
  ( (array!17249 (arr!8474 (Array (_ BitVec 32) (_ BitVec 8))) (size!7466 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!12942 0))(
  ( (BitStream!12943 (buf!7532 array!17248) (currentByte!13948 (_ BitVec 32)) (currentBit!13943 (_ BitVec 32))) )
))
(declare-datatypes ((tuple2!22816 0))(
  ( (tuple2!22817 (_1!12663 Bool) (_2!12663 BitStream!12942)) )
))
(declare-fun lt!421770 () tuple2!22816)

(assert (=> b!290597 (= e!206995 (= lt!421775 (_1!12663 lt!421770)))))

(declare-fun b!290598 () Bool)

(declare-datatypes ((Unit!20185 0))(
  ( (Unit!20186) )
))
(declare-datatypes ((tuple3!1676 0))(
  ( (tuple3!1677 (_1!12664 Unit!20185) (_2!12664 BitStream!12942) (_3!1255 array!17248)) )
))
(declare-fun lt!421771 () tuple3!1676)

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!290598 (= e!206996 (not (invariant!0 (currentBit!13943 (_2!12664 lt!421771)) (currentByte!13948 (_2!12664 lt!421771)) (size!7466 (buf!7532 (_2!12664 lt!421771))))))))

(assert (=> b!290598 e!206995))

(declare-fun res!240072 () Bool)

(assert (=> b!290598 (=> (not res!240072) (not e!206995))))

(declare-fun lt!421778 () array!17248)

(declare-fun bitAt!0 (array!17248 (_ BitVec 64)) Bool)

(assert (=> b!290598 (= res!240072 (= (bitAt!0 lt!421778 from!505) lt!421775))))

(assert (=> b!290598 (= lt!421775 (bitAt!0 (_3!1255 lt!421771) from!505))))

(declare-fun lt!421773 () Unit!20185)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!17248 array!17248 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!20185)

(assert (=> b!290598 (= lt!421773 (arrayBitRangesEqImpliesEq!0 lt!421778 (_3!1255 lt!421771) #b0000000000000000000000000000000000000000000000000000000000000000 from!505 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(declare-fun arr!273 () array!17248)

(declare-fun arrayBitRangesEq!0 (array!17248 array!17248 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!290598 (arrayBitRangesEq!0 arr!273 (_3!1255 lt!421771) #b0000000000000000000000000000000000000000000000000000000000000000 from!505)))

(declare-fun lt!421772 () Unit!20185)

(declare-fun arrayBitRangesEqTransitive!0 (array!17248 array!17248 array!17248 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!20185)

(assert (=> b!290598 (= lt!421772 (arrayBitRangesEqTransitive!0 arr!273 lt!421778 (_3!1255 lt!421771) #b0000000000000000000000000000000000000000000000000000000000000000 from!505 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(assert (=> b!290598 (arrayBitRangesEq!0 arr!273 lt!421778 #b0000000000000000000000000000000000000000000000000000000000000000 from!505)))

(declare-fun lt!421776 () Unit!20185)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!17248 (_ BitVec 64) Bool) Unit!20185)

(assert (=> b!290598 (= lt!421776 (arrayBitRangesUpdatedAtLemma!0 arr!273 from!505 (_1!12663 lt!421770)))))

(declare-fun e!206993 () Bool)

(assert (=> b!290598 e!206993))

(declare-fun res!240073 () Bool)

(assert (=> b!290598 (=> (not res!240073) (not e!206993))))

(declare-fun thiss!1728 () BitStream!12942)

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!290598 (= res!240073 (= (bvsub (bvadd (bitIndex!0 (size!7466 (buf!7532 thiss!1728)) (currentByte!13948 thiss!1728) (currentBit!13943 thiss!1728)) to!474) from!505) (bitIndex!0 (size!7466 (buf!7532 (_2!12664 lt!421771))) (currentByte!13948 (_2!12664 lt!421771)) (currentBit!13943 (_2!12664 lt!421771)))))))

(declare-fun nBits!523 () (_ BitVec 64))

(declare-fun readBitsLoop!0 (BitStream!12942 (_ BitVec 64) array!17248 (_ BitVec 64) (_ BitVec 64)) tuple3!1676)

(assert (=> b!290598 (= lt!421771 (readBitsLoop!0 (_2!12663 lt!421770) nBits!523 lt!421778 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) to!474))))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!290598 (validate_offset_bits!1 ((_ sign_extend 32) (size!7466 (buf!7532 (_2!12663 lt!421770)))) ((_ sign_extend 32) (currentByte!13948 (_2!12663 lt!421770))) ((_ sign_extend 32) (currentBit!13943 (_2!12663 lt!421770))) (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001))))

(declare-fun lt!421777 () Unit!20185)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!12942 BitStream!12942 (_ BitVec 64) (_ BitVec 64)) Unit!20185)

(assert (=> b!290598 (= lt!421777 (validateOffsetBitsIneqLemma!0 thiss!1728 (_2!12663 lt!421770) (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001))))

(declare-fun lt!421779 () (_ BitVec 32))

(declare-fun lt!421774 () (_ BitVec 32))

(assert (=> b!290598 (= lt!421778 (array!17249 (store (arr!8474 arr!273) lt!421774 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8474 arr!273) lt!421774)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!421779)))) ((_ sign_extend 24) (ite (_1!12663 lt!421770) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!421779) #b00000000))))) (size!7466 arr!273)))))

(assert (=> b!290598 (= lt!421779 ((_ extract 31 0) (bvsrem from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!290598 (= lt!421774 ((_ extract 31 0) (bvsdiv from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun readBit!0 (BitStream!12942) tuple2!22816)

(assert (=> b!290598 (= lt!421770 (readBit!0 thiss!1728))))

(declare-fun b!290599 () Bool)

(assert (=> b!290599 (= e!206993 (and (= (buf!7532 thiss!1728) (buf!7532 (_2!12664 lt!421771))) (= (size!7466 arr!273) (size!7466 (_3!1255 lt!421771)))))))

(declare-fun b!290600 () Bool)

(declare-fun e!206994 () Bool)

(declare-fun array_inv!7078 (array!17248) Bool)

(assert (=> b!290600 (= e!206994 (array_inv!7078 (buf!7532 thiss!1728)))))

(declare-fun b!290601 () Bool)

(declare-fun res!240071 () Bool)

(assert (=> b!290601 (=> (not res!240071) (not e!206996))))

(assert (=> b!290601 (= res!240071 (validate_offset_bits!1 ((_ sign_extend 32) (size!7466 (buf!7532 thiss!1728))) ((_ sign_extend 32) (currentByte!13948 thiss!1728)) ((_ sign_extend 32) (currentBit!13943 thiss!1728)) (bvsub nBits!523 from!505)))))

(declare-fun res!240074 () Bool)

(assert (=> start!64734 (=> (not res!240074) (not e!206996))))

(assert (=> start!64734 (= res!240074 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!523) (bvsle nBits!523 #b0000000000000000000000000000001111111111111111111111111111111000) (bvsge ((_ sign_extend 32) (size!7466 arr!273)) (bvsdiv (bvadd nBits!523 #b0000000000000000000000000000000000000000000000000000000000000111) #b0000000000000000000000000000000000000000000000000000000000001000)) (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 from!505) (bvsle from!505 to!474) (bvsle to!474 nBits!523)))))

(assert (=> start!64734 e!206996))

(declare-fun inv!12 (BitStream!12942) Bool)

(assert (=> start!64734 (and (inv!12 thiss!1728) e!206994)))

(assert (=> start!64734 true))

(assert (=> start!64734 (array_inv!7078 arr!273)))

(assert (= (and start!64734 res!240074) b!290601))

(assert (= (and b!290601 res!240071) b!290596))

(assert (= (and b!290596 res!240070) b!290598))

(assert (= (and b!290598 res!240073) b!290599))

(assert (= (and b!290598 res!240072) b!290597))

(assert (= start!64734 b!290600))

(declare-fun m!424807 () Bool)

(assert (=> b!290598 m!424807))

(declare-fun m!424809 () Bool)

(assert (=> b!290598 m!424809))

(declare-fun m!424811 () Bool)

(assert (=> b!290598 m!424811))

(declare-fun m!424813 () Bool)

(assert (=> b!290598 m!424813))

(declare-fun m!424815 () Bool)

(assert (=> b!290598 m!424815))

(declare-fun m!424817 () Bool)

(assert (=> b!290598 m!424817))

(declare-fun m!424819 () Bool)

(assert (=> b!290598 m!424819))

(declare-fun m!424821 () Bool)

(assert (=> b!290598 m!424821))

(declare-fun m!424823 () Bool)

(assert (=> b!290598 m!424823))

(declare-fun m!424825 () Bool)

(assert (=> b!290598 m!424825))

(declare-fun m!424827 () Bool)

(assert (=> b!290598 m!424827))

(declare-fun m!424829 () Bool)

(assert (=> b!290598 m!424829))

(declare-fun m!424831 () Bool)

(assert (=> b!290598 m!424831))

(declare-fun m!424833 () Bool)

(assert (=> b!290598 m!424833))

(declare-fun m!424835 () Bool)

(assert (=> b!290598 m!424835))

(declare-fun m!424837 () Bool)

(assert (=> b!290598 m!424837))

(declare-fun m!424839 () Bool)

(assert (=> b!290598 m!424839))

(declare-fun m!424841 () Bool)

(assert (=> b!290600 m!424841))

(declare-fun m!424843 () Bool)

(assert (=> b!290601 m!424843))

(declare-fun m!424845 () Bool)

(assert (=> start!64734 m!424845))

(declare-fun m!424847 () Bool)

(assert (=> start!64734 m!424847))

(check-sat (not b!290598) (not b!290601) (not b!290600) (not start!64734))
(check-sat)
(get-model)

(declare-fun d!98456 () Bool)

(assert (=> d!98456 (= (bitAt!0 lt!421778 from!505) (bitAt!0 (_3!1255 lt!421771) from!505))))

(declare-fun lt!421812 () Unit!20185)

(declare-fun choose!31 (array!17248 array!17248 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!20185)

(assert (=> d!98456 (= lt!421812 (choose!31 lt!421778 (_3!1255 lt!421771) #b0000000000000000000000000000000000000000000000000000000000000000 from!505 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(assert (=> d!98456 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(assert (=> d!98456 (= (arrayBitRangesEqImpliesEq!0 lt!421778 (_3!1255 lt!421771) #b0000000000000000000000000000000000000000000000000000000000000000 from!505 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) lt!421812)))

(declare-fun bs!25080 () Bool)

(assert (= bs!25080 d!98456))

(assert (=> bs!25080 m!424837))

(assert (=> bs!25080 m!424815))

(declare-fun m!424891 () Bool)

(assert (=> bs!25080 m!424891))

(assert (=> b!290598 d!98456))

(declare-fun d!98458 () Bool)

(assert (=> d!98458 (= (bitAt!0 lt!421778 from!505) (not (= (bvand ((_ sign_extend 24) (select (arr!8474 lt!421778) ((_ extract 31 0) (bvsdiv from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem from!505 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)))))

(declare-fun bs!25081 () Bool)

(assert (= bs!25081 d!98458))

(declare-fun m!424893 () Bool)

(assert (=> bs!25081 m!424893))

(declare-fun m!424895 () Bool)

(assert (=> bs!25081 m!424895))

(assert (=> b!290598 d!98458))

(declare-fun d!98460 () Bool)

(assert (=> d!98460 (arrayBitRangesEq!0 arr!273 (_3!1255 lt!421771) #b0000000000000000000000000000000000000000000000000000000000000000 from!505)))

(declare-fun lt!421815 () Unit!20185)

(declare-fun choose!49 (array!17248 array!17248 array!17248 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!20185)

(assert (=> d!98460 (= lt!421815 (choose!49 arr!273 lt!421778 (_3!1255 lt!421771) #b0000000000000000000000000000000000000000000000000000000000000000 from!505 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(assert (=> d!98460 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 from!505) (bvsle from!505 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(assert (=> d!98460 (= (arrayBitRangesEqTransitive!0 arr!273 lt!421778 (_3!1255 lt!421771) #b0000000000000000000000000000000000000000000000000000000000000000 from!505 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) lt!421815)))

(declare-fun bs!25082 () Bool)

(assert (= bs!25082 d!98460))

(assert (=> bs!25082 m!424835))

(declare-fun m!424897 () Bool)

(assert (=> bs!25082 m!424897))

(assert (=> b!290598 d!98460))

(declare-fun d!98462 () Bool)

(assert (=> d!98462 (= (invariant!0 (currentBit!13943 (_2!12664 lt!421771)) (currentByte!13948 (_2!12664 lt!421771)) (size!7466 (buf!7532 (_2!12664 lt!421771)))) (and (bvsge (currentBit!13943 (_2!12664 lt!421771)) #b00000000000000000000000000000000) (bvslt (currentBit!13943 (_2!12664 lt!421771)) #b00000000000000000000000000001000) (bvsge (currentByte!13948 (_2!12664 lt!421771)) #b00000000000000000000000000000000) (or (bvslt (currentByte!13948 (_2!12664 lt!421771)) (size!7466 (buf!7532 (_2!12664 lt!421771)))) (and (= (currentBit!13943 (_2!12664 lt!421771)) #b00000000000000000000000000000000) (= (currentByte!13948 (_2!12664 lt!421771)) (size!7466 (buf!7532 (_2!12664 lt!421771))))))))))

(assert (=> b!290598 d!98462))

(declare-fun d!98464 () Bool)

(declare-fun e!207018 () Bool)

(assert (=> d!98464 e!207018))

(declare-fun res!240092 () Bool)

(assert (=> d!98464 (=> (not res!240092) (not e!207018))))

(assert (=> d!98464 (= res!240092 (or (= (bvand (bvsub nBits!523 from!505) #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000001 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand (bvsub nBits!523 from!505) #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!421818 () Unit!20185)

(declare-fun choose!27 (BitStream!12942 BitStream!12942 (_ BitVec 64) (_ BitVec 64)) Unit!20185)

(assert (=> d!98464 (= lt!421818 (choose!27 thiss!1728 (_2!12663 lt!421770) (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001))))

(assert (=> d!98464 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsle #b0000000000000000000000000000000000000000000000000000000000000001 (bvsub nBits!523 from!505)))))

(assert (=> d!98464 (= (validateOffsetBitsIneqLemma!0 thiss!1728 (_2!12663 lt!421770) (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001) lt!421818)))

(declare-fun b!290622 () Bool)

(assert (=> b!290622 (= e!207018 (validate_offset_bits!1 ((_ sign_extend 32) (size!7466 (buf!7532 (_2!12663 lt!421770)))) ((_ sign_extend 32) (currentByte!13948 (_2!12663 lt!421770))) ((_ sign_extend 32) (currentBit!13943 (_2!12663 lt!421770))) (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (= (and d!98464 res!240092) b!290622))

(declare-fun m!424899 () Bool)

(assert (=> d!98464 m!424899))

(assert (=> b!290622 m!424825))

(assert (=> b!290598 d!98464))

(declare-fun d!98466 () Bool)

(declare-fun e!207021 () Bool)

(assert (=> d!98466 e!207021))

(declare-fun res!240097 () Bool)

(assert (=> d!98466 (=> (not res!240097) (not e!207021))))

(declare-fun lt!421832 () (_ BitVec 64))

(declare-fun lt!421835 () (_ BitVec 64))

(declare-fun lt!421833 () (_ BitVec 64))

(assert (=> d!98466 (= res!240097 (= lt!421833 (bvsub lt!421832 lt!421835)))))

(assert (=> d!98466 (or (= (bvand lt!421832 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!421835 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!421832 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!421832 lt!421835) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun remainingBits!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))

(assert (=> d!98466 (= lt!421835 (remainingBits!0 ((_ sign_extend 32) (size!7466 (buf!7532 thiss!1728))) ((_ sign_extend 32) (currentByte!13948 thiss!1728)) ((_ sign_extend 32) (currentBit!13943 thiss!1728))))))

(declare-fun lt!421831 () (_ BitVec 64))

(declare-fun lt!421836 () (_ BitVec 64))

(assert (=> d!98466 (= lt!421832 (bvmul lt!421831 lt!421836))))

(assert (=> d!98466 (or (= lt!421831 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!421836 (bvsdiv (bvmul lt!421831 lt!421836) lt!421831)))))

(assert (=> d!98466 (= lt!421836 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!98466 (= lt!421831 ((_ sign_extend 32) (size!7466 (buf!7532 thiss!1728))))))

(assert (=> d!98466 (= lt!421833 (bvadd (bvmul ((_ sign_extend 32) (currentByte!13948 thiss!1728)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!13943 thiss!1728))))))

(assert (=> d!98466 (invariant!0 (currentBit!13943 thiss!1728) (currentByte!13948 thiss!1728) (size!7466 (buf!7532 thiss!1728)))))

(assert (=> d!98466 (= (bitIndex!0 (size!7466 (buf!7532 thiss!1728)) (currentByte!13948 thiss!1728) (currentBit!13943 thiss!1728)) lt!421833)))

(declare-fun b!290627 () Bool)

(declare-fun res!240098 () Bool)

(assert (=> b!290627 (=> (not res!240098) (not e!207021))))

(assert (=> b!290627 (= res!240098 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!421833))))

(declare-fun b!290628 () Bool)

(declare-fun lt!421834 () (_ BitVec 64))

(assert (=> b!290628 (= e!207021 (bvsle lt!421833 (bvmul lt!421834 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!290628 (or (= lt!421834 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!421834 #b0000000000000000000000000000000000000000000000000000000000001000) lt!421834)))))

(assert (=> b!290628 (= lt!421834 ((_ sign_extend 32) (size!7466 (buf!7532 thiss!1728))))))

(assert (= (and d!98466 res!240097) b!290627))

(assert (= (and b!290627 res!240098) b!290628))

(declare-fun m!424901 () Bool)

(assert (=> d!98466 m!424901))

(declare-fun m!424903 () Bool)

(assert (=> d!98466 m!424903))

(assert (=> b!290598 d!98466))

(declare-fun b!290717 () Bool)

(declare-fun res!240172 () Bool)

(declare-fun e!207093 () Bool)

(assert (=> b!290717 (=> (not res!240172) (not e!207093))))

(declare-fun lt!422030 () tuple3!1676)

(assert (=> b!290717 (= res!240172 (invariant!0 (currentBit!13943 (_2!12664 lt!422030)) (currentByte!13948 (_2!12664 lt!422030)) (size!7466 (buf!7532 (_2!12664 lt!422030)))))))

(declare-fun lt!422025 () array!17248)

(declare-fun lt!422008 () tuple3!1676)

(declare-fun bm!4829 () Bool)

(declare-fun call!4833 () Bool)

(declare-fun lt!422005 () (_ BitVec 64))

(declare-fun lt!422014 () (_ BitVec 64))

(declare-fun c!13291 () Bool)

(declare-fun lt!422002 () array!17248)

(assert (=> bm!4829 (= call!4833 (arrayBitRangesEq!0 (ite c!13291 lt!421778 lt!422002) (ite c!13291 (_3!1255 lt!422008) lt!422025) (ite c!13291 #b0000000000000000000000000000000000000000000000000000000000000000 lt!422014) (ite c!13291 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) lt!422005)))))

(declare-fun b!290719 () Bool)

(declare-fun res!240174 () Bool)

(assert (=> b!290719 (=> (not res!240174) (not e!207093))))

(declare-fun e!207095 () Bool)

(assert (=> b!290719 (= res!240174 e!207095)))

(declare-fun res!240168 () Bool)

(assert (=> b!290719 (=> res!240168 e!207095)))

(assert (=> b!290719 (= res!240168 (not (bvslt (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) to!474)))))

(declare-fun b!290720 () Bool)

(declare-datatypes ((List!957 0))(
  ( (Nil!954) (Cons!953 (h!1072 Bool) (t!1842 List!957)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!12942 array!17248 (_ BitVec 64) (_ BitVec 64)) List!957)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!12942 BitStream!12942 (_ BitVec 64)) List!957)

(assert (=> b!290720 (= e!207093 (= (byteArrayBitContentToList!0 (_2!12664 lt!422030) (_3!1255 lt!422030) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (bvsub to!474 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505))) (bitStreamReadBitsIntoList!0 (_2!12664 lt!422030) (_2!12663 lt!421770) (bvsub to!474 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))))

(assert (=> b!290720 (or (= (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub to!474 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!290720 (or (= (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub to!474 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!290721 () Bool)

(declare-fun e!207094 () Bool)

(assert (=> b!290721 (= e!207094 (and (= (buf!7532 (_2!12663 lt!421770)) (buf!7532 (_2!12664 lt!422008))) (= (size!7466 lt!421778) (size!7466 (_3!1255 lt!422008)))))))

(declare-fun b!290722 () Bool)

(declare-fun e!207092 () tuple3!1676)

(declare-fun lt!422023 () Unit!20185)

(assert (=> b!290722 (= e!207092 (tuple3!1677 lt!422023 (_2!12664 lt!422008) (_3!1255 lt!422008)))))

(declare-fun lt!422024 () tuple2!22816)

(assert (=> b!290722 (= lt!422024 (readBit!0 (_2!12663 lt!421770)))))

(declare-fun lt!422015 () (_ BitVec 32))

(assert (=> b!290722 (= lt!422015 ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!422003 () (_ BitVec 32))

(assert (=> b!290722 (= lt!422003 ((_ extract 31 0) (bvsrem (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!422009 () array!17248)

(assert (=> b!290722 (= lt!422009 (array!17249 (store (arr!8474 lt!421778) lt!422015 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8474 lt!421778) lt!422015)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!422003)))) ((_ sign_extend 24) (ite (_1!12663 lt!422024) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!422003) #b00000000))))) (size!7466 lt!421778)))))

(declare-fun lt!422006 () (_ BitVec 64))

(assert (=> b!290722 (= lt!422006 (bvsub nBits!523 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(declare-fun lt!422027 () (_ BitVec 64))

(assert (=> b!290722 (= lt!422027 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!422017 () Unit!20185)

(assert (=> b!290722 (= lt!422017 (validateOffsetBitsIneqLemma!0 (_2!12663 lt!421770) (_2!12663 lt!422024) lt!422006 lt!422027))))

(assert (=> b!290722 (validate_offset_bits!1 ((_ sign_extend 32) (size!7466 (buf!7532 (_2!12663 lt!422024)))) ((_ sign_extend 32) (currentByte!13948 (_2!12663 lt!422024))) ((_ sign_extend 32) (currentBit!13943 (_2!12663 lt!422024))) (bvsub lt!422006 lt!422027))))

(declare-fun lt!422018 () Unit!20185)

(assert (=> b!290722 (= lt!422018 lt!422017)))

(assert (=> b!290722 (= lt!422008 (readBitsLoop!0 (_2!12663 lt!422024) nBits!523 lt!422009 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505 #b0000000000000000000000000000000000000000000000000000000000000001) to!474))))

(declare-fun res!240171 () Bool)

(assert (=> b!290722 (= res!240171 (= (bvsub (bvadd (bitIndex!0 (size!7466 (buf!7532 (_2!12663 lt!421770))) (currentByte!13948 (_2!12663 lt!421770)) (currentBit!13943 (_2!12663 lt!421770))) to!474) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (bitIndex!0 (size!7466 (buf!7532 (_2!12664 lt!422008))) (currentByte!13948 (_2!12664 lt!422008)) (currentBit!13943 (_2!12664 lt!422008)))))))

(assert (=> b!290722 (=> (not res!240171) (not e!207094))))

(assert (=> b!290722 e!207094))

(declare-fun lt!422026 () Unit!20185)

(declare-fun Unit!20189 () Unit!20185)

(assert (=> b!290722 (= lt!422026 Unit!20189)))

(declare-fun lt!422022 () (_ BitVec 32))

(assert (=> b!290722 (= lt!422022 ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!422029 () (_ BitVec 32))

(assert (=> b!290722 (= lt!422029 ((_ extract 31 0) (bvsrem (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!422028 () Unit!20185)

(assert (=> b!290722 (= lt!422028 (arrayBitRangesUpdatedAtLemma!0 lt!421778 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (_1!12663 lt!422024)))))

(assert (=> b!290722 (arrayBitRangesEq!0 lt!421778 (array!17249 (store (arr!8474 lt!421778) lt!422022 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8474 lt!421778) lt!422022)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!422029)))) ((_ sign_extend 24) (ite (_1!12663 lt!422024) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!422029) #b00000000))))) (size!7466 lt!421778)) #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505))))

(declare-fun lt!422012 () Unit!20185)

(assert (=> b!290722 (= lt!422012 lt!422028)))

(declare-fun lt!422034 () (_ BitVec 64))

(assert (=> b!290722 (= lt!422034 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!422031 () Unit!20185)

(assert (=> b!290722 (= lt!422031 (arrayBitRangesEqTransitive!0 lt!421778 lt!422009 (_3!1255 lt!422008) lt!422034 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(declare-fun call!4832 () Bool)

(assert (=> b!290722 call!4832))

(declare-fun lt!422032 () Unit!20185)

(assert (=> b!290722 (= lt!422032 lt!422031)))

(assert (=> b!290722 call!4833))

(declare-fun lt!422020 () Unit!20185)

(declare-fun Unit!20190 () Unit!20185)

(assert (=> b!290722 (= lt!422020 Unit!20190)))

(declare-fun lt!422000 () Unit!20185)

(assert (=> b!290722 (= lt!422000 (arrayBitRangesEqImpliesEq!0 lt!422009 (_3!1255 lt!422008) #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!290722 (= (bitAt!0 lt!422009 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (bitAt!0 (_3!1255 lt!422008) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(declare-fun lt!422007 () Unit!20185)

(assert (=> b!290722 (= lt!422007 lt!422000)))

(declare-fun lt!422001 () Unit!20185)

(declare-fun Unit!20191 () Unit!20185)

(assert (=> b!290722 (= lt!422001 Unit!20191)))

(declare-fun lt!422010 () Bool)

(assert (=> b!290722 (= lt!422010 (= (bitAt!0 (_3!1255 lt!422008) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (_1!12663 lt!422024)))))

(declare-fun Unit!20192 () Unit!20185)

(assert (=> b!290722 (= lt!422023 Unit!20192)))

(assert (=> b!290722 lt!422010))

(declare-fun bm!4830 () Bool)

(assert (=> bm!4830 (= call!4832 (arrayBitRangesEq!0 lt!421778 (ite c!13291 (_3!1255 lt!422008) lt!421778) (ite c!13291 lt!422034 #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!13291 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (bvmul ((_ sign_extend 32) (size!7466 lt!421778)) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun b!290723 () Bool)

(declare-fun res!240173 () Bool)

(assert (=> b!290723 (=> (not res!240173) (not e!207093))))

(assert (=> b!290723 (= res!240173 (and (= (buf!7532 (_2!12663 lt!421770)) (buf!7532 (_2!12664 lt!422030))) (= (size!7466 lt!421778) (size!7466 (_3!1255 lt!422030)))))))

(declare-fun b!290718 () Bool)

(declare-fun lt!422021 () Unit!20185)

(assert (=> b!290718 (= e!207092 (tuple3!1677 lt!422021 (_2!12663 lt!421770) lt!421778))))

(declare-fun lt!422013 () Unit!20185)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!17248) Unit!20185)

(assert (=> b!290718 (= lt!422013 (arrayBitRangesEqReflexiveLemma!0 lt!421778))))

(assert (=> b!290718 call!4832))

(declare-fun lt!422004 () Unit!20185)

(assert (=> b!290718 (= lt!422004 lt!422013)))

(assert (=> b!290718 (= lt!422002 lt!421778)))

(assert (=> b!290718 (= lt!422025 lt!421778)))

(declare-fun lt!422033 () (_ BitVec 64))

(assert (=> b!290718 (= lt!422033 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!422011 () (_ BitVec 64))

(assert (=> b!290718 (= lt!422011 ((_ sign_extend 32) (size!7466 lt!421778)))))

(declare-fun lt!421999 () (_ BitVec 64))

(assert (=> b!290718 (= lt!421999 (bvmul lt!422011 #b0000000000000000000000000000000000000000000000000000000000001000))))

(assert (=> b!290718 (= lt!422014 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!290718 (= lt!422005 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505))))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!17248 array!17248 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!20185)

(assert (=> b!290718 (= lt!422021 (arrayBitRangesEqSlicedLemma!0 lt!422002 lt!422025 lt!422033 lt!421999 lt!422014 lt!422005))))

(assert (=> b!290718 call!4833))

(declare-fun d!98468 () Bool)

(assert (=> d!98468 e!207093))

(declare-fun res!240170 () Bool)

(assert (=> d!98468 (=> (not res!240170) (not e!207093))))

(declare-fun lt!422016 () (_ BitVec 64))

(assert (=> d!98468 (= res!240170 (= (bvsub lt!422016 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (bitIndex!0 (size!7466 (buf!7532 (_2!12664 lt!422030))) (currentByte!13948 (_2!12664 lt!422030)) (currentBit!13943 (_2!12664 lt!422030)))))))

(assert (=> d!98468 (or (= (bvand lt!422016 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!422016 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!422016 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!422019 () (_ BitVec 64))

(assert (=> d!98468 (= lt!422016 (bvadd lt!422019 to!474))))

(assert (=> d!98468 (or (not (= (bvand lt!422019 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!422019 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!422019 to!474) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!98468 (= lt!422019 (bitIndex!0 (size!7466 (buf!7532 (_2!12663 lt!421770))) (currentByte!13948 (_2!12663 lt!421770)) (currentBit!13943 (_2!12663 lt!421770))))))

(assert (=> d!98468 (= lt!422030 e!207092)))

(assert (=> d!98468 (= c!13291 (bvslt (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) to!474))))

(assert (=> d!98468 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!523) (bvsle nBits!523 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!98468 (= (readBitsLoop!0 (_2!12663 lt!421770) nBits!523 lt!421778 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) to!474) lt!422030)))

(declare-fun b!290724 () Bool)

(declare-datatypes ((tuple2!22820 0))(
  ( (tuple2!22821 (_1!12667 BitStream!12942) (_2!12667 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!12942) tuple2!22820)

(assert (=> b!290724 (= e!207095 (= (bitAt!0 (_3!1255 lt!422030) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (_2!12667 (readBitPure!0 (_2!12663 lt!421770)))))))

(declare-fun b!290725 () Bool)

(declare-fun res!240169 () Bool)

(assert (=> b!290725 (=> (not res!240169) (not e!207093))))

(assert (=> b!290725 (= res!240169 (arrayBitRangesEq!0 lt!421778 (_3!1255 lt!422030) #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(assert (= (and d!98468 c!13291) b!290722))

(assert (= (and d!98468 (not c!13291)) b!290718))

(assert (= (and b!290722 res!240171) b!290721))

(assert (= (or b!290722 b!290718) bm!4829))

(assert (= (or b!290722 b!290718) bm!4830))

(assert (= (and d!98468 res!240170) b!290723))

(assert (= (and b!290723 res!240173) b!290725))

(assert (= (and b!290725 res!240169) b!290719))

(assert (= (and b!290719 (not res!240168)) b!290724))

(assert (= (and b!290719 res!240174) b!290717))

(assert (= (and b!290717 res!240172) b!290720))

(declare-fun m!424995 () Bool)

(assert (=> bm!4830 m!424995))

(declare-fun m!424997 () Bool)

(assert (=> b!290722 m!424997))

(declare-fun m!424999 () Bool)

(assert (=> b!290722 m!424999))

(declare-fun m!425001 () Bool)

(assert (=> b!290722 m!425001))

(declare-fun m!425003 () Bool)

(assert (=> b!290722 m!425003))

(declare-fun m!425005 () Bool)

(assert (=> b!290722 m!425005))

(declare-fun m!425007 () Bool)

(assert (=> b!290722 m!425007))

(declare-fun m!425009 () Bool)

(assert (=> b!290722 m!425009))

(declare-fun m!425011 () Bool)

(assert (=> b!290722 m!425011))

(declare-fun m!425013 () Bool)

(assert (=> b!290722 m!425013))

(declare-fun m!425015 () Bool)

(assert (=> b!290722 m!425015))

(declare-fun m!425017 () Bool)

(assert (=> b!290722 m!425017))

(declare-fun m!425019 () Bool)

(assert (=> b!290722 m!425019))

(declare-fun m!425021 () Bool)

(assert (=> b!290722 m!425021))

(declare-fun m!425023 () Bool)

(assert (=> b!290722 m!425023))

(declare-fun m!425025 () Bool)

(assert (=> b!290722 m!425025))

(declare-fun m!425027 () Bool)

(assert (=> b!290722 m!425027))

(declare-fun m!425029 () Bool)

(assert (=> b!290722 m!425029))

(declare-fun m!425031 () Bool)

(assert (=> b!290722 m!425031))

(declare-fun m!425033 () Bool)

(assert (=> bm!4829 m!425033))

(declare-fun m!425035 () Bool)

(assert (=> d!98468 m!425035))

(assert (=> d!98468 m!425001))

(declare-fun m!425037 () Bool)

(assert (=> b!290720 m!425037))

(declare-fun m!425039 () Bool)

(assert (=> b!290720 m!425039))

(declare-fun m!425041 () Bool)

(assert (=> b!290718 m!425041))

(declare-fun m!425043 () Bool)

(assert (=> b!290718 m!425043))

(declare-fun m!425045 () Bool)

(assert (=> b!290725 m!425045))

(declare-fun m!425047 () Bool)

(assert (=> b!290724 m!425047))

(declare-fun m!425049 () Bool)

(assert (=> b!290724 m!425049))

(declare-fun m!425051 () Bool)

(assert (=> b!290717 m!425051))

(assert (=> b!290598 d!98468))

(declare-fun b!290740 () Bool)

(declare-fun e!207111 () Bool)

(declare-fun e!207113 () Bool)

(assert (=> b!290740 (= e!207111 e!207113)))

(declare-fun lt!422041 () (_ BitVec 32))

(declare-fun res!240188 () Bool)

(declare-datatypes ((tuple4!834 0))(
  ( (tuple4!835 (_1!12668 (_ BitVec 32)) (_2!12668 (_ BitVec 32)) (_3!1257 (_ BitVec 32)) (_4!417 (_ BitVec 32))) )
))
(declare-fun lt!422042 () tuple4!834)

(declare-fun byteRangesEq!0 ((_ BitVec 8) (_ BitVec 8) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!290740 (= res!240188 (byteRangesEq!0 (select (arr!8474 arr!273) (_3!1257 lt!422042)) (select (arr!8474 (_3!1255 lt!421771)) (_3!1257 lt!422042)) lt!422041 #b00000000000000000000000000001000))))

(assert (=> b!290740 (=> (not res!240188) (not e!207113))))

(declare-fun b!290741 () Bool)

(declare-fun call!4836 () Bool)

(assert (=> b!290741 (= e!207111 call!4836)))

(declare-fun b!290742 () Bool)

(declare-fun e!207109 () Bool)

(assert (=> b!290742 (= e!207109 call!4836)))

(declare-fun b!290743 () Bool)

(declare-fun res!240186 () Bool)

(declare-fun lt!422043 () (_ BitVec 32))

(assert (=> b!290743 (= res!240186 (= lt!422043 #b00000000000000000000000000000000))))

(assert (=> b!290743 (=> res!240186 e!207109)))

(assert (=> b!290743 (= e!207113 e!207109)))

(declare-fun b!290744 () Bool)

(declare-fun e!207108 () Bool)

(declare-fun e!207112 () Bool)

(assert (=> b!290744 (= e!207108 e!207112)))

(declare-fun res!240187 () Bool)

(assert (=> b!290744 (=> (not res!240187) (not e!207112))))

(declare-fun e!207110 () Bool)

(assert (=> b!290744 (= res!240187 e!207110)))

(declare-fun res!240185 () Bool)

(assert (=> b!290744 (=> res!240185 e!207110)))

(assert (=> b!290744 (= res!240185 (bvsge (_1!12668 lt!422042) (_2!12668 lt!422042)))))

(assert (=> b!290744 (= lt!422043 ((_ extract 31 0) (bvsrem from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!290744 (= lt!422041 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun arrayBitIndices!0 ((_ BitVec 64) (_ BitVec 64)) tuple4!834)

(assert (=> b!290744 (= lt!422042 (arrayBitIndices!0 #b0000000000000000000000000000000000000000000000000000000000000000 from!505))))

(declare-fun bm!4833 () Bool)

(declare-fun c!13294 () Bool)

(assert (=> bm!4833 (= call!4836 (byteRangesEq!0 (ite c!13294 (select (arr!8474 arr!273) (_3!1257 lt!422042)) (select (arr!8474 arr!273) (_4!417 lt!422042))) (ite c!13294 (select (arr!8474 (_3!1255 lt!421771)) (_3!1257 lt!422042)) (select (arr!8474 (_3!1255 lt!421771)) (_4!417 lt!422042))) (ite c!13294 lt!422041 #b00000000000000000000000000000000) lt!422043))))

(declare-fun b!290745 () Bool)

(assert (=> b!290745 (= e!207112 e!207111)))

(assert (=> b!290745 (= c!13294 (= (_3!1257 lt!422042) (_4!417 lt!422042)))))

(declare-fun b!290746 () Bool)

(declare-fun arrayRangesEq!1475 (array!17248 array!17248 (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!290746 (= e!207110 (arrayRangesEq!1475 arr!273 (_3!1255 lt!421771) (_1!12668 lt!422042) (_2!12668 lt!422042)))))

(declare-fun d!98518 () Bool)

(declare-fun res!240189 () Bool)

(assert (=> d!98518 (=> res!240189 e!207108)))

(assert (=> d!98518 (= res!240189 (bvsge #b0000000000000000000000000000000000000000000000000000000000000000 from!505))))

(assert (=> d!98518 (= (arrayBitRangesEq!0 arr!273 (_3!1255 lt!421771) #b0000000000000000000000000000000000000000000000000000000000000000 from!505) e!207108)))

(assert (= (and d!98518 (not res!240189)) b!290744))

(assert (= (and b!290744 (not res!240185)) b!290746))

(assert (= (and b!290744 res!240187) b!290745))

(assert (= (and b!290745 c!13294) b!290741))

(assert (= (and b!290745 (not c!13294)) b!290740))

(assert (= (and b!290740 res!240188) b!290743))

(assert (= (and b!290743 (not res!240186)) b!290742))

(assert (= (or b!290741 b!290742) bm!4833))

(declare-fun m!425053 () Bool)

(assert (=> b!290740 m!425053))

(declare-fun m!425055 () Bool)

(assert (=> b!290740 m!425055))

(assert (=> b!290740 m!425053))

(assert (=> b!290740 m!425055))

(declare-fun m!425057 () Bool)

(assert (=> b!290740 m!425057))

(declare-fun m!425059 () Bool)

(assert (=> b!290744 m!425059))

(assert (=> bm!4833 m!425055))

(assert (=> bm!4833 m!425053))

(declare-fun m!425061 () Bool)

(assert (=> bm!4833 m!425061))

(declare-fun m!425063 () Bool)

(assert (=> bm!4833 m!425063))

(declare-fun m!425065 () Bool)

(assert (=> bm!4833 m!425065))

(declare-fun m!425067 () Bool)

(assert (=> b!290746 m!425067))

(assert (=> b!290598 d!98518))

(declare-fun d!98520 () Bool)

(declare-fun e!207114 () Bool)

(assert (=> d!98520 e!207114))

(declare-fun res!240190 () Bool)

(assert (=> d!98520 (=> (not res!240190) (not e!207114))))

(declare-fun lt!422046 () (_ BitVec 64))

(declare-fun lt!422048 () (_ BitVec 64))

(declare-fun lt!422045 () (_ BitVec 64))

(assert (=> d!98520 (= res!240190 (= lt!422046 (bvsub lt!422045 lt!422048)))))

(assert (=> d!98520 (or (= (bvand lt!422045 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!422048 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!422045 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!422045 lt!422048) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!98520 (= lt!422048 (remainingBits!0 ((_ sign_extend 32) (size!7466 (buf!7532 (_2!12664 lt!421771)))) ((_ sign_extend 32) (currentByte!13948 (_2!12664 lt!421771))) ((_ sign_extend 32) (currentBit!13943 (_2!12664 lt!421771)))))))

(declare-fun lt!422044 () (_ BitVec 64))

(declare-fun lt!422049 () (_ BitVec 64))

(assert (=> d!98520 (= lt!422045 (bvmul lt!422044 lt!422049))))

(assert (=> d!98520 (or (= lt!422044 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!422049 (bvsdiv (bvmul lt!422044 lt!422049) lt!422044)))))

(assert (=> d!98520 (= lt!422049 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!98520 (= lt!422044 ((_ sign_extend 32) (size!7466 (buf!7532 (_2!12664 lt!421771)))))))

(assert (=> d!98520 (= lt!422046 (bvadd (bvmul ((_ sign_extend 32) (currentByte!13948 (_2!12664 lt!421771))) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!13943 (_2!12664 lt!421771)))))))

(assert (=> d!98520 (invariant!0 (currentBit!13943 (_2!12664 lt!421771)) (currentByte!13948 (_2!12664 lt!421771)) (size!7466 (buf!7532 (_2!12664 lt!421771))))))

(assert (=> d!98520 (= (bitIndex!0 (size!7466 (buf!7532 (_2!12664 lt!421771))) (currentByte!13948 (_2!12664 lt!421771)) (currentBit!13943 (_2!12664 lt!421771))) lt!422046)))

(declare-fun b!290747 () Bool)

(declare-fun res!240191 () Bool)

(assert (=> b!290747 (=> (not res!240191) (not e!207114))))

(assert (=> b!290747 (= res!240191 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!422046))))

(declare-fun b!290748 () Bool)

(declare-fun lt!422047 () (_ BitVec 64))

(assert (=> b!290748 (= e!207114 (bvsle lt!422046 (bvmul lt!422047 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!290748 (or (= lt!422047 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!422047 #b0000000000000000000000000000000000000000000000000000000000001000) lt!422047)))))

(assert (=> b!290748 (= lt!422047 ((_ sign_extend 32) (size!7466 (buf!7532 (_2!12664 lt!421771)))))))

(assert (= (and d!98520 res!240190) b!290747))

(assert (= (and b!290747 res!240191) b!290748))

(declare-fun m!425069 () Bool)

(assert (=> d!98520 m!425069))

(assert (=> d!98520 m!424817))

(assert (=> b!290598 d!98520))

(declare-fun d!98522 () Bool)

(assert (=> d!98522 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!7466 (buf!7532 (_2!12663 lt!421770)))) ((_ sign_extend 32) (currentByte!13948 (_2!12663 lt!421770))) ((_ sign_extend 32) (currentBit!13943 (_2!12663 lt!421770))) (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001)) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!7466 (buf!7532 (_2!12663 lt!421770)))) ((_ sign_extend 32) (currentByte!13948 (_2!12663 lt!421770))) ((_ sign_extend 32) (currentBit!13943 (_2!12663 lt!421770)))) (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001)))))

(declare-fun bs!25091 () Bool)

(assert (= bs!25091 d!98522))

(declare-fun m!425071 () Bool)

(assert (=> bs!25091 m!425071))

(assert (=> b!290598 d!98522))

(declare-fun d!98524 () Bool)

(assert (=> d!98524 (= (bitAt!0 (_3!1255 lt!421771) from!505) (not (= (bvand ((_ sign_extend 24) (select (arr!8474 (_3!1255 lt!421771)) ((_ extract 31 0) (bvsdiv from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem from!505 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)))))

(declare-fun bs!25092 () Bool)

(assert (= bs!25092 d!98524))

(declare-fun m!425073 () Bool)

(assert (=> bs!25092 m!425073))

(assert (=> bs!25092 m!424895))

(assert (=> b!290598 d!98524))

(declare-fun b!290749 () Bool)

(declare-fun e!207118 () Bool)

(declare-fun e!207120 () Bool)

(assert (=> b!290749 (= e!207118 e!207120)))

(declare-fun res!240195 () Bool)

(declare-fun lt!422051 () tuple4!834)

(declare-fun lt!422050 () (_ BitVec 32))

(assert (=> b!290749 (= res!240195 (byteRangesEq!0 (select (arr!8474 arr!273) (_3!1257 lt!422051)) (select (arr!8474 lt!421778) (_3!1257 lt!422051)) lt!422050 #b00000000000000000000000000001000))))

(assert (=> b!290749 (=> (not res!240195) (not e!207120))))

(declare-fun b!290750 () Bool)

(declare-fun call!4837 () Bool)

(assert (=> b!290750 (= e!207118 call!4837)))

(declare-fun b!290751 () Bool)

(declare-fun e!207116 () Bool)

(assert (=> b!290751 (= e!207116 call!4837)))

(declare-fun b!290752 () Bool)

(declare-fun res!240193 () Bool)

(declare-fun lt!422052 () (_ BitVec 32))

(assert (=> b!290752 (= res!240193 (= lt!422052 #b00000000000000000000000000000000))))

(assert (=> b!290752 (=> res!240193 e!207116)))

(assert (=> b!290752 (= e!207120 e!207116)))

(declare-fun b!290753 () Bool)

(declare-fun e!207115 () Bool)

(declare-fun e!207119 () Bool)

(assert (=> b!290753 (= e!207115 e!207119)))

(declare-fun res!240194 () Bool)

(assert (=> b!290753 (=> (not res!240194) (not e!207119))))

(declare-fun e!207117 () Bool)

(assert (=> b!290753 (= res!240194 e!207117)))

(declare-fun res!240192 () Bool)

(assert (=> b!290753 (=> res!240192 e!207117)))

(assert (=> b!290753 (= res!240192 (bvsge (_1!12668 lt!422051) (_2!12668 lt!422051)))))

(assert (=> b!290753 (= lt!422052 ((_ extract 31 0) (bvsrem from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!290753 (= lt!422050 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!290753 (= lt!422051 (arrayBitIndices!0 #b0000000000000000000000000000000000000000000000000000000000000000 from!505))))

(declare-fun bm!4834 () Bool)

(declare-fun c!13295 () Bool)

(assert (=> bm!4834 (= call!4837 (byteRangesEq!0 (ite c!13295 (select (arr!8474 arr!273) (_3!1257 lt!422051)) (select (arr!8474 arr!273) (_4!417 lt!422051))) (ite c!13295 (select (arr!8474 lt!421778) (_3!1257 lt!422051)) (select (arr!8474 lt!421778) (_4!417 lt!422051))) (ite c!13295 lt!422050 #b00000000000000000000000000000000) lt!422052))))

(declare-fun b!290754 () Bool)

(assert (=> b!290754 (= e!207119 e!207118)))

(assert (=> b!290754 (= c!13295 (= (_3!1257 lt!422051) (_4!417 lt!422051)))))

(declare-fun b!290755 () Bool)

(assert (=> b!290755 (= e!207117 (arrayRangesEq!1475 arr!273 lt!421778 (_1!12668 lt!422051) (_2!12668 lt!422051)))))

(declare-fun d!98526 () Bool)

(declare-fun res!240196 () Bool)

(assert (=> d!98526 (=> res!240196 e!207115)))

(assert (=> d!98526 (= res!240196 (bvsge #b0000000000000000000000000000000000000000000000000000000000000000 from!505))))

(assert (=> d!98526 (= (arrayBitRangesEq!0 arr!273 lt!421778 #b0000000000000000000000000000000000000000000000000000000000000000 from!505) e!207115)))

(assert (= (and d!98526 (not res!240196)) b!290753))

(assert (= (and b!290753 (not res!240192)) b!290755))

(assert (= (and b!290753 res!240194) b!290754))

(assert (= (and b!290754 c!13295) b!290750))

(assert (= (and b!290754 (not c!13295)) b!290749))

(assert (= (and b!290749 res!240195) b!290752))

(assert (= (and b!290752 (not res!240193)) b!290751))

(assert (= (or b!290750 b!290751) bm!4834))

(declare-fun m!425075 () Bool)

(assert (=> b!290749 m!425075))

(declare-fun m!425077 () Bool)

(assert (=> b!290749 m!425077))

(assert (=> b!290749 m!425075))

(assert (=> b!290749 m!425077))

(declare-fun m!425079 () Bool)

(assert (=> b!290749 m!425079))

(assert (=> b!290753 m!425059))

(assert (=> bm!4834 m!425077))

(assert (=> bm!4834 m!425075))

(declare-fun m!425081 () Bool)

(assert (=> bm!4834 m!425081))

(declare-fun m!425083 () Bool)

(assert (=> bm!4834 m!425083))

(declare-fun m!425085 () Bool)

(assert (=> bm!4834 m!425085))

(declare-fun m!425087 () Bool)

(assert (=> b!290755 m!425087))

(assert (=> b!290598 d!98526))

(declare-fun d!98528 () Bool)

(declare-fun e!207135 () Bool)

(assert (=> d!98528 e!207135))

(declare-fun res!240213 () Bool)

(assert (=> d!98528 (=> (not res!240213) (not e!207135))))

(declare-datatypes ((tuple2!22822 0))(
  ( (tuple2!22823 (_1!12670 Unit!20185) (_2!12670 BitStream!12942)) )
))
(declare-fun increaseBitIndex!0 (BitStream!12942) tuple2!22822)

(assert (=> d!98528 (= res!240213 (= (buf!7532 (_2!12670 (increaseBitIndex!0 thiss!1728))) (buf!7532 thiss!1728)))))

(declare-fun lt!422142 () Bool)

(assert (=> d!98528 (= lt!422142 (not (= (bvand ((_ sign_extend 24) (select (arr!8474 (buf!7532 thiss!1728)) (currentByte!13948 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!13943 thiss!1728)))) #b00000000000000000000000000000000)))))

(declare-fun lt!422140 () tuple2!22816)

(assert (=> d!98528 (= lt!422140 (tuple2!22817 (not (= (bvand ((_ sign_extend 24) (select (arr!8474 (buf!7532 thiss!1728)) (currentByte!13948 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!13943 thiss!1728)))) #b00000000000000000000000000000000)) (_2!12670 (increaseBitIndex!0 thiss!1728))))))

(declare-fun validate_offset_bit!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> d!98528 (validate_offset_bit!0 ((_ sign_extend 32) (size!7466 (buf!7532 thiss!1728))) ((_ sign_extend 32) (currentByte!13948 thiss!1728)) ((_ sign_extend 32) (currentBit!13943 thiss!1728)))))

(assert (=> d!98528 (= (readBit!0 thiss!1728) lt!422140)))

(declare-fun lt!422145 () (_ BitVec 64))

(declare-fun lt!422143 () (_ BitVec 64))

(declare-fun b!290776 () Bool)

(assert (=> b!290776 (= e!207135 (= (bitIndex!0 (size!7466 (buf!7532 (_2!12670 (increaseBitIndex!0 thiss!1728)))) (currentByte!13948 (_2!12670 (increaseBitIndex!0 thiss!1728))) (currentBit!13943 (_2!12670 (increaseBitIndex!0 thiss!1728)))) (bvadd lt!422143 lt!422145)))))

(assert (=> b!290776 (or (not (= (bvand lt!422143 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!422145 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!422143 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!422143 lt!422145) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!290776 (= lt!422145 #b0000000000000000000000000000000000000000000000000000000000000001)))

(assert (=> b!290776 (= lt!422143 (bitIndex!0 (size!7466 (buf!7532 thiss!1728)) (currentByte!13948 thiss!1728) (currentBit!13943 thiss!1728)))))

(declare-fun lt!422139 () Bool)

(assert (=> b!290776 (= lt!422139 (not (= (bvand ((_ sign_extend 24) (select (arr!8474 (buf!7532 thiss!1728)) (currentByte!13948 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!13943 thiss!1728)))) #b00000000000000000000000000000000)))))

(declare-fun lt!422144 () Bool)

(assert (=> b!290776 (= lt!422144 (not (= (bvand ((_ sign_extend 24) (select (arr!8474 (buf!7532 thiss!1728)) (currentByte!13948 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!13943 thiss!1728)))) #b00000000000000000000000000000000)))))

(declare-fun lt!422141 () Bool)

(assert (=> b!290776 (= lt!422141 (not (= (bvand ((_ sign_extend 24) (select (arr!8474 (buf!7532 thiss!1728)) (currentByte!13948 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!13943 thiss!1728)))) #b00000000000000000000000000000000)))))

(assert (= (and d!98528 res!240213) b!290776))

(declare-fun m!425089 () Bool)

(assert (=> d!98528 m!425089))

(declare-fun m!425091 () Bool)

(assert (=> d!98528 m!425091))

(declare-fun m!425093 () Bool)

(assert (=> d!98528 m!425093))

(declare-fun m!425095 () Bool)

(assert (=> d!98528 m!425095))

(assert (=> b!290776 m!424813))

(assert (=> b!290776 m!425093))

(declare-fun m!425097 () Bool)

(assert (=> b!290776 m!425097))

(assert (=> b!290776 m!425091))

(assert (=> b!290776 m!425089))

(assert (=> b!290598 d!98528))

(declare-fun d!98530 () Bool)

(declare-fun e!207142 () Bool)

(assert (=> d!98530 e!207142))

(declare-fun res!240223 () Bool)

(assert (=> d!98530 (=> (not res!240223) (not e!207142))))

(declare-fun lt!422191 () (_ BitVec 32))

(assert (=> d!98530 (= res!240223 (and (bvsge lt!422191 #b00000000000000000000000000000000) (bvslt lt!422191 (size!7466 arr!273))))))

(declare-fun lt!422193 () (_ BitVec 8))

(declare-fun lt!422192 () Unit!20185)

(declare-fun lt!422190 () (_ BitVec 32))

(declare-fun choose!53 (array!17248 (_ BitVec 64) Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 8)) Unit!20185)

(assert (=> d!98530 (= lt!422192 (choose!53 arr!273 from!505 (_1!12663 lt!421770) lt!422191 lt!422190 lt!422193))))

(assert (=> d!98530 (= lt!422193 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8474 arr!273) lt!422191)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!422190)))) ((_ sign_extend 24) (ite (_1!12663 lt!421770) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!422190) #b00000000)))))))

(assert (=> d!98530 (= lt!422190 ((_ extract 31 0) (bvsrem from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> d!98530 (= lt!422191 ((_ extract 31 0) (bvsdiv from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> d!98530 (= (arrayBitRangesUpdatedAtLemma!0 arr!273 from!505 (_1!12663 lt!421770)) lt!422192)))

(declare-fun b!290789 () Bool)

(assert (=> b!290789 (= e!207142 (arrayBitRangesEq!0 arr!273 (array!17249 (store (arr!8474 arr!273) lt!422191 lt!422193) (size!7466 arr!273)) #b0000000000000000000000000000000000000000000000000000000000000000 from!505))))

(assert (= (and d!98530 res!240223) b!290789))

(declare-fun m!425157 () Bool)

(assert (=> d!98530 m!425157))

(declare-fun m!425159 () Bool)

(assert (=> d!98530 m!425159))

(declare-fun m!425161 () Bool)

(assert (=> d!98530 m!425161))

(declare-fun m!425163 () Bool)

(assert (=> b!290789 m!425163))

(declare-fun m!425165 () Bool)

(assert (=> b!290789 m!425165))

(assert (=> b!290598 d!98530))

(declare-fun d!98534 () Bool)

(assert (=> d!98534 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!7466 (buf!7532 thiss!1728))) ((_ sign_extend 32) (currentByte!13948 thiss!1728)) ((_ sign_extend 32) (currentBit!13943 thiss!1728)) (bvsub nBits!523 from!505)) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!7466 (buf!7532 thiss!1728))) ((_ sign_extend 32) (currentByte!13948 thiss!1728)) ((_ sign_extend 32) (currentBit!13943 thiss!1728))) (bvsub nBits!523 from!505)))))

(declare-fun bs!25093 () Bool)

(assert (= bs!25093 d!98534))

(assert (=> bs!25093 m!424901))

(assert (=> b!290601 d!98534))

(declare-fun d!98536 () Bool)

(assert (=> d!98536 (= (array_inv!7078 (buf!7532 thiss!1728)) (bvsge (size!7466 (buf!7532 thiss!1728)) #b00000000000000000000000000000000))))

(assert (=> b!290600 d!98536))

(declare-fun d!98538 () Bool)

(assert (=> d!98538 (= (inv!12 thiss!1728) (invariant!0 (currentBit!13943 thiss!1728) (currentByte!13948 thiss!1728) (size!7466 (buf!7532 thiss!1728))))))

(declare-fun bs!25094 () Bool)

(assert (= bs!25094 d!98538))

(assert (=> bs!25094 m!424903))

(assert (=> start!64734 d!98538))

(declare-fun d!98540 () Bool)

(assert (=> d!98540 (= (array_inv!7078 arr!273) (bvsge (size!7466 arr!273) #b00000000000000000000000000000000))))

(assert (=> start!64734 d!98540))

(check-sat (not b!290725) (not b!290740) (not d!98468) (not b!290776) (not d!98530) (not d!98456) (not bm!4833) (not bm!4830) (not b!290724) (not b!290746) (not b!290720) (not d!98460) (not d!98520) (not d!98464) (not b!290755) (not b!290753) (not b!290722) (not b!290718) (not b!290789) (not b!290622) (not d!98534) (not d!98466) (not bm!4834) (not d!98528) (not b!290749) (not b!290717) (not d!98538) (not bm!4829) (not d!98522) (not b!290744))
