; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!3722 () Bool)

(assert start!3722)

(declare-fun b!16115 () Bool)

(declare-datatypes ((Unit!1371 0))(
  ( (Unit!1372) )
))
(declare-datatypes ((tuple2!1992 0))(
  ( (tuple2!1993 (_1!1057 Unit!1371) (_2!1057 (_ BitVec 32))) )
))
(declare-fun e!10052 () tuple2!1992)

(declare-fun v!288 () (_ BitVec 64))

(declare-fun GetBitCountSignedWhile!0 ((_ BitVec 64) (_ BitVec 32)) tuple2!1992)

(assert (=> b!16115 (= e!10052 (GetBitCountSignedWhile!0 v!288 #b00000000000000000000000001000000))))

(declare-fun b!16117 () Bool)

(declare-fun res!14843 () Bool)

(declare-fun e!10053 () Bool)

(assert (=> b!16117 (=> (not res!14843) (not e!10053))))

(declare-fun lt!24441 () tuple2!1992)

(declare-fun onesMSBLong!0 ((_ BitVec 32)) (_ BitVec 64))

(declare-fun onesLSBLong!0 ((_ BitVec 32)) (_ BitVec 64))

(assert (=> b!16117 (= res!14843 (= (bvor (onesMSBLong!0 (bvsub #b00000000000000000000000001000000 (_2!1057 lt!24441))) (bvand v!288 (onesLSBLong!0 (_2!1057 lt!24441)))) v!288))))

(declare-fun b!16118 () Bool)

(declare-fun lt!24442 () (_ BitVec 64))

(assert (=> b!16118 (= e!10053 (or (bvslt lt!24442 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsgt lt!24442 #b0000000000000000000000000000000000000000000000000000000001000000)))))

(assert (=> b!16118 (= lt!24442 ((_ sign_extend 32) (bvsub (_2!1057 lt!24441) #b00000000000000000000000000000001)))))

(declare-fun b!16116 () Bool)

(declare-fun Unit!1373 () Unit!1371)

(assert (=> b!16116 (= e!10052 (tuple2!1993 Unit!1373 #b00000000000000000000000001000000))))

(declare-fun res!14842 () Bool)

(assert (=> start!3722 (=> (not res!14842) (not e!10053))))

(assert (=> start!3722 (= res!14842 (and (bvsle #b00000000000000000000000000000000 (_2!1057 lt!24441)) (bvsle (_2!1057 lt!24441) #b00000000000000000000000001000000) (bvslt v!288 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!3722 (= lt!24441 e!10052)))

(declare-fun c!1114 () Bool)

(assert (=> start!3722 (= c!1114 (= (not (= (bvand v!288 #b0100000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (bvand v!288 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> start!3722 e!10053))

(assert (=> start!3722 true))

(assert (= (and start!3722 c!1114) b!16115))

(assert (= (and start!3722 (not c!1114)) b!16116))

(assert (= (and start!3722 res!14842) b!16117))

(assert (= (and b!16117 res!14843) b!16118))

(declare-fun m!22815 () Bool)

(assert (=> b!16115 m!22815))

(declare-fun m!22817 () Bool)

(assert (=> b!16117 m!22817))

(declare-fun m!22819 () Bool)

(assert (=> b!16117 m!22819))

(push 1)

(assert (not b!16115))

(assert (not b!16117))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun b!16154 () Bool)

(declare-fun e!10073 () tuple2!1992)

(declare-fun lt!24469 () (_ BitVec 32))

(declare-fun Unit!1380 () Unit!1371)

(assert (=> b!16154 (= e!10073 (tuple2!1993 Unit!1380 lt!24469))))

(declare-fun b!16153 () Bool)

(assert (=> b!16153 (= e!10073 (GetBitCountSignedWhile!0 v!288 lt!24469))))

(declare-fun b!16155 () Bool)

(declare-fun e!10072 () Bool)

(declare-fun e!10074 () Bool)

(assert (=> b!16155 (= e!10072 e!10074)))

(declare-fun res!14860 () Bool)

(assert (=> b!16155 (=> res!14860 e!10074)))

(declare-fun lt!24470 () tuple2!1992)

(assert (=> b!16155 (= res!14860 (bvslt (_2!1057 lt!24470) #b00000000000000000000000000000010))))

(declare-fun lt!24471 () Bool)

(declare-fun lt!24472 () (_ BitVec 64))

(declare-fun b!16156 () Bool)

(assert (=> b!16156 (= e!10074 (not (= (not (= (bvand v!288 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 lt!24472)) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24471)))))

(assert (=> b!16156 (and (bvsge lt!24472 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsle lt!24472 #b0000000000000000000000000000000000000000000000000000000001000000))))

(assert (=> b!16156 (= lt!24472 ((_ sign_extend 32) (bvsub (_2!1057 lt!24470) #b00000000000000000000000000000010)))))

(assert (=> b!16156 (or (= (bvand (_2!1057 lt!24470) #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand (_2!1057 lt!24470) #b10000000000000000000000000000000) (bvand (bvsub (_2!1057 lt!24470) #b00000000000000000000000000000010) #b10000000000000000000000000000000)))))

(declare-fun d!5178 () Bool)

(assert (=> d!5178 e!10072))

(declare-fun res!14861 () Bool)

(assert (=> d!5178 (=> (not res!14861) (not e!10072))))

(assert (=> d!5178 (= res!14861 (and (bvsge (_2!1057 lt!24470) #b00000000000000000000000000000001) (bvsle (_2!1057 lt!24470) #b00000000000000000000000001000000)))))

(assert (=> d!5178 (= lt!24470 e!10073)))

(declare-fun c!1123 () Bool)

(assert (=> d!5178 (= c!1123 (and (bvsge lt!24469 #b00000000000000000000000000000010) (= (not (= (bvand v!288 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub lt!24469 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24471)))))

(assert (=> d!5178 (= lt!24469 (bvsub #b00000000000000000000000001000000 #b00000000000000000000000000000001))))

(assert (=> d!5178 (and (bvsge #b00000000000000000000000001000000 #b00000000000000000000000000000001) (bvsle #b00000000000000000000000001000000 #b00000000000000000000000001000000) (bvsge #b00000000000000000000000001000000 #b00000000000000000000000000000010) (= (not (= (bvand v!288 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub #b00000000000000000000000001000000 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24471))))

(assert (=> d!5178 (= lt!24471 (not (= (bvand v!288 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5178 (= (GetBitCountSignedWhile!0 v!288 #b00000000000000000000000001000000) lt!24470)))

(assert (= (and d!5178 c!1123) b!16153))

(assert (= (and d!5178 (not c!1123)) b!16154))

(assert (= (and d!5178 res!14861) b!16155))

(assert (= (and b!16155 (not res!14860)) b!16156))

(declare-fun m!22833 () Bool)

(assert (=> b!16153 m!22833))

(assert (=> b!16115 d!5178))

(declare-fun d!5184 () Bool)

(assert (=> d!5184 (= (onesMSBLong!0 (bvsub #b00000000000000000000000001000000 (_2!1057 lt!24441))) (ite (= (bvsub #b00000000000000000000000001000000 (_2!1057 lt!24441)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000 (bvshl #b1111111111111111111111111111111111111111111111111111111111111111 ((_ sign_extend 32) (bvsub #b00000000000000000000000001000000 (bvsub #b00000000000000000000000001000000 (_2!1057 lt!24441)))))))))

(assert (=> b!16117 d!5184))

(declare-fun d!5186 () Bool)

(assert (=> d!5186 (= (onesLSBLong!0 (_2!1057 lt!24441)) (bvlshr #b1111111111111111111111111111111111111111111111111111111111111111 ((_ sign_extend 32) (bvsub #b00000000000000000000000001000000 (_2!1057 lt!24441)))))))

(assert (=> b!16117 d!5186))

(push 1)

(assert (not b!16153))

(check-sat)

