; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!46012 () Bool)

(assert start!46012)

(declare-fun res!186756 () Bool)

(declare-fun e!150965 () Bool)

(assert (=> start!46012 (=> (not res!186756) (not e!150965))))

(declare-fun v!298 () (_ BitVec 64))

(assert (=> start!46012 (= res!186756 (and (bvslt v!298 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111111111110000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111100000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111110000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111100000000000000000000000000000000000000000000000) (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!46012 e!150965))

(assert (=> start!46012 true))

(declare-fun b!222312 () Bool)

(declare-datatypes ((Unit!16000 0))(
  ( (Unit!16001) )
))
(declare-datatypes ((tuple3!1116 0))(
  ( (tuple3!1117 (_1!10193 Unit!16000) (_2!10193 (_ BitVec 32)) (_3!700 Bool)) )
))
(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1116)

(assert (=> b!222312 (= e!150965 (not (_3!700 (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000110111 true))))))

(assert (= (and start!46012 res!186756) b!222312))

(declare-fun m!340593 () Bool)

(assert (=> b!222312 m!340593))

(push 1)

(assert (not b!222312))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!75177 () Bool)

(declare-fun e!150987 () Bool)

(assert (=> d!75177 e!150987))

(declare-fun res!186770 () Bool)

(assert (=> d!75177 (=> (not res!186770) (not e!150987))))

(declare-fun lt!351244 () tuple3!1116)

(declare-fun lt!351243 () (_ BitVec 32))

(assert (=> d!75177 (= res!186770 (bvsge (_2!10193 lt!351244) (bvsub lt!351243 #b00000000000000000000000000000001)))))

(assert (=> d!75177 (or (= (bvand lt!351243 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!351243 #b10000000000000000000000000000000) (bvand (bvsub lt!351243 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!351240 () (_ BitVec 32))

(declare-fun lt!351241 () (_ BitVec 32))

(assert (=> d!75177 (= lt!351243 (bvmul lt!351240 lt!351241))))

(assert (=> d!75177 (or (= lt!351240 #b00000000000000000000000000000000) (= lt!351241 (bvsdiv (bvmul lt!351240 lt!351241) lt!351240)))))

(assert (=> d!75177 (= lt!351241 #b00000000000000000000000000001000)))

(declare-fun e!150986 () tuple3!1116)

(assert (=> d!75177 (= lt!351244 e!150986)))

(declare-fun c!11045 () Bool)

(declare-fun lt!351242 () (_ BitVec 32))

(assert (=> d!75177 (= c!11045 (bvslt lt!351242 #b00000000000000000000000001000000))))

(assert (=> d!75177 (= lt!351242 (bvadd #b00000000000000000000000000110111 #b00000000000000000000000000000001))))

(declare-fun lt!351245 () Bool)

(assert (=> d!75177 (= lt!351245 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) #b00000000000000000000000000110111))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!75177 (and (bvsge #b00000000000000000000000000110111 (bvsub (bvmul lt!351240 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle #b00000000000000000000000000110111 #b00000000000000000000000001000000) (bvslt #b00000000000000000000000000110111 #b00000000000000000000000001000000))))

(assert (=> d!75177 (= lt!351240 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!75177 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000110111 true) lt!351244)))

(declare-fun b!222338 () Bool)

(assert (=> b!222338 (= e!150986 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!351242 lt!351245))))

(declare-fun b!222339 () Bool)

(declare-fun Unit!16007 () Unit!16000)

(assert (=> b!222339 (= e!150986 (tuple3!1117 Unit!16007 lt!351242 lt!351245))))

(declare-fun b!222340 () Bool)

(assert (=> b!222340 (= e!150987 (and (bvsle (_2!10193 lt!351244) #b00000000000000000000000001000000) (bvsge (_2!10193 lt!351244) #b00000000000000000000000001000000)))))

(assert (= (and d!75177 c!11045) b!222338))

(assert (= (and d!75177 (not c!11045)) b!222339))

(assert (= (and d!75177 res!186770) b!222340))

(declare-fun m!340601 () Bool)

(assert (=> b!222338 m!340601))

(assert (=> b!222312 d!75177))

(push 1)

(assert (not b!222338))

(check-sat)

