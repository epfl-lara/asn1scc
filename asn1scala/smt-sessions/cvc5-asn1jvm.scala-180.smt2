; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!3854 () Bool)

(assert start!3854)

(declare-fun res!15254 () Bool)

(declare-fun e!10608 () Bool)

(assert (=> start!3854 (=> (not res!15254) (not e!10608))))

(declare-fun lt!25134 () Bool)

(declare-fun v!291 () (_ BitVec 64))

(declare-fun i!803 () (_ BitVec 32))

(assert (=> start!3854 (= res!15254 (and (bvsge i!803 #b00000000000000000000000000000001) (bvsle i!803 #b00000000000000000000000001000000) (bvsge i!803 #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub i!803 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25134) (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub i!803 #b00000000000000000000000000000011)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25134)))))

(assert (=> start!3854 (= lt!25134 (not (= (bvand v!291 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!3854 e!10608))

(assert (=> start!3854 true))

(declare-fun b!16883 () Bool)

(declare-datatypes ((Unit!1545 0))(
  ( (Unit!1546) )
))
(declare-datatypes ((tuple2!2028 0))(
  ( (tuple2!2029 (_1!1075 Unit!1545) (_2!1075 (_ BitVec 32))) )
))
(declare-fun lt!25135 () tuple2!2028)

(assert (=> b!16883 (= e!10608 (or (bvslt (_2!1075 lt!25135) #b00000000000000000000000000000001) (bvsgt (_2!1075 lt!25135) #b00000000000000000000000001000000)))))

(declare-fun GetBitCountSignedWhile!0 ((_ BitVec 64) (_ BitVec 32)) tuple2!2028)

(assert (=> b!16883 (= lt!25135 (GetBitCountSignedWhile!0 v!291 (bvsub i!803 #b00000000000000000000000000000001)))))

(assert (= (and start!3854 res!15254) b!16883))

(declare-fun m!23139 () Bool)

(assert (=> b!16883 m!23139))

(push 1)

(assert (not b!16883))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun lt!25168 () (_ BitVec 64))

(declare-fun e!10630 () Bool)

(declare-fun lt!25170 () Bool)

(declare-fun b!16913 () Bool)

(assert (=> b!16913 (= e!10630 (not (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 lt!25168)) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25170)))))

(assert (=> b!16913 (and (bvsge lt!25168 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsle lt!25168 #b0000000000000000000000000000000000000000000000000000000001000000))))

(declare-fun lt!25171 () tuple2!2028)

(assert (=> b!16913 (= lt!25168 ((_ sign_extend 32) (bvsub (_2!1075 lt!25171) #b00000000000000000000000000000010)))))

(assert (=> b!16913 (or (= (bvand (_2!1075 lt!25171) #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand (_2!1075 lt!25171) #b10000000000000000000000000000000) (bvand (bvsub (_2!1075 lt!25171) #b00000000000000000000000000000010) #b10000000000000000000000000000000)))))

(declare-fun d!5490 () Bool)

(declare-fun e!10632 () Bool)

(assert (=> d!5490 e!10632))

(declare-fun res!15272 () Bool)

(assert (=> d!5490 (=> (not res!15272) (not e!10632))))

(assert (=> d!5490 (= res!15272 (and (bvsge (_2!1075 lt!25171) #b00000000000000000000000000000001) (bvsle (_2!1075 lt!25171) #b00000000000000000000000001000000)))))

(declare-fun e!10631 () tuple2!2028)

(assert (=> d!5490 (= lt!25171 e!10631)))

(declare-fun lt!25169 () (_ BitVec 32))

(declare-fun c!1297 () Bool)

(assert (=> d!5490 (= c!1297 (and (bvsge lt!25169 #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub lt!25169 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25170)))))

(assert (=> d!5490 (= lt!25169 (bvsub (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000001))))

(assert (=> d!5490 (and (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000001) (bvsle (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000001000000) (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25170))))

(assert (=> d!5490 (= lt!25170 (not (= (bvand v!291 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5490 (= (GetBitCountSignedWhile!0 v!291 (bvsub i!803 #b00000000000000000000000000000001)) lt!25171)))

(declare-fun b!16910 () Bool)

(assert (=> b!16910 (= e!10631 (GetBitCountSignedWhile!0 v!291 lt!25169))))

(declare-fun b!16911 () Bool)

(declare-fun Unit!1552 () Unit!1545)

(assert (=> b!16911 (= e!10631 (tuple2!2029 Unit!1552 lt!25169))))

(declare-fun b!16912 () Bool)

(assert (=> b!16912 (= e!10632 e!10630)))

(declare-fun res!15271 () Bool)

(assert (=> b!16912 (=> res!15271 e!10630)))

(assert (=> b!16912 (= res!15271 (bvslt (_2!1075 lt!25171) #b00000000000000000000000000000010))))

(assert (= (and d!5490 c!1297) b!16910))

(assert (= (and d!5490 (not c!1297)) b!16911))

(assert (= (and d!5490 res!15272) b!16912))

(assert (= (and b!16912 (not res!15271)) b!16913))

(declare-fun m!23147 () Bool)

(assert (=> b!16910 m!23147))

(assert (=> b!16883 d!5490))

(push 1)

(assert (not b!16910))

(check-sat)

