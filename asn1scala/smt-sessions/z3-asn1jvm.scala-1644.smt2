; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!46038 () Bool)

(assert start!46038)

(declare-fun res!186795 () Bool)

(declare-fun e!151022 () Bool)

(assert (=> start!46038 (=> (not res!186795) (not e!151022))))

(declare-fun v!298 () (_ BitVec 64))

(assert (=> start!46038 (= res!186795 (and (bvslt v!298 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111111111110000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111100000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111110000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111100000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111110000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!46038 e!151022))

(assert (=> start!46038 true))

(declare-fun b!222387 () Bool)

(declare-datatypes ((Unit!16026 0))(
  ( (Unit!16027) )
))
(declare-datatypes ((tuple3!1130 0))(
  ( (tuple3!1131 (_1!10200 Unit!16026) (_2!10200 (_ BitVec 32)) (_3!707 Bool)) )
))
(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1130)

(assert (=> b!222387 (= e!151022 (not (_3!707 (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000111111 true))))))

(assert (= (and start!46038 res!186795) b!222387))

(declare-fun m!340631 () Bool)

(assert (=> b!222387 m!340631))

(check-sat (not b!222387))
(check-sat)
(get-model)

(declare-fun d!75205 () Bool)

(declare-fun e!151042 () Bool)

(assert (=> d!75205 e!151042))

(declare-fun res!186807 () Bool)

(assert (=> d!75205 (=> (not res!186807) (not e!151042))))

(declare-fun lt!351368 () tuple3!1130)

(declare-fun lt!351363 () (_ BitVec 32))

(assert (=> d!75205 (= res!186807 (bvsge (_2!10200 lt!351368) (bvsub lt!351363 #b00000000000000000000000000000001)))))

(assert (=> d!75205 (or (= (bvand lt!351363 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!351363 #b10000000000000000000000000000000) (bvand (bvsub lt!351363 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!351366 () (_ BitVec 32))

(declare-fun lt!351364 () (_ BitVec 32))

(assert (=> d!75205 (= lt!351363 (bvmul lt!351366 lt!351364))))

(assert (=> d!75205 (or (= lt!351366 #b00000000000000000000000000000000) (= lt!351364 (bvsdiv (bvmul lt!351366 lt!351364) lt!351366)))))

(assert (=> d!75205 (= lt!351364 #b00000000000000000000000000001000)))

(declare-fun e!151043 () tuple3!1130)

(assert (=> d!75205 (= lt!351368 e!151043)))

(declare-fun c!11064 () Bool)

(declare-fun lt!351365 () (_ BitVec 32))

(assert (=> d!75205 (= c!11064 (bvslt lt!351365 #b00000000000000000000000001000000))))

(assert (=> d!75205 (= lt!351365 (bvadd #b00000000000000000000000000111111 #b00000000000000000000000000000001))))

(declare-fun lt!351367 () Bool)

(assert (=> d!75205 (= lt!351367 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) #b00000000000000000000000000111111))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!75205 (and (bvsge #b00000000000000000000000000111111 (bvsub (bvmul lt!351366 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle #b00000000000000000000000000111111 #b00000000000000000000000001000000) (bvslt #b00000000000000000000000000111111 #b00000000000000000000000001000000))))

(assert (=> d!75205 (= lt!351366 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!75205 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000111111 true) lt!351368)))

(declare-fun b!222415 () Bool)

(assert (=> b!222415 (= e!151043 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!351365 lt!351367))))

(declare-fun b!222416 () Bool)

(declare-fun Unit!16031 () Unit!16026)

(assert (=> b!222416 (= e!151043 (tuple3!1131 Unit!16031 lt!351365 lt!351367))))

(declare-fun b!222417 () Bool)

(assert (=> b!222417 (= e!151042 (and (bvsle (_2!10200 lt!351368) #b00000000000000000000000001000000) (bvsge (_2!10200 lt!351368) #b00000000000000000000000001000000)))))

(assert (= (and d!75205 c!11064) b!222415))

(assert (= (and d!75205 (not c!11064)) b!222416))

(assert (= (and d!75205 res!186807) b!222417))

(declare-fun m!340639 () Bool)

(assert (=> b!222415 m!340639))

(assert (=> b!222387 d!75205))

(check-sat (not b!222415))
(check-sat)
