; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!37476 () Bool)

(assert start!37476)

(declare-fun res!141056 () Bool)

(declare-fun e!118434 () Bool)

(assert (=> start!37476 (=> (not res!141056) (not e!118434))))

(declare-fun uintSizeInBytes!5 () (_ BitVec 32))

(declare-fun v!147 () (_ BitVec 64))

(declare-fun i!474 () (_ BitVec 32))

(get-info :version)

(declare-datatypes ((Unit!11927 0))(
  ( (Unit!11928) )
))
(declare-datatypes ((ControlFlow!74 0))(
  ( (Return!73 (value!6902 (_ BitVec 64))) (Proceed!73 (value!6903 Unit!11927)) )
))
(declare-fun Unit!11929 () Unit!11927)

(assert (=> start!37476 (= res!141056 (and (bvsge uintSizeInBytes!5 #b00000000000000000000000000000001) (bvsle uintSizeInBytes!5 #b00000000000000000000000000001001) (not ((_ is Return!73) (ite (bvsle (bvand v!147 (bvshl #b0000000000000000000000000000000000000000000000000000000010000000 ((_ sign_extend 32) (bvmul #b00000000000000000000000000001000 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001))))) #b0000000000000000000000000000000000000000000000000000000000000000) (Return!73 v!147) (Proceed!73 Unit!11929)))) (bvsle i!474 #b00000000000000000000000000000111) (bvsge i!474 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)) (bvsge i!474 uintSizeInBytes!5) (bvsge (bvsub i!474 #b00000000000000000000000000000001) uintSizeInBytes!5)))))

(assert (=> start!37476 e!118434))

(assert (=> start!37476 true))

(declare-fun b!169749 () Bool)

(assert (=> b!169749 (= e!118434 false)))

(declare-fun vv!30 () (_ BitVec 64))

(declare-datatypes ((tuple3!980 0))(
  ( (tuple3!981 (_1!7946 Unit!11927) (_2!7946 (_ BitVec 32)) (_3!616 (_ BitVec 64))) )
))
(declare-fun lt!262270 () tuple3!980)

(declare-fun uint2intWhile!0 ((_ BitVec 32) (_ BitVec 64) (_ BitVec 32) (_ BitVec 64)) tuple3!980)

(assert (=> b!169749 (= lt!262270 (uint2intWhile!0 uintSizeInBytes!5 v!147 (bvsub i!474 #b00000000000000000000000000000001) (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474))))))

(assert (= (and start!37476 res!141056) b!169749))

(declare-fun m!269533 () Bool)

(assert (=> b!169749 m!269533))

(declare-fun m!269535 () Bool)

(assert (=> b!169749 m!269535))

(check-sat (not b!169749))
