; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!51102 () Bool)

(assert start!51102)

(declare-fun res!199736 () Bool)

(declare-fun e!165077 () Bool)

(assert (=> start!51102 (=> (not res!199736) (not e!165077))))

(declare-fun v!315 () (_ BitVec 64))

(assert (=> start!51102 (= res!199736 (bvslt v!315 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> start!51102 e!165077))

(assert (=> start!51102 true))

(declare-fun b!238939 () Bool)

(declare-fun e!165076 () Bool)

(assert (=> b!238939 (= e!165077 e!165076)))

(declare-fun res!199737 () Bool)

(assert (=> b!238939 (=> (not res!199737) (not e!165076))))

(declare-fun i!888 () (_ BitVec 32))

(declare-fun lt!373783 () (_ BitVec 32))

(assert (=> b!238939 (= res!199737 (and (bvsge i!888 lt!373783) (bvsle i!888 #b00000000000000000000000001000000) (bvslt i!888 #b00000000000000000000000001000000) (bvslt (bvadd #b00000000000000000000000000000001 i!888) #b00000000000000000000000001000000)))))

(declare-fun lt!373785 () (_ BitVec 32))

(assert (=> b!238939 (= lt!373783 (bvsub lt!373785 #b00000000000000000000000000000001))))

(assert (=> b!238939 (= lt!373785 (bvmul #b00000000000000000000000000001000 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!315 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!315 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!315 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!315 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!315 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000)))))))))))

(declare-fun b!238940 () Bool)

(declare-fun lt!373784 () (_ BitVec 32))

(assert (=> b!238940 (= e!165076 (and (not (= lt!373784 #b00000000000000000000000000000000)) (not (= lt!373784 (bvand lt!373783 #b10000000000000000000000000000000)))))))

(assert (=> b!238940 (= lt!373784 (bvand lt!373785 #b10000000000000000000000000000000))))

(declare-datatypes ((Unit!17417 0))(
  ( (Unit!17418) )
))
(declare-datatypes ((tuple3!1534 0))(
  ( (tuple3!1535 (_1!11016 Unit!17417) (_2!11016 (_ BitVec 32)) (_3!909 Bool)) )
))
(declare-fun lt!373782 () tuple3!1534)

(declare-fun allOnes!72 () Bool)

(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1534)

(assert (=> b!238940 (= lt!373782 (GetBytesNeededForNegativeNumberWhile!0 v!315 (bvadd #b00000000000000000000000000000001 i!888) (and allOnes!72 (not (= (bvand v!315 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) i!888))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and start!51102 res!199736) b!238939))

(assert (= (and b!238939 res!199737) b!238940))

(declare-fun m!360979 () Bool)

(assert (=> b!238940 m!360979))

(push 1)

(assert (not b!238940))

(check-sat)

(pop 1)

(push 1)

(check-sat)

