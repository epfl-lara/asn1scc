; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!4308 () Bool)

(assert start!4308)

(declare-fun b!17684 () Bool)

(declare-fun e!11344 () Bool)

(declare-datatypes ((array!1180 0))(
  ( (array!1181 (arr!929 (Array (_ BitVec 32) (_ BitVec 8))) (size!500 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!870 0))(
  ( (BitStream!871 (buf!818 array!1180) (currentByte!2033 (_ BitVec 32)) (currentBit!2028 (_ BitVec 32))) )
))
(declare-fun thiss!1917 () BitStream!870)

(declare-fun array_inv!470 (array!1180) Bool)

(assert (=> b!17684 (= e!11344 (array_inv!470 (buf!818 thiss!1917)))))

(declare-fun b!17683 () Bool)

(declare-fun e!11345 () Bool)

(declare-datatypes ((tuple2!2062 0))(
  ( (tuple2!2063 (_1!1098 array!1180) (_2!1098 BitStream!870)) )
))
(declare-fun lt!25462 () tuple2!2062)

(assert (=> b!17683 (= e!11345 (or (not (= (currentByte!2033 thiss!1917) (size!500 (buf!818 (_2!1098 lt!25462))))) (= (currentBit!2028 (_2!1098 lt!25462)) #b00000000000000000000000000000000)))))

(declare-fun b!17681 () Bool)

(declare-fun res!15601 () Bool)

(declare-fun e!11346 () Bool)

(assert (=> b!17681 (=> (not res!15601) (not e!11346))))

(declare-fun nBits!604 () (_ BitVec 64))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!17681 (= res!15601 (validate_offset_bits!1 ((_ sign_extend 32) (size!500 (buf!818 thiss!1917))) ((_ sign_extend 32) (currentByte!2033 thiss!1917)) ((_ sign_extend 32) (currentBit!2028 thiss!1917)) nBits!604))))

(declare-fun b!17682 () Bool)

(assert (=> b!17682 (= e!11346 (not (or (not (= (currentByte!2033 thiss!1917) (size!500 (buf!818 (_2!1098 lt!25462))))) (= (currentBit!2028 thiss!1917) #b00000000000000000000000000000000))))))

(assert (=> b!17682 e!11345))

(declare-fun res!15602 () Bool)

(assert (=> b!17682 (=> (not res!15602) (not e!11345))))

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!17682 (= res!15602 (invariant!0 (currentBit!2028 (_2!1098 lt!25462)) (currentByte!2033 (_2!1098 lt!25462)) (size!500 (buf!818 (_2!1098 lt!25462)))))))

(declare-fun readBits!0 (BitStream!870 (_ BitVec 64)) tuple2!2062)

(assert (=> b!17682 (= lt!25462 (readBits!0 thiss!1917 nBits!604))))

(declare-fun res!15600 () Bool)

(assert (=> start!4308 (=> (not res!15600) (not e!11346))))

(assert (=> start!4308 (= res!15600 (bvsge nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> start!4308 e!11346))

(assert (=> start!4308 true))

(declare-fun inv!12 (BitStream!870) Bool)

(assert (=> start!4308 (and (inv!12 thiss!1917) e!11344)))

(assert (= (and start!4308 res!15600) b!17681))

(assert (= (and b!17681 res!15601) b!17682))

(assert (= (and b!17682 res!15602) b!17683))

(assert (= start!4308 b!17684))

(declare-fun m!24005 () Bool)

(assert (=> b!17684 m!24005))

(declare-fun m!24007 () Bool)

(assert (=> b!17681 m!24007))

(declare-fun m!24009 () Bool)

(assert (=> b!17682 m!24009))

(declare-fun m!24011 () Bool)

(assert (=> b!17682 m!24011))

(declare-fun m!24013 () Bool)

(assert (=> start!4308 m!24013))

(check-sat (not start!4308) (not b!17681) (not b!17682) (not b!17684))
(check-sat)
(get-model)

(declare-fun d!5830 () Bool)

(assert (=> d!5830 (= (inv!12 thiss!1917) (invariant!0 (currentBit!2028 thiss!1917) (currentByte!2033 thiss!1917) (size!500 (buf!818 thiss!1917))))))

(declare-fun bs!1666 () Bool)

(assert (= bs!1666 d!5830))

(declare-fun m!24027 () Bool)

(assert (=> bs!1666 m!24027))

(assert (=> start!4308 d!5830))

(declare-fun d!5834 () Bool)

(declare-fun remainingBits!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))

(assert (=> d!5834 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!500 (buf!818 thiss!1917))) ((_ sign_extend 32) (currentByte!2033 thiss!1917)) ((_ sign_extend 32) (currentBit!2028 thiss!1917)) nBits!604) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!500 (buf!818 thiss!1917))) ((_ sign_extend 32) (currentByte!2033 thiss!1917)) ((_ sign_extend 32) (currentBit!2028 thiss!1917))) nBits!604))))

(declare-fun bs!1667 () Bool)

(assert (= bs!1667 d!5834))

(declare-fun m!24029 () Bool)

(assert (=> bs!1667 m!24029))

(assert (=> b!17681 d!5834))

(declare-fun d!5838 () Bool)

(assert (=> d!5838 (= (invariant!0 (currentBit!2028 (_2!1098 lt!25462)) (currentByte!2033 (_2!1098 lt!25462)) (size!500 (buf!818 (_2!1098 lt!25462)))) (and (bvsge (currentBit!2028 (_2!1098 lt!25462)) #b00000000000000000000000000000000) (bvslt (currentBit!2028 (_2!1098 lt!25462)) #b00000000000000000000000000001000) (bvsge (currentByte!2033 (_2!1098 lt!25462)) #b00000000000000000000000000000000) (or (bvslt (currentByte!2033 (_2!1098 lt!25462)) (size!500 (buf!818 (_2!1098 lt!25462)))) (and (= (currentBit!2028 (_2!1098 lt!25462)) #b00000000000000000000000000000000) (= (currentByte!2033 (_2!1098 lt!25462)) (size!500 (buf!818 (_2!1098 lt!25462))))))))))

(assert (=> b!17682 d!5838))

(declare-fun b!17737 () Bool)

(declare-fun res!15653 () Bool)

(declare-fun e!11367 () Bool)

(assert (=> b!17737 (=> (not res!15653) (not e!11367))))

(declare-fun lt!25543 () tuple2!2062)

(declare-fun lt!25538 () (_ BitVec 64))

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!17737 (= res!15653 (= (bvadd lt!25538 nBits!604) (bitIndex!0 (size!500 (buf!818 (_2!1098 lt!25543))) (currentByte!2033 (_2!1098 lt!25543)) (currentBit!2028 (_2!1098 lt!25543)))))))

(assert (=> b!17737 (or (not (= (bvand lt!25538 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!25538 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!25538 nBits!604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!17737 (= lt!25538 (bitIndex!0 (size!500 (buf!818 thiss!1917)) (currentByte!2033 thiss!1917) (currentBit!2028 thiss!1917)))))

(declare-fun b!17738 () Bool)

(declare-datatypes ((List!196 0))(
  ( (Nil!193) (Cons!192 (h!311 Bool) (t!946 List!196)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!870 array!1180 (_ BitVec 64) (_ BitVec 64)) List!196)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!870 BitStream!870 (_ BitVec 64)) List!196)

(assert (=> b!17738 (= e!11367 (= (byteArrayBitContentToList!0 (_2!1098 lt!25543) (_1!1098 lt!25543) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bitStreamReadBitsIntoList!0 (_2!1098 lt!25543) thiss!1917 nBits!604)))))

(declare-fun b!17739 () Bool)

(declare-fun res!15656 () Bool)

(assert (=> b!17739 (=> (not res!15656) (not e!11367))))

(declare-fun lt!25541 () (_ BitVec 64))

(assert (=> b!17739 (= res!15656 (= (size!500 (_1!1098 lt!25543)) ((_ extract 31 0) lt!25541)))))

(assert (=> b!17739 (and (bvslt lt!25541 #b0000000000000000000000000000000010000000000000000000000000000000) (bvsge lt!25541 #b1111111111111111111111111111111110000000000000000000000000000000))))

(declare-fun lt!25539 () (_ BitVec 64))

(declare-fun lt!25545 () (_ BitVec 64))

(assert (=> b!17739 (= lt!25541 (bvsdiv lt!25539 lt!25545))))

(assert (=> b!17739 (and (not (= lt!25545 #b0000000000000000000000000000000000000000000000000000000000000000)) (or (not (= lt!25539 #b1000000000000000000000000000000000000000000000000000000000000000)) (not (= lt!25545 #b1111111111111111111111111111111111111111111111111111111111111111))))))

(assert (=> b!17739 (= lt!25545 #b0000000000000000000000000000000000000000000000000000000000001000)))

(declare-fun lt!25546 () (_ BitVec 64))

(declare-fun lt!25544 () (_ BitVec 64))

(assert (=> b!17739 (= lt!25539 (bvsub lt!25546 lt!25544))))

(assert (=> b!17739 (or (= (bvand lt!25546 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!25544 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!25546 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!25546 lt!25544) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!17739 (= lt!25544 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!25542 () (_ BitVec 64))

(assert (=> b!17739 (= lt!25546 (bvadd nBits!604 lt!25542))))

(assert (=> b!17739 (or (not (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!25542 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd nBits!604 lt!25542) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!17739 (= lt!25542 #b0000000000000000000000000000000000000000000000000000000000001000)))

(declare-fun b!17740 () Bool)

(declare-fun res!15654 () Bool)

(assert (=> b!17740 (=> (not res!15654) (not e!11367))))

(assert (=> b!17740 (= res!15654 (invariant!0 (currentBit!2028 (_2!1098 lt!25543)) (currentByte!2033 (_2!1098 lt!25543)) (size!500 (buf!818 (_2!1098 lt!25543)))))))

(declare-fun d!5840 () Bool)

(assert (=> d!5840 e!11367))

(declare-fun res!15652 () Bool)

(assert (=> d!5840 (=> (not res!15652) (not e!11367))))

(assert (=> d!5840 (= res!15652 (= (buf!818 (_2!1098 lt!25543)) (buf!818 thiss!1917)))))

(declare-datatypes ((Unit!1586 0))(
  ( (Unit!1587) )
))
(declare-datatypes ((tuple3!124 0))(
  ( (tuple3!125 (_1!1101 Unit!1586) (_2!1101 BitStream!870) (_3!68 array!1180)) )
))
(declare-fun lt!25540 () tuple3!124)

(assert (=> d!5840 (= lt!25543 (tuple2!2063 (_3!68 lt!25540) (_2!1101 lt!25540)))))

(declare-fun readBitsLoop!0 (BitStream!870 (_ BitVec 64) array!1180 (_ BitVec 64) (_ BitVec 64)) tuple3!124)

(assert (=> d!5840 (= lt!25540 (readBitsLoop!0 thiss!1917 nBits!604 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604))))

(assert (=> d!5840 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bvsle nBits!604 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!5840 (= (readBits!0 thiss!1917 nBits!604) lt!25543)))

(declare-fun b!17741 () Bool)

(declare-fun res!15655 () Bool)

(assert (=> b!17741 (=> (not res!15655) (not e!11367))))

(assert (=> b!17741 (= res!15655 (bvsle (currentByte!2033 thiss!1917) (currentByte!2033 (_2!1098 lt!25543))))))

(assert (= (and d!5840 res!15652) b!17737))

(assert (= (and b!17737 res!15653) b!17740))

(assert (= (and b!17740 res!15654) b!17739))

(assert (= (and b!17739 res!15656) b!17741))

(assert (= (and b!17741 res!15655) b!17738))

(declare-fun m!24059 () Bool)

(assert (=> b!17737 m!24059))

(declare-fun m!24061 () Bool)

(assert (=> b!17737 m!24061))

(declare-fun m!24063 () Bool)

(assert (=> b!17738 m!24063))

(declare-fun m!24065 () Bool)

(assert (=> b!17738 m!24065))

(declare-fun m!24067 () Bool)

(assert (=> b!17740 m!24067))

(declare-fun m!24069 () Bool)

(assert (=> d!5840 m!24069))

(assert (=> b!17682 d!5840))

(declare-fun d!5848 () Bool)

(assert (=> d!5848 (= (array_inv!470 (buf!818 thiss!1917)) (bvsge (size!500 (buf!818 thiss!1917)) #b00000000000000000000000000000000))))

(assert (=> b!17684 d!5848))

(check-sat (not d!5840) (not d!5830) (not b!17737) (not d!5834) (not b!17738) (not b!17740))
(check-sat)
(get-model)

(declare-fun d!5868 () Bool)

(assert (=> d!5868 (= (invariant!0 (currentBit!2028 (_2!1098 lt!25543)) (currentByte!2033 (_2!1098 lt!25543)) (size!500 (buf!818 (_2!1098 lt!25543)))) (and (bvsge (currentBit!2028 (_2!1098 lt!25543)) #b00000000000000000000000000000000) (bvslt (currentBit!2028 (_2!1098 lt!25543)) #b00000000000000000000000000001000) (bvsge (currentByte!2033 (_2!1098 lt!25543)) #b00000000000000000000000000000000) (or (bvslt (currentByte!2033 (_2!1098 lt!25543)) (size!500 (buf!818 (_2!1098 lt!25543)))) (and (= (currentBit!2028 (_2!1098 lt!25543)) #b00000000000000000000000000000000) (= (currentByte!2033 (_2!1098 lt!25543)) (size!500 (buf!818 (_2!1098 lt!25543))))))))))

(assert (=> b!17740 d!5868))

(declare-fun b!17813 () Bool)

(declare-fun e!11403 () Bool)

(declare-fun lt!25795 () tuple3!124)

(declare-fun bitAt!0 (array!1180 (_ BitVec 64)) Bool)

(declare-datatypes ((tuple2!2072 0))(
  ( (tuple2!2073 (_1!1106 BitStream!870) (_2!1106 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!870) tuple2!2072)

(assert (=> b!17813 (= e!11403 (= (bitAt!0 (_3!68 lt!25795) #b0000000000000000000000000000000000000000000000000000000000000000) (_2!1106 (readBitPure!0 thiss!1917))))))

(declare-fun lt!25769 () (_ BitVec 32))

(declare-fun call!269 () Bool)

(declare-fun lt!25772 () (_ BitVec 32))

(declare-fun bm!265 () Bool)

(declare-datatypes ((tuple2!2074 0))(
  ( (tuple2!2075 (_1!1107 Bool) (_2!1107 BitStream!870)) )
))
(declare-fun lt!25778 () tuple2!2074)

(declare-fun c!1330 () Bool)

(declare-fun arrayBitRangesEq!0 (array!1180 array!1180 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> bm!265 (= call!269 (arrayBitRangesEq!0 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (ite c!1330 (array!1181 (store (arr!929 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!25772 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!929 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!25772)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!25769)))) ((_ sign_extend 24) (ite (_1!1107 lt!25778) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!25769) #b00000000))))) (size!500 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))) (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!1330 #b0000000000000000000000000000000000000000000000000000000000000000 (bvmul ((_ sign_extend 32) (size!500 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun b!17814 () Bool)

(declare-fun e!11402 () tuple3!124)

(declare-fun lt!25786 () Unit!1586)

(assert (=> b!17814 (= e!11402 (tuple3!125 lt!25786 thiss!1917 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun lt!25791 () Unit!1586)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!1180) Unit!1586)

(assert (=> b!17814 (= lt!25791 (arrayBitRangesEqReflexiveLemma!0 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(assert (=> b!17814 call!269))

(declare-fun lt!25776 () Unit!1586)

(assert (=> b!17814 (= lt!25776 lt!25791)))

(declare-fun lt!25790 () array!1180)

(assert (=> b!17814 (= lt!25790 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!25760 () array!1180)

(assert (=> b!17814 (= lt!25760 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!25775 () (_ BitVec 64))

(assert (=> b!17814 (= lt!25775 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25763 () (_ BitVec 64))

(assert (=> b!17814 (= lt!25763 ((_ sign_extend 32) (size!500 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!25781 () (_ BitVec 64))

(assert (=> b!17814 (= lt!25781 (bvmul lt!25763 #b0000000000000000000000000000000000000000000000000000000000001000))))

(declare-fun lt!25766 () (_ BitVec 64))

(assert (=> b!17814 (= lt!25766 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25788 () (_ BitVec 64))

(assert (=> b!17814 (= lt!25788 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!1180 array!1180 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1586)

(assert (=> b!17814 (= lt!25786 (arrayBitRangesEqSlicedLemma!0 lt!25790 lt!25760 lt!25775 lt!25781 lt!25766 lt!25788))))

(declare-fun call!268 () Bool)

(assert (=> b!17814 call!268))

(declare-fun b!17815 () Bool)

(declare-fun res!15703 () Bool)

(declare-fun e!11404 () Bool)

(assert (=> b!17815 (=> (not res!15703) (not e!11404))))

(assert (=> b!17815 (= res!15703 (invariant!0 (currentBit!2028 (_2!1101 lt!25795)) (currentByte!2033 (_2!1101 lt!25795)) (size!500 (buf!818 (_2!1101 lt!25795)))))))

(declare-fun b!17816 () Bool)

(assert (=> b!17816 (= e!11404 (= (byteArrayBitContentToList!0 (_2!1101 lt!25795) (_3!68 lt!25795) #b0000000000000000000000000000000000000000000000000000000000000000 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000)) (bitStreamReadBitsIntoList!0 (_2!1101 lt!25795) thiss!1917 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!17816 (or (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!17816 (or (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!17817 () Bool)

(declare-fun res!15700 () Bool)

(assert (=> b!17817 (=> (not res!15700) (not e!11404))))

(assert (=> b!17817 (= res!15700 (and (= (buf!818 thiss!1917) (buf!818 (_2!1101 lt!25795))) (= (size!500 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!500 (_3!68 lt!25795)))))))

(declare-fun b!17818 () Bool)

(declare-fun res!15705 () Bool)

(assert (=> b!17818 (=> (not res!15705) (not e!11404))))

(assert (=> b!17818 (= res!15705 e!11403)))

(declare-fun res!15702 () Bool)

(assert (=> b!17818 (=> res!15702 e!11403)))

(assert (=> b!17818 (= res!15702 (not (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604)))))

(declare-fun b!17819 () Bool)

(declare-fun res!15704 () Bool)

(assert (=> b!17819 (=> (not res!15704) (not e!11404))))

(assert (=> b!17819 (= res!15704 (arrayBitRangesEq!0 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!68 lt!25795) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!17820 () Bool)

(declare-fun e!11401 () Bool)

(declare-fun lt!25779 () tuple3!124)

(assert (=> b!17820 (= e!11401 (and (= (buf!818 thiss!1917) (buf!818 (_2!1101 lt!25779))) (= (size!500 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!500 (_3!68 lt!25779)))))))

(declare-fun b!17821 () Bool)

(declare-fun lt!25773 () Unit!1586)

(assert (=> b!17821 (= e!11402 (tuple3!125 lt!25773 (_2!1101 lt!25779) (_3!68 lt!25779)))))

(declare-fun readBit!0 (BitStream!870) tuple2!2074)

(assert (=> b!17821 (= lt!25778 (readBit!0 thiss!1917))))

(declare-fun lt!25782 () (_ BitVec 32))

(assert (=> b!17821 (= lt!25782 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!25784 () (_ BitVec 32))

(assert (=> b!17821 (= lt!25784 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!25787 () array!1180)

(assert (=> b!17821 (= lt!25787 (array!1181 (store (arr!929 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!25782 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!929 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!25782)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!25784)))) ((_ sign_extend 24) (ite (_1!1107 lt!25778) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!25784) #b00000000))))) (size!500 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!25770 () (_ BitVec 64))

(assert (=> b!17821 (= lt!25770 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!25780 () (_ BitVec 64))

(assert (=> b!17821 (= lt!25780 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!25765 () Unit!1586)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!870 BitStream!870 (_ BitVec 64) (_ BitVec 64)) Unit!1586)

(assert (=> b!17821 (= lt!25765 (validateOffsetBitsIneqLemma!0 thiss!1917 (_2!1107 lt!25778) lt!25770 lt!25780))))

(assert (=> b!17821 (validate_offset_bits!1 ((_ sign_extend 32) (size!500 (buf!818 (_2!1107 lt!25778)))) ((_ sign_extend 32) (currentByte!2033 (_2!1107 lt!25778))) ((_ sign_extend 32) (currentBit!2028 (_2!1107 lt!25778))) (bvsub lt!25770 lt!25780))))

(declare-fun lt!25761 () Unit!1586)

(assert (=> b!17821 (= lt!25761 lt!25765)))

(assert (=> b!17821 (= lt!25779 (readBitsLoop!0 (_2!1107 lt!25778) nBits!604 lt!25787 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) nBits!604))))

(declare-fun res!15701 () Bool)

(assert (=> b!17821 (= res!15701 (= (bvsub (bvadd (bitIndex!0 (size!500 (buf!818 thiss!1917)) (currentByte!2033 thiss!1917) (currentBit!2028 thiss!1917)) nBits!604) #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!500 (buf!818 (_2!1101 lt!25779))) (currentByte!2033 (_2!1101 lt!25779)) (currentBit!2028 (_2!1101 lt!25779)))))))

(assert (=> b!17821 (=> (not res!15701) (not e!11401))))

(assert (=> b!17821 e!11401))

(declare-fun lt!25762 () Unit!1586)

(declare-fun Unit!1594 () Unit!1586)

(assert (=> b!17821 (= lt!25762 Unit!1594)))

(assert (=> b!17821 (= lt!25772 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!17821 (= lt!25769 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!25785 () Unit!1586)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!1180 (_ BitVec 64) Bool) Unit!1586)

(assert (=> b!17821 (= lt!25785 (arrayBitRangesUpdatedAtLemma!0 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 (_1!1107 lt!25778)))))

(assert (=> b!17821 call!269))

(declare-fun lt!25777 () Unit!1586)

(assert (=> b!17821 (= lt!25777 lt!25785)))

(declare-fun lt!25764 () (_ BitVec 64))

(assert (=> b!17821 (= lt!25764 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25783 () Unit!1586)

(declare-fun arrayBitRangesEqTransitive!0 (array!1180 array!1180 array!1180 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1586)

(assert (=> b!17821 (= lt!25783 (arrayBitRangesEqTransitive!0 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!25787 (_3!68 lt!25779) lt!25764 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!17821 (arrayBitRangesEq!0 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!68 lt!25779) lt!25764 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25767 () Unit!1586)

(assert (=> b!17821 (= lt!25767 lt!25783)))

(assert (=> b!17821 call!268))

(declare-fun lt!25792 () Unit!1586)

(declare-fun Unit!1595 () Unit!1586)

(assert (=> b!17821 (= lt!25792 Unit!1595)))

(declare-fun lt!25789 () Unit!1586)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!1180 array!1180 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1586)

(assert (=> b!17821 (= lt!25789 (arrayBitRangesEqImpliesEq!0 lt!25787 (_3!68 lt!25779) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!17821 (= (bitAt!0 lt!25787 #b0000000000000000000000000000000000000000000000000000000000000000) (bitAt!0 (_3!68 lt!25779) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!25768 () Unit!1586)

(assert (=> b!17821 (= lt!25768 lt!25789)))

(declare-fun lt!25794 () Unit!1586)

(declare-fun Unit!1596 () Unit!1586)

(assert (=> b!17821 (= lt!25794 Unit!1596)))

(declare-fun lt!25774 () Bool)

(assert (=> b!17821 (= lt!25774 (= (bitAt!0 (_3!68 lt!25779) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!1107 lt!25778)))))

(declare-fun Unit!1597 () Unit!1586)

(assert (=> b!17821 (= lt!25773 Unit!1597)))

(assert (=> b!17821 lt!25774))

(declare-fun bm!266 () Bool)

(assert (=> bm!266 (= call!268 (arrayBitRangesEq!0 (ite c!1330 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!25790) (ite c!1330 (_3!68 lt!25779) lt!25760) (ite c!1330 #b0000000000000000000000000000000000000000000000000000000000000000 lt!25766) (ite c!1330 #b0000000000000000000000000000000000000000000000000000000000000000 lt!25788)))))

(declare-fun d!5870 () Bool)

(assert (=> d!5870 e!11404))

(declare-fun res!15706 () Bool)

(assert (=> d!5870 (=> (not res!15706) (not e!11404))))

(declare-fun lt!25771 () (_ BitVec 64))

(assert (=> d!5870 (= res!15706 (= (bvsub lt!25771 #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!500 (buf!818 (_2!1101 lt!25795))) (currentByte!2033 (_2!1101 lt!25795)) (currentBit!2028 (_2!1101 lt!25795)))))))

(assert (=> d!5870 (or (= (bvand lt!25771 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!25771 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!25771 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!25793 () (_ BitVec 64))

(assert (=> d!5870 (= lt!25771 (bvadd lt!25793 nBits!604))))

(assert (=> d!5870 (or (not (= (bvand lt!25793 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!25793 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!25793 nBits!604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5870 (= lt!25793 (bitIndex!0 (size!500 (buf!818 thiss!1917)) (currentByte!2033 thiss!1917) (currentBit!2028 thiss!1917)))))

(assert (=> d!5870 (= lt!25795 e!11402)))

(assert (=> d!5870 (= c!1330 (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604))))

(assert (=> d!5870 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bvsle nBits!604 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!5870 (= (readBitsLoop!0 thiss!1917 nBits!604 (array!1181 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) lt!25795)))

(assert (= (and d!5870 c!1330) b!17821))

(assert (= (and d!5870 (not c!1330)) b!17814))

(assert (= (and b!17821 res!15701) b!17820))

(assert (= (or b!17821 b!17814) bm!266))

(assert (= (or b!17821 b!17814) bm!265))

(assert (= (and d!5870 res!15706) b!17817))

(assert (= (and b!17817 res!15700) b!17819))

(assert (= (and b!17819 res!15704) b!17818))

(assert (= (and b!17818 (not res!15702)) b!17813))

(assert (= (and b!17818 res!15705) b!17815))

(assert (= (and b!17815 res!15703) b!17816))

(declare-fun m!24143 () Bool)

(assert (=> b!17819 m!24143))

(declare-fun m!24145 () Bool)

(assert (=> b!17815 m!24145))

(declare-fun m!24147 () Bool)

(assert (=> b!17813 m!24147))

(declare-fun m!24149 () Bool)

(assert (=> b!17813 m!24149))

(declare-fun m!24151 () Bool)

(assert (=> b!17814 m!24151))

(declare-fun m!24153 () Bool)

(assert (=> b!17814 m!24153))

(declare-fun m!24155 () Bool)

(assert (=> bm!266 m!24155))

(declare-fun m!24157 () Bool)

(assert (=> b!17821 m!24157))

(declare-fun m!24159 () Bool)

(assert (=> b!17821 m!24159))

(declare-fun m!24161 () Bool)

(assert (=> b!17821 m!24161))

(declare-fun m!24163 () Bool)

(assert (=> b!17821 m!24163))

(declare-fun m!24165 () Bool)

(assert (=> b!17821 m!24165))

(declare-fun m!24167 () Bool)

(assert (=> b!17821 m!24167))

(declare-fun m!24169 () Bool)

(assert (=> b!17821 m!24169))

(declare-fun m!24171 () Bool)

(assert (=> b!17821 m!24171))

(assert (=> b!17821 m!24061))

(declare-fun m!24173 () Bool)

(assert (=> b!17821 m!24173))

(declare-fun m!24175 () Bool)

(assert (=> b!17821 m!24175))

(declare-fun m!24177 () Bool)

(assert (=> b!17821 m!24177))

(declare-fun m!24179 () Bool)

(assert (=> b!17821 m!24179))

(declare-fun m!24181 () Bool)

(assert (=> b!17821 m!24181))

(declare-fun m!24183 () Bool)

(assert (=> b!17821 m!24183))

(declare-fun m!24185 () Bool)

(assert (=> b!17816 m!24185))

(declare-fun m!24187 () Bool)

(assert (=> b!17816 m!24187))

(declare-fun m!24189 () Bool)

(assert (=> d!5870 m!24189))

(assert (=> d!5870 m!24061))

(declare-fun m!24191 () Bool)

(assert (=> bm!265 m!24191))

(declare-fun m!24193 () Bool)

(assert (=> bm!265 m!24193))

(declare-fun m!24195 () Bool)

(assert (=> bm!265 m!24195))

(declare-fun m!24197 () Bool)

(assert (=> bm!265 m!24197))

(assert (=> d!5840 d!5870))

(declare-fun d!5872 () Bool)

(assert (=> d!5872 (= (remainingBits!0 ((_ sign_extend 32) (size!500 (buf!818 thiss!1917))) ((_ sign_extend 32) (currentByte!2033 thiss!1917)) ((_ sign_extend 32) (currentBit!2028 thiss!1917))) (bvsub (bvmul ((_ sign_extend 32) (size!500 (buf!818 thiss!1917))) #b0000000000000000000000000000000000000000000000000000000000001000) (bvadd (bvmul ((_ sign_extend 32) (currentByte!2033 thiss!1917)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2028 thiss!1917)))))))

(assert (=> d!5834 d!5872))

(declare-fun d!5874 () Bool)

(declare-fun e!11407 () Bool)

(assert (=> d!5874 e!11407))

(declare-fun res!15712 () Bool)

(assert (=> d!5874 (=> (not res!15712) (not e!11407))))

(declare-fun lt!25813 () (_ BitVec 64))

(declare-fun lt!25811 () (_ BitVec 64))

(declare-fun lt!25808 () (_ BitVec 64))

(assert (=> d!5874 (= res!15712 (= lt!25813 (bvsub lt!25808 lt!25811)))))

(assert (=> d!5874 (or (= (bvand lt!25808 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!25811 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!25808 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!25808 lt!25811) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5874 (= lt!25811 (remainingBits!0 ((_ sign_extend 32) (size!500 (buf!818 (_2!1098 lt!25543)))) ((_ sign_extend 32) (currentByte!2033 (_2!1098 lt!25543))) ((_ sign_extend 32) (currentBit!2028 (_2!1098 lt!25543)))))))

(declare-fun lt!25809 () (_ BitVec 64))

(declare-fun lt!25810 () (_ BitVec 64))

(assert (=> d!5874 (= lt!25808 (bvmul lt!25809 lt!25810))))

(assert (=> d!5874 (or (= lt!25809 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!25810 (bvsdiv (bvmul lt!25809 lt!25810) lt!25809)))))

(assert (=> d!5874 (= lt!25810 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!5874 (= lt!25809 ((_ sign_extend 32) (size!500 (buf!818 (_2!1098 lt!25543)))))))

(assert (=> d!5874 (= lt!25813 (bvadd (bvmul ((_ sign_extend 32) (currentByte!2033 (_2!1098 lt!25543))) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2028 (_2!1098 lt!25543)))))))

(assert (=> d!5874 (invariant!0 (currentBit!2028 (_2!1098 lt!25543)) (currentByte!2033 (_2!1098 lt!25543)) (size!500 (buf!818 (_2!1098 lt!25543))))))

(assert (=> d!5874 (= (bitIndex!0 (size!500 (buf!818 (_2!1098 lt!25543))) (currentByte!2033 (_2!1098 lt!25543)) (currentBit!2028 (_2!1098 lt!25543))) lt!25813)))

(declare-fun b!17826 () Bool)

(declare-fun res!15711 () Bool)

(assert (=> b!17826 (=> (not res!15711) (not e!11407))))

(assert (=> b!17826 (= res!15711 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!25813))))

(declare-fun b!17827 () Bool)

(declare-fun lt!25812 () (_ BitVec 64))

(assert (=> b!17827 (= e!11407 (bvsle lt!25813 (bvmul lt!25812 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!17827 (or (= lt!25812 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!25812 #b0000000000000000000000000000000000000000000000000000000000001000) lt!25812)))))

(assert (=> b!17827 (= lt!25812 ((_ sign_extend 32) (size!500 (buf!818 (_2!1098 lt!25543)))))))

(assert (= (and d!5874 res!15712) b!17826))

(assert (= (and b!17826 res!15711) b!17827))

(declare-fun m!24199 () Bool)

(assert (=> d!5874 m!24199))

(assert (=> d!5874 m!24067))

(assert (=> b!17737 d!5874))

(declare-fun d!5876 () Bool)

(declare-fun e!11408 () Bool)

(assert (=> d!5876 e!11408))

(declare-fun res!15714 () Bool)

(assert (=> d!5876 (=> (not res!15714) (not e!11408))))

(declare-fun lt!25819 () (_ BitVec 64))

(declare-fun lt!25814 () (_ BitVec 64))

(declare-fun lt!25817 () (_ BitVec 64))

(assert (=> d!5876 (= res!15714 (= lt!25819 (bvsub lt!25814 lt!25817)))))

(assert (=> d!5876 (or (= (bvand lt!25814 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!25817 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!25814 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!25814 lt!25817) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5876 (= lt!25817 (remainingBits!0 ((_ sign_extend 32) (size!500 (buf!818 thiss!1917))) ((_ sign_extend 32) (currentByte!2033 thiss!1917)) ((_ sign_extend 32) (currentBit!2028 thiss!1917))))))

(declare-fun lt!25815 () (_ BitVec 64))

(declare-fun lt!25816 () (_ BitVec 64))

(assert (=> d!5876 (= lt!25814 (bvmul lt!25815 lt!25816))))

(assert (=> d!5876 (or (= lt!25815 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!25816 (bvsdiv (bvmul lt!25815 lt!25816) lt!25815)))))

(assert (=> d!5876 (= lt!25816 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!5876 (= lt!25815 ((_ sign_extend 32) (size!500 (buf!818 thiss!1917))))))

(assert (=> d!5876 (= lt!25819 (bvadd (bvmul ((_ sign_extend 32) (currentByte!2033 thiss!1917)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2028 thiss!1917))))))

(assert (=> d!5876 (invariant!0 (currentBit!2028 thiss!1917) (currentByte!2033 thiss!1917) (size!500 (buf!818 thiss!1917)))))

(assert (=> d!5876 (= (bitIndex!0 (size!500 (buf!818 thiss!1917)) (currentByte!2033 thiss!1917) (currentBit!2028 thiss!1917)) lt!25819)))

(declare-fun b!17828 () Bool)

(declare-fun res!15713 () Bool)

(assert (=> b!17828 (=> (not res!15713) (not e!11408))))

(assert (=> b!17828 (= res!15713 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!25819))))

(declare-fun b!17829 () Bool)

(declare-fun lt!25818 () (_ BitVec 64))

(assert (=> b!17829 (= e!11408 (bvsle lt!25819 (bvmul lt!25818 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!17829 (or (= lt!25818 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!25818 #b0000000000000000000000000000000000000000000000000000000000001000) lt!25818)))))

(assert (=> b!17829 (= lt!25818 ((_ sign_extend 32) (size!500 (buf!818 thiss!1917))))))

(assert (= (and d!5876 res!15714) b!17828))

(assert (= (and b!17828 res!15713) b!17829))

(assert (=> d!5876 m!24029))

(assert (=> d!5876 m!24027))

(assert (=> b!17737 d!5876))

(declare-fun d!5878 () Bool)

(assert (=> d!5878 (= (invariant!0 (currentBit!2028 thiss!1917) (currentByte!2033 thiss!1917) (size!500 (buf!818 thiss!1917))) (and (bvsge (currentBit!2028 thiss!1917) #b00000000000000000000000000000000) (bvslt (currentBit!2028 thiss!1917) #b00000000000000000000000000001000) (bvsge (currentByte!2033 thiss!1917) #b00000000000000000000000000000000) (or (bvslt (currentByte!2033 thiss!1917) (size!500 (buf!818 thiss!1917))) (and (= (currentBit!2028 thiss!1917) #b00000000000000000000000000000000) (= (currentByte!2033 thiss!1917) (size!500 (buf!818 thiss!1917)))))))))

(assert (=> d!5830 d!5878))

(declare-fun d!5880 () Bool)

(declare-fun c!1333 () Bool)

(assert (=> d!5880 (= c!1333 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!11411 () List!196)

(assert (=> d!5880 (= (byteArrayBitContentToList!0 (_2!1098 lt!25543) (_1!1098 lt!25543) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) e!11411)))

(declare-fun b!17834 () Bool)

(assert (=> b!17834 (= e!11411 Nil!193)))

(declare-fun b!17835 () Bool)

(assert (=> b!17835 (= e!11411 (Cons!192 (not (= (bvand ((_ sign_extend 24) (select (arr!929 (_1!1098 lt!25543)) ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 (_2!1098 lt!25543) (_1!1098 lt!25543) (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!5880 c!1333) b!17834))

(assert (= (and d!5880 (not c!1333)) b!17835))

(declare-fun m!24201 () Bool)

(assert (=> b!17835 m!24201))

(declare-fun m!24203 () Bool)

(assert (=> b!17835 m!24203))

(declare-fun m!24205 () Bool)

(assert (=> b!17835 m!24205))

(assert (=> b!17738 d!5880))

(declare-fun b!17844 () Bool)

(declare-datatypes ((tuple2!2076 0))(
  ( (tuple2!2077 (_1!1108 List!196) (_2!1108 BitStream!870)) )
))
(declare-fun e!11417 () tuple2!2076)

(assert (=> b!17844 (= e!11417 (tuple2!2077 Nil!193 thiss!1917))))

(declare-fun lt!25827 () (_ BitVec 64))

(declare-fun lt!25828 () tuple2!2074)

(declare-fun b!17845 () Bool)

(assert (=> b!17845 (= e!11417 (tuple2!2077 (Cons!192 (_1!1107 lt!25828) (bitStreamReadBitsIntoList!0 (_2!1098 lt!25543) (_2!1107 lt!25828) (bvsub nBits!604 lt!25827))) (_2!1107 lt!25828)))))

(assert (=> b!17845 (= lt!25828 (readBit!0 thiss!1917))))

(assert (=> b!17845 (= lt!25827 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun b!17847 () Bool)

(declare-fun e!11416 () Bool)

(declare-fun lt!25826 () List!196)

(declare-fun length!39 (List!196) Int)

(assert (=> b!17847 (= e!11416 (> (length!39 lt!25826) 0))))

(declare-fun b!17846 () Bool)

(declare-fun isEmpty!44 (List!196) Bool)

(assert (=> b!17846 (= e!11416 (isEmpty!44 lt!25826))))

(declare-fun d!5882 () Bool)

(assert (=> d!5882 e!11416))

(declare-fun c!1339 () Bool)

(assert (=> d!5882 (= c!1339 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!5882 (= lt!25826 (_1!1108 e!11417))))

(declare-fun c!1338 () Bool)

(assert (=> d!5882 (= c!1338 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!5882 (bvsge nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> d!5882 (= (bitStreamReadBitsIntoList!0 (_2!1098 lt!25543) thiss!1917 nBits!604) lt!25826)))

(assert (= (and d!5882 c!1338) b!17844))

(assert (= (and d!5882 (not c!1338)) b!17845))

(assert (= (and d!5882 c!1339) b!17846))

(assert (= (and d!5882 (not c!1339)) b!17847))

(declare-fun m!24207 () Bool)

(assert (=> b!17845 m!24207))

(assert (=> b!17845 m!24161))

(declare-fun m!24209 () Bool)

(assert (=> b!17847 m!24209))

(declare-fun m!24211 () Bool)

(assert (=> b!17846 m!24211))

(assert (=> b!17738 d!5882))

(check-sat (not b!17813) (not bm!265) (not b!17819) (not b!17846) (not b!17815) (not b!17847) (not b!17845) (not bm!266) (not b!17814) (not b!17821) (not b!17816) (not b!17835) (not d!5874) (not d!5876) (not d!5870))
(check-sat)
