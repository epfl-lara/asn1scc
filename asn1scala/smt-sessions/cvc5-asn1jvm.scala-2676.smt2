; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!65560 () Bool)

(assert start!65560)

(declare-fun res!242705 () Bool)

(declare-fun e!209987 () Bool)

(assert (=> start!65560 (=> (not res!242705) (not e!209987))))

(declare-fun nBits!523 () (_ BitVec 64))

(declare-fun to!474 () (_ BitVec 64))

(declare-fun from!505 () (_ BitVec 64))

(declare-datatypes ((array!17582 0))(
  ( (array!17583 (arr!8650 (Array (_ BitVec 32) (_ BitVec 8))) (size!7618 (_ BitVec 32))) )
))
(declare-fun arr!273 () array!17582)

(assert (=> start!65560 (= res!242705 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!523) (bvsle nBits!523 #b0000000000000000000000000000001111111111111111111111111111111000) (bvsge ((_ sign_extend 32) (size!7618 arr!273)) (bvsdiv (bvadd nBits!523 #b0000000000000000000000000000000000000000000000000000000000000111) #b0000000000000000000000000000000000000000000000000000000000001000)) (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 from!505) (bvsle from!505 to!474) (bvsle to!474 nBits!523)))))

(assert (=> start!65560 e!209987))

(declare-datatypes ((BitStream!13240 0))(
  ( (BitStream!13241 (buf!7681 array!17582) (currentByte!14166 (_ BitVec 32)) (currentBit!14161 (_ BitVec 32))) )
))
(declare-fun thiss!1728 () BitStream!13240)

(declare-fun e!209985 () Bool)

(declare-fun inv!12 (BitStream!13240) Bool)

(assert (=> start!65560 (and (inv!12 thiss!1728) e!209985)))

(assert (=> start!65560 true))

(declare-fun array_inv!7230 (array!17582) Bool)

(assert (=> start!65560 (array_inv!7230 arr!273)))

(declare-fun b!293921 () Bool)

(declare-fun e!209988 () Bool)

(assert (=> b!293921 (= e!209987 (not e!209988))))

(declare-fun res!242706 () Bool)

(assert (=> b!293921 (=> (not res!242706) (not e!209988))))

(declare-datatypes ((Unit!20449 0))(
  ( (Unit!20450) )
))
(declare-datatypes ((tuple3!1752 0))(
  ( (tuple3!1753 (_1!12860 Unit!20449) (_2!12860 BitStream!13240) (_3!1311 array!17582)) )
))
(declare-fun lt!426575 () tuple3!1752)

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!293921 (= res!242706 (= (bvsub (bvadd (bitIndex!0 (size!7618 (buf!7681 thiss!1728)) (currentByte!14166 thiss!1728) (currentBit!14161 thiss!1728)) to!474) from!505) (bitIndex!0 (size!7618 (buf!7681 (_2!12860 lt!426575))) (currentByte!14166 (_2!12860 lt!426575)) (currentBit!14161 (_2!12860 lt!426575)))))))

(declare-fun lt!426572 () (_ BitVec 32))

(declare-fun lt!426574 () (_ BitVec 32))

(declare-datatypes ((tuple2!23098 0))(
  ( (tuple2!23099 (_1!12861 Bool) (_2!12861 BitStream!13240)) )
))
(declare-fun lt!426573 () tuple2!23098)

(declare-fun readBitsLoop!0 (BitStream!13240 (_ BitVec 64) array!17582 (_ BitVec 64) (_ BitVec 64)) tuple3!1752)

(assert (=> b!293921 (= lt!426575 (readBitsLoop!0 (_2!12861 lt!426573) nBits!523 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) to!474))))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!293921 (validate_offset_bits!1 ((_ sign_extend 32) (size!7618 (buf!7681 (_2!12861 lt!426573)))) ((_ sign_extend 32) (currentByte!14166 (_2!12861 lt!426573))) ((_ sign_extend 32) (currentBit!14161 (_2!12861 lt!426573))) (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001))))

(declare-fun lt!426576 () Unit!20449)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!13240 BitStream!13240 (_ BitVec 64) (_ BitVec 64)) Unit!20449)

(assert (=> b!293921 (= lt!426576 (validateOffsetBitsIneqLemma!0 thiss!1728 (_2!12861 lt!426573) (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001))))

(assert (=> b!293921 (= lt!426574 ((_ extract 31 0) (bvsrem from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!293921 (= lt!426572 ((_ extract 31 0) (bvsdiv from!505 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun readBit!0 (BitStream!13240) tuple2!23098)

(assert (=> b!293921 (= lt!426573 (readBit!0 thiss!1728))))

(declare-fun b!293922 () Bool)

(assert (=> b!293922 (= e!209985 (array_inv!7230 (buf!7681 thiss!1728)))))

(declare-fun b!293923 () Bool)

(declare-fun res!242708 () Bool)

(assert (=> b!293923 (=> (not res!242708) (not e!209987))))

(assert (=> b!293923 (= res!242708 (validate_offset_bits!1 ((_ sign_extend 32) (size!7618 (buf!7681 thiss!1728))) ((_ sign_extend 32) (currentByte!14166 thiss!1728)) ((_ sign_extend 32) (currentBit!14161 thiss!1728)) (bvsub nBits!523 from!505)))))

(declare-fun b!293924 () Bool)

(assert (=> b!293924 (= e!209988 (and (= (buf!7681 thiss!1728) (buf!7681 (_2!12860 lt!426575))) (= (size!7618 arr!273) (size!7618 (_3!1311 lt!426575)))))))

(declare-fun b!293925 () Bool)

(declare-fun res!242707 () Bool)

(assert (=> b!293925 (=> (not res!242707) (not e!209987))))

(assert (=> b!293925 (= res!242707 (bvslt from!505 to!474))))

(assert (= (and start!65560 res!242705) b!293923))

(assert (= (and b!293923 res!242708) b!293925))

(assert (= (and b!293925 res!242707) b!293921))

(assert (= (and b!293921 res!242706) b!293924))

(assert (= start!65560 b!293922))

(declare-fun m!429769 () Bool)

(assert (=> start!65560 m!429769))

(declare-fun m!429771 () Bool)

(assert (=> start!65560 m!429771))

(declare-fun m!429773 () Bool)

(assert (=> b!293921 m!429773))

(declare-fun m!429775 () Bool)

(assert (=> b!293921 m!429775))

(declare-fun m!429777 () Bool)

(assert (=> b!293921 m!429777))

(declare-fun m!429779 () Bool)

(assert (=> b!293921 m!429779))

(declare-fun m!429781 () Bool)

(assert (=> b!293921 m!429781))

(declare-fun m!429783 () Bool)

(assert (=> b!293921 m!429783))

(declare-fun m!429785 () Bool)

(assert (=> b!293921 m!429785))

(declare-fun m!429787 () Bool)

(assert (=> b!293921 m!429787))

(declare-fun m!429789 () Bool)

(assert (=> b!293921 m!429789))

(declare-fun m!429791 () Bool)

(assert (=> b!293922 m!429791))

(declare-fun m!429793 () Bool)

(assert (=> b!293923 m!429793))

(push 1)

(assert (not b!293923))

(assert (not b!293922))

(assert (not start!65560))

(assert (not b!293921))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!99254 () Bool)

(declare-fun remainingBits!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))

(assert (=> d!99254 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!7618 (buf!7681 thiss!1728))) ((_ sign_extend 32) (currentByte!14166 thiss!1728)) ((_ sign_extend 32) (currentBit!14161 thiss!1728)) (bvsub nBits!523 from!505)) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!7618 (buf!7681 thiss!1728))) ((_ sign_extend 32) (currentByte!14166 thiss!1728)) ((_ sign_extend 32) (currentBit!14161 thiss!1728))) (bvsub nBits!523 from!505)))))

(declare-fun bs!25376 () Bool)

(assert (= bs!25376 d!99254))

(declare-fun m!429851 () Bool)

(assert (=> bs!25376 m!429851))

(assert (=> b!293923 d!99254))

(declare-fun d!99260 () Bool)

(assert (=> d!99260 (= (array_inv!7230 (buf!7681 thiss!1728)) (bvsge (size!7618 (buf!7681 thiss!1728)) #b00000000000000000000000000000000))))

(assert (=> b!293922 d!99260))

(declare-fun d!99262 () Bool)

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> d!99262 (= (inv!12 thiss!1728) (invariant!0 (currentBit!14161 thiss!1728) (currentByte!14166 thiss!1728) (size!7618 (buf!7681 thiss!1728))))))

(declare-fun bs!25377 () Bool)

(assert (= bs!25377 d!99262))

(declare-fun m!429853 () Bool)

(assert (=> bs!25377 m!429853))

(assert (=> start!65560 d!99262))

(declare-fun d!99264 () Bool)

(assert (=> d!99264 (= (array_inv!7230 arr!273) (bvsge (size!7618 arr!273) #b00000000000000000000000000000000))))

(assert (=> start!65560 d!99264))

(declare-fun d!99266 () Bool)

(declare-fun e!210021 () Bool)

(assert (=> d!99266 e!210021))

(declare-fun res!242738 () Bool)

(assert (=> d!99266 (=> (not res!242738) (not e!210021))))

(declare-fun lt!426622 () (_ BitVec 64))

(declare-fun lt!426620 () (_ BitVec 64))

(declare-fun lt!426619 () (_ BitVec 64))

(assert (=> d!99266 (= res!242738 (= lt!426622 (bvsub lt!426620 lt!426619)))))

(assert (=> d!99266 (or (= (bvand lt!426620 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!426619 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!426620 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!426620 lt!426619) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!99266 (= lt!426619 (remainingBits!0 ((_ sign_extend 32) (size!7618 (buf!7681 (_2!12860 lt!426575)))) ((_ sign_extend 32) (currentByte!14166 (_2!12860 lt!426575))) ((_ sign_extend 32) (currentBit!14161 (_2!12860 lt!426575)))))))

(declare-fun lt!426624 () (_ BitVec 64))

(declare-fun lt!426623 () (_ BitVec 64))

(assert (=> d!99266 (= lt!426620 (bvmul lt!426624 lt!426623))))

(assert (=> d!99266 (or (= lt!426624 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!426623 (bvsdiv (bvmul lt!426624 lt!426623) lt!426624)))))

(assert (=> d!99266 (= lt!426623 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!99266 (= lt!426624 ((_ sign_extend 32) (size!7618 (buf!7681 (_2!12860 lt!426575)))))))

(assert (=> d!99266 (= lt!426622 (bvadd (bvmul ((_ sign_extend 32) (currentByte!14166 (_2!12860 lt!426575))) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!14161 (_2!12860 lt!426575)))))))

(assert (=> d!99266 (invariant!0 (currentBit!14161 (_2!12860 lt!426575)) (currentByte!14166 (_2!12860 lt!426575)) (size!7618 (buf!7681 (_2!12860 lt!426575))))))

(assert (=> d!99266 (= (bitIndex!0 (size!7618 (buf!7681 (_2!12860 lt!426575))) (currentByte!14166 (_2!12860 lt!426575)) (currentBit!14161 (_2!12860 lt!426575))) lt!426622)))

(declare-fun b!293960 () Bool)

(declare-fun res!242737 () Bool)

(assert (=> b!293960 (=> (not res!242737) (not e!210021))))

(assert (=> b!293960 (= res!242737 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!426622))))

(declare-fun b!293961 () Bool)

(declare-fun lt!426621 () (_ BitVec 64))

(assert (=> b!293961 (= e!210021 (bvsle lt!426622 (bvmul lt!426621 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!293961 (or (= lt!426621 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!426621 #b0000000000000000000000000000000000000000000000000000000000001000) lt!426621)))))

(assert (=> b!293961 (= lt!426621 ((_ sign_extend 32) (size!7618 (buf!7681 (_2!12860 lt!426575)))))))

(assert (= (and d!99266 res!242738) b!293960))

(assert (= (and b!293960 res!242737) b!293961))

(declare-fun m!429855 () Bool)

(assert (=> d!99266 m!429855))

(declare-fun m!429857 () Bool)

(assert (=> d!99266 m!429857))

(assert (=> b!293921 d!99266))

(declare-fun d!99268 () Bool)

(declare-fun e!210022 () Bool)

(assert (=> d!99268 e!210022))

(declare-fun res!242740 () Bool)

(assert (=> d!99268 (=> (not res!242740) (not e!210022))))

(declare-fun lt!426625 () (_ BitVec 64))

(declare-fun lt!426628 () (_ BitVec 64))

(declare-fun lt!426626 () (_ BitVec 64))

(assert (=> d!99268 (= res!242740 (= lt!426628 (bvsub lt!426626 lt!426625)))))

(assert (=> d!99268 (or (= (bvand lt!426626 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!426625 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!426626 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!426626 lt!426625) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!99268 (= lt!426625 (remainingBits!0 ((_ sign_extend 32) (size!7618 (buf!7681 thiss!1728))) ((_ sign_extend 32) (currentByte!14166 thiss!1728)) ((_ sign_extend 32) (currentBit!14161 thiss!1728))))))

(declare-fun lt!426630 () (_ BitVec 64))

(declare-fun lt!426629 () (_ BitVec 64))

(assert (=> d!99268 (= lt!426626 (bvmul lt!426630 lt!426629))))

(assert (=> d!99268 (or (= lt!426630 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!426629 (bvsdiv (bvmul lt!426630 lt!426629) lt!426630)))))

(assert (=> d!99268 (= lt!426629 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!99268 (= lt!426630 ((_ sign_extend 32) (size!7618 (buf!7681 thiss!1728))))))

(assert (=> d!99268 (= lt!426628 (bvadd (bvmul ((_ sign_extend 32) (currentByte!14166 thiss!1728)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!14161 thiss!1728))))))

(assert (=> d!99268 (invariant!0 (currentBit!14161 thiss!1728) (currentByte!14166 thiss!1728) (size!7618 (buf!7681 thiss!1728)))))

(assert (=> d!99268 (= (bitIndex!0 (size!7618 (buf!7681 thiss!1728)) (currentByte!14166 thiss!1728) (currentBit!14161 thiss!1728)) lt!426628)))

(declare-fun b!293962 () Bool)

(declare-fun res!242739 () Bool)

(assert (=> b!293962 (=> (not res!242739) (not e!210022))))

(assert (=> b!293962 (= res!242739 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!426628))))

(declare-fun b!293963 () Bool)

(declare-fun lt!426627 () (_ BitVec 64))

(assert (=> b!293963 (= e!210022 (bvsle lt!426628 (bvmul lt!426627 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!293963 (or (= lt!426627 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!426627 #b0000000000000000000000000000000000000000000000000000000000001000) lt!426627)))))

(assert (=> b!293963 (= lt!426627 ((_ sign_extend 32) (size!7618 (buf!7681 thiss!1728))))))

(assert (= (and d!99268 res!242740) b!293962))

(assert (= (and b!293962 res!242739) b!293963))

(assert (=> d!99268 m!429851))

(assert (=> d!99268 m!429853))

(assert (=> b!293921 d!99268))

(declare-fun d!99270 () Bool)

(assert (=> d!99270 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!7618 (buf!7681 (_2!12861 lt!426573)))) ((_ sign_extend 32) (currentByte!14166 (_2!12861 lt!426573))) ((_ sign_extend 32) (currentBit!14161 (_2!12861 lt!426573))) (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001)) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!7618 (buf!7681 (_2!12861 lt!426573)))) ((_ sign_extend 32) (currentByte!14166 (_2!12861 lt!426573))) ((_ sign_extend 32) (currentBit!14161 (_2!12861 lt!426573)))) (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001)))))

(declare-fun bs!25378 () Bool)

(assert (= bs!25378 d!99270))

(declare-fun m!429859 () Bool)

(assert (=> bs!25378 m!429859))

(assert (=> b!293921 d!99270))

(declare-fun d!99272 () Bool)

(declare-fun e!210032 () Bool)

(assert (=> d!99272 e!210032))

(declare-fun res!242746 () Bool)

(assert (=> d!99272 (=> (not res!242746) (not e!210032))))

(declare-datatypes ((tuple2!23104 0))(
  ( (tuple2!23105 (_1!12866 Unit!20449) (_2!12866 BitStream!13240)) )
))
(declare-fun increaseBitIndex!0 (BitStream!13240) tuple2!23104)

(assert (=> d!99272 (= res!242746 (= (buf!7681 (_2!12866 (increaseBitIndex!0 thiss!1728))) (buf!7681 thiss!1728)))))

(declare-fun lt!426649 () Bool)

(assert (=> d!99272 (= lt!426649 (not (= (bvand ((_ sign_extend 24) (select (arr!8650 (buf!7681 thiss!1728)) (currentByte!14166 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!14161 thiss!1728)))) #b00000000000000000000000000000000)))))

(declare-fun lt!426654 () tuple2!23098)

(assert (=> d!99272 (= lt!426654 (tuple2!23099 (not (= (bvand ((_ sign_extend 24) (select (arr!8650 (buf!7681 thiss!1728)) (currentByte!14166 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!14161 thiss!1728)))) #b00000000000000000000000000000000)) (_2!12866 (increaseBitIndex!0 thiss!1728))))))

(declare-fun validate_offset_bit!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> d!99272 (validate_offset_bit!0 ((_ sign_extend 32) (size!7618 (buf!7681 thiss!1728))) ((_ sign_extend 32) (currentByte!14166 thiss!1728)) ((_ sign_extend 32) (currentBit!14161 thiss!1728)))))

(assert (=> d!99272 (= (readBit!0 thiss!1728) lt!426654)))

(declare-fun lt!426648 () (_ BitVec 64))

(declare-fun b!293969 () Bool)

(declare-fun lt!426650 () (_ BitVec 64))

(assert (=> b!293969 (= e!210032 (= (bitIndex!0 (size!7618 (buf!7681 (_2!12866 (increaseBitIndex!0 thiss!1728)))) (currentByte!14166 (_2!12866 (increaseBitIndex!0 thiss!1728))) (currentBit!14161 (_2!12866 (increaseBitIndex!0 thiss!1728)))) (bvadd lt!426650 lt!426648)))))

(assert (=> b!293969 (or (not (= (bvand lt!426650 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!426648 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!426650 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!426650 lt!426648) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!293969 (= lt!426648 #b0000000000000000000000000000000000000000000000000000000000000001)))

(assert (=> b!293969 (= lt!426650 (bitIndex!0 (size!7618 (buf!7681 thiss!1728)) (currentByte!14166 thiss!1728) (currentBit!14161 thiss!1728)))))

(declare-fun lt!426653 () Bool)

(assert (=> b!293969 (= lt!426653 (not (= (bvand ((_ sign_extend 24) (select (arr!8650 (buf!7681 thiss!1728)) (currentByte!14166 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!14161 thiss!1728)))) #b00000000000000000000000000000000)))))

(declare-fun lt!426652 () Bool)

(assert (=> b!293969 (= lt!426652 (not (= (bvand ((_ sign_extend 24) (select (arr!8650 (buf!7681 thiss!1728)) (currentByte!14166 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!14161 thiss!1728)))) #b00000000000000000000000000000000)))))

(declare-fun lt!426651 () Bool)

(assert (=> b!293969 (= lt!426651 (not (= (bvand ((_ sign_extend 24) (select (arr!8650 (buf!7681 thiss!1728)) (currentByte!14166 thiss!1728))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) (currentBit!14161 thiss!1728)))) #b00000000000000000000000000000000)))))

(assert (= (and d!99272 res!242746) b!293969))

(declare-fun m!429863 () Bool)

(assert (=> d!99272 m!429863))

(declare-fun m!429865 () Bool)

(assert (=> d!99272 m!429865))

(declare-fun m!429867 () Bool)

(assert (=> d!99272 m!429867))

(declare-fun m!429869 () Bool)

(assert (=> d!99272 m!429869))

(assert (=> b!293969 m!429779))

(assert (=> b!293969 m!429863))

(assert (=> b!293969 m!429867))

(assert (=> b!293969 m!429865))

(declare-fun m!429871 () Bool)

(assert (=> b!293969 m!429871))

(assert (=> b!293921 d!99272))

(declare-fun d!99278 () Bool)

(declare-fun e!210035 () Bool)

(assert (=> d!99278 e!210035))

(declare-fun res!242749 () Bool)

(assert (=> d!99278 (=> (not res!242749) (not e!210035))))

(assert (=> d!99278 (= res!242749 (or (= (bvand (bvsub nBits!523 from!505) #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000001 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand (bvsub nBits!523 from!505) #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!426657 () Unit!20449)

(declare-fun choose!27 (BitStream!13240 BitStream!13240 (_ BitVec 64) (_ BitVec 64)) Unit!20449)

(assert (=> d!99278 (= lt!426657 (choose!27 thiss!1728 (_2!12861 lt!426573) (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001))))

(assert (=> d!99278 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsle #b0000000000000000000000000000000000000000000000000000000000000001 (bvsub nBits!523 from!505)))))

(assert (=> d!99278 (= (validateOffsetBitsIneqLemma!0 thiss!1728 (_2!12861 lt!426573) (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001) lt!426657)))

(declare-fun b!293972 () Bool)

(assert (=> b!293972 (= e!210035 (validate_offset_bits!1 ((_ sign_extend 32) (size!7618 (buf!7681 (_2!12861 lt!426573)))) ((_ sign_extend 32) (currentByte!14166 (_2!12861 lt!426573))) ((_ sign_extend 32) (currentBit!14161 (_2!12861 lt!426573))) (bvsub (bvsub nBits!523 from!505) #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (= (and d!99278 res!242749) b!293972))

(declare-fun m!429873 () Bool)

(assert (=> d!99278 m!429873))

(assert (=> b!293972 m!429775))

(assert (=> b!293921 d!99278))

(declare-fun b!294067 () Bool)

(declare-fun e!210088 () Bool)

(declare-fun lt!427041 () tuple3!1752)

(declare-fun bitAt!0 (array!17582 (_ BitVec 64)) Bool)

(declare-datatypes ((tuple2!23108 0))(
  ( (tuple2!23109 (_1!12868 BitStream!13240) (_2!12868 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!13240) tuple2!23108)

(assert (=> b!294067 (= e!210088 (= (bitAt!0 (_3!1311 lt!427041) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (_2!12868 (readBitPure!0 (_2!12861 lt!426573)))))))

(declare-fun lt!427051 () tuple3!1752)

(declare-fun b!294068 () Bool)

(declare-fun e!210087 () Bool)

(assert (=> b!294068 (= e!210087 (and (= (buf!7681 (_2!12861 lt!426573)) (buf!7681 (_2!12860 lt!427051))) (= (size!7618 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273))) (size!7618 (_3!1311 lt!427051)))))))

(declare-fun lt!427048 () (_ BitVec 32))

(declare-fun bm!4996 () Bool)

(declare-fun lt!427027 () tuple2!23098)

(declare-fun c!13407 () Bool)

(declare-fun lt!427018 () (_ BitVec 32))

(declare-fun call!4999 () Bool)

(declare-fun arrayBitRangesEq!0 (array!17582 array!17582 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> bm!4996 (= call!4999 (arrayBitRangesEq!0 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)) (ite c!13407 (array!17583 (store (arr!8650 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273))) lt!427018 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273))) lt!427018)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!427048)))) ((_ sign_extend 24) (ite (_1!12861 lt!427027) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!427048) #b00000000))))) (size!7618 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)))) (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273))) #b0000000000000000000000000000000000000000000000000000000000000000 (ite c!13407 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (bvmul ((_ sign_extend 32) (size!7618 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)))) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun b!294069 () Bool)

(declare-fun e!210086 () tuple3!1752)

(declare-fun lt!427019 () Unit!20449)

(assert (=> b!294069 (= e!210086 (tuple3!1753 lt!427019 (_2!12860 lt!427051) (_3!1311 lt!427051)))))

(assert (=> b!294069 (= lt!427027 (readBit!0 (_2!12861 lt!426573)))))

(declare-fun lt!427030 () (_ BitVec 32))

(assert (=> b!294069 (= lt!427030 ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!427053 () (_ BitVec 32))

(assert (=> b!294069 (= lt!427053 ((_ extract 31 0) (bvsrem (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!427024 () array!17582)

(assert (=> b!294069 (= lt!427024 (array!17583 (store (arr!8650 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273))) lt!427030 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273))) lt!427030)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!427053)))) ((_ sign_extend 24) (ite (_1!12861 lt!427027) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!427053) #b00000000))))) (size!7618 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)))))))

(declare-fun lt!427032 () (_ BitVec 64))

(assert (=> b!294069 (= lt!427032 (bvsub nBits!523 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(declare-fun lt!427035 () (_ BitVec 64))

(assert (=> b!294069 (= lt!427035 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!427026 () Unit!20449)

(assert (=> b!294069 (= lt!427026 (validateOffsetBitsIneqLemma!0 (_2!12861 lt!426573) (_2!12861 lt!427027) lt!427032 lt!427035))))

(assert (=> b!294069 (validate_offset_bits!1 ((_ sign_extend 32) (size!7618 (buf!7681 (_2!12861 lt!427027)))) ((_ sign_extend 32) (currentByte!14166 (_2!12861 lt!427027))) ((_ sign_extend 32) (currentBit!14161 (_2!12861 lt!427027))) (bvsub lt!427032 lt!427035))))

(declare-fun lt!427050 () Unit!20449)

(assert (=> b!294069 (= lt!427050 lt!427026)))

(assert (=> b!294069 (= lt!427051 (readBitsLoop!0 (_2!12861 lt!427027) nBits!523 lt!427024 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505 #b0000000000000000000000000000000000000000000000000000000000000001) to!474))))

(declare-fun res!242831 () Bool)

(assert (=> b!294069 (= res!242831 (= (bvsub (bvadd (bitIndex!0 (size!7618 (buf!7681 (_2!12861 lt!426573))) (currentByte!14166 (_2!12861 lt!426573)) (currentBit!14161 (_2!12861 lt!426573))) to!474) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (bitIndex!0 (size!7618 (buf!7681 (_2!12860 lt!427051))) (currentByte!14166 (_2!12860 lt!427051)) (currentBit!14161 (_2!12860 lt!427051)))))))

(assert (=> b!294069 (=> (not res!242831) (not e!210087))))

(assert (=> b!294069 e!210087))

(declare-fun lt!427052 () Unit!20449)

(declare-fun Unit!20459 () Unit!20449)

(assert (=> b!294069 (= lt!427052 Unit!20459)))

(assert (=> b!294069 (= lt!427018 ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!294069 (= lt!427048 ((_ extract 31 0) (bvsrem (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!427045 () Unit!20449)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!17582 (_ BitVec 64) Bool) Unit!20449)

(assert (=> b!294069 (= lt!427045 (arrayBitRangesUpdatedAtLemma!0 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (_1!12861 lt!427027)))))

(assert (=> b!294069 call!4999))

(declare-fun lt!427039 () Unit!20449)

(assert (=> b!294069 (= lt!427039 lt!427045)))

(declare-fun lt!427036 () (_ BitVec 64))

(assert (=> b!294069 (= lt!427036 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!427042 () Unit!20449)

(declare-fun arrayBitRangesEqTransitive!0 (array!17582 array!17582 array!17582 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!20449)

(assert (=> b!294069 (= lt!427042 (arrayBitRangesEqTransitive!0 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)) lt!427024 (_3!1311 lt!427051) lt!427036 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!294069 (arrayBitRangesEq!0 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)) (_3!1311 lt!427051) lt!427036 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505))))

(declare-fun lt!427020 () Unit!20449)

(assert (=> b!294069 (= lt!427020 lt!427042)))

(declare-fun call!5000 () Bool)

(assert (=> b!294069 call!5000))

(declare-fun lt!427038 () Unit!20449)

(declare-fun Unit!20460 () Unit!20449)

(assert (=> b!294069 (= lt!427038 Unit!20460)))

(declare-fun lt!427046 () Unit!20449)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!17582 array!17582 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!20449)

(assert (=> b!294069 (= lt!427046 (arrayBitRangesEqImpliesEq!0 lt!427024 (_3!1311 lt!427051) #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!294069 (= (bitAt!0 lt!427024 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (bitAt!0 (_3!1311 lt!427051) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(declare-fun lt!427023 () Unit!20449)

(assert (=> b!294069 (= lt!427023 lt!427046)))

(declare-fun lt!427033 () Unit!20449)

(declare-fun Unit!20461 () Unit!20449)

(assert (=> b!294069 (= lt!427033 Unit!20461)))

(declare-fun lt!427037 () Bool)

(assert (=> b!294069 (= lt!427037 (= (bitAt!0 (_3!1311 lt!427051) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (_1!12861 lt!427027)))))

(declare-fun Unit!20462 () Unit!20449)

(assert (=> b!294069 (= lt!427019 Unit!20462)))

(assert (=> b!294069 lt!427037))

(declare-fun bm!4997 () Bool)

(declare-fun lt!427021 () array!17582)

(declare-fun lt!427040 () (_ BitVec 64))

(declare-fun lt!427022 () array!17582)

(declare-fun lt!427049 () (_ BitVec 64))

(assert (=> bm!4997 (= call!5000 (arrayBitRangesEq!0 (ite c!13407 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)) lt!427022) (ite c!13407 (_3!1311 lt!427051) lt!427021) (ite c!13407 #b0000000000000000000000000000000000000000000000000000000000000000 lt!427049) (ite c!13407 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) lt!427040)))))

(declare-fun b!294070 () Bool)

(declare-fun e!210089 () Bool)

(declare-datatypes ((List!974 0))(
  ( (Nil!971) (Cons!970 (h!1089 Bool) (t!1859 List!974)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!13240 array!17582 (_ BitVec 64) (_ BitVec 64)) List!974)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!13240 BitStream!13240 (_ BitVec 64)) List!974)

(assert (=> b!294070 (= e!210089 (= (byteArrayBitContentToList!0 (_2!12860 lt!427041) (_3!1311 lt!427041) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) (bvsub to!474 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505))) (bitStreamReadBitsIntoList!0 (_2!12860 lt!427041) (_2!12861 lt!426573) (bvsub to!474 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))))

(assert (=> b!294070 (or (= (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub to!474 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!294070 (or (= (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub to!474 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!294071 () Bool)

(declare-fun res!242830 () Bool)

(assert (=> b!294071 (=> (not res!242830) (not e!210089))))

(assert (=> b!294071 (= res!242830 (and (= (buf!7681 (_2!12861 lt!426573)) (buf!7681 (_2!12860 lt!427041))) (= (size!7618 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273))) (size!7618 (_3!1311 lt!427041)))))))

(declare-fun b!294072 () Bool)

(declare-fun res!242834 () Bool)

(assert (=> b!294072 (=> (not res!242834) (not e!210089))))

(assert (=> b!294072 (= res!242834 (invariant!0 (currentBit!14161 (_2!12860 lt!427041)) (currentByte!14166 (_2!12860 lt!427041)) (size!7618 (buf!7681 (_2!12860 lt!427041)))))))

(declare-fun b!294073 () Bool)

(declare-fun res!242828 () Bool)

(assert (=> b!294073 (=> (not res!242828) (not e!210089))))

(assert (=> b!294073 (= res!242828 (arrayBitRangesEq!0 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)) (_3!1311 lt!427041) #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)))))

(declare-fun b!294074 () Bool)

(declare-fun lt!427031 () Unit!20449)

(assert (=> b!294074 (= e!210086 (tuple3!1753 lt!427031 (_2!12861 lt!426573) (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273))))))

(declare-fun lt!427044 () Unit!20449)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!17582) Unit!20449)

(assert (=> b!294074 (= lt!427044 (arrayBitRangesEqReflexiveLemma!0 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273))))))

(assert (=> b!294074 call!4999))

(declare-fun lt!427028 () Unit!20449)

(assert (=> b!294074 (= lt!427028 lt!427044)))

(assert (=> b!294074 (= lt!427022 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)))))

(assert (=> b!294074 (= lt!427021 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)))))

(declare-fun lt!427043 () (_ BitVec 64))

(assert (=> b!294074 (= lt!427043 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!427029 () (_ BitVec 64))

(assert (=> b!294074 (= lt!427029 ((_ sign_extend 32) (size!7618 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)))))))

(declare-fun lt!427034 () (_ BitVec 64))

(assert (=> b!294074 (= lt!427034 (bvmul lt!427029 #b0000000000000000000000000000000000000000000000000000000000001000))))

(assert (=> b!294074 (= lt!427049 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!294074 (= lt!427040 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505))))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!17582 array!17582 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!20449)

(assert (=> b!294074 (= lt!427031 (arrayBitRangesEqSlicedLemma!0 lt!427022 lt!427021 lt!427043 lt!427034 lt!427049 lt!427040))))

(assert (=> b!294074 call!5000))

(declare-fun d!99280 () Bool)

(assert (=> d!99280 e!210089))

(declare-fun res!242833 () Bool)

(assert (=> d!99280 (=> (not res!242833) (not e!210089))))

(declare-fun lt!427025 () (_ BitVec 64))

(assert (=> d!99280 (= res!242833 (= (bvsub lt!427025 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) (bitIndex!0 (size!7618 (buf!7681 (_2!12860 lt!427041))) (currentByte!14166 (_2!12860 lt!427041)) (currentBit!14161 (_2!12860 lt!427041)))))))

(assert (=> d!99280 (or (= (bvand lt!427025 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!427025 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!427025 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505)) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!427047 () (_ BitVec 64))

(assert (=> d!99280 (= lt!427025 (bvadd lt!427047 to!474))))

(assert (=> d!99280 (or (not (= (bvand lt!427047 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand to!474 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!427047 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!427047 to!474) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!99280 (= lt!427047 (bitIndex!0 (size!7618 (buf!7681 (_2!12861 lt!426573))) (currentByte!14166 (_2!12861 lt!426573)) (currentBit!14161 (_2!12861 lt!426573))))))

(assert (=> d!99280 (= lt!427041 e!210086)))

(assert (=> d!99280 (= c!13407 (bvslt (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) to!474))))

(assert (=> d!99280 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!523) (bvsle nBits!523 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!99280 (= (readBitsLoop!0 (_2!12861 lt!426573) nBits!523 (array!17583 (store (arr!8650 arr!273) lt!426572 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!8650 arr!273) lt!426572)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574)))) ((_ sign_extend 24) (ite (_1!12861 lt!426573) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!426574) #b00000000))))) (size!7618 arr!273)) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) to!474) lt!427041)))

(declare-fun b!294075 () Bool)

(declare-fun res!242829 () Bool)

(assert (=> b!294075 (=> (not res!242829) (not e!210089))))

(assert (=> b!294075 (= res!242829 e!210088)))

(declare-fun res!242832 () Bool)

(assert (=> b!294075 (=> res!242832 e!210088)))

(assert (=> b!294075 (= res!242832 (not (bvslt (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 from!505) to!474)))))

(assert (= (and d!99280 c!13407) b!294069))

(assert (= (and d!99280 (not c!13407)) b!294074))

(assert (= (and b!294069 res!242831) b!294068))

(assert (= (or b!294069 b!294074) bm!4997))

(assert (= (or b!294069 b!294074) bm!4996))

(assert (= (and d!99280 res!242833) b!294071))

(assert (= (and b!294071 res!242830) b!294073))

(assert (= (and b!294073 res!242828) b!294075))

(assert (= (and b!294075 (not res!242832)) b!294067))

(assert (= (and b!294075 res!242829) b!294072))

(assert (= (and b!294072 res!242834) b!294070))

(declare-fun m!430019 () Bool)

(assert (=> bm!4996 m!430019))

(declare-fun m!430021 () Bool)

(assert (=> bm!4996 m!430021))

(declare-fun m!430023 () Bool)

(assert (=> bm!4996 m!430023))

(declare-fun m!430025 () Bool)

(assert (=> bm!4996 m!430025))

(declare-fun m!430027 () Bool)

(assert (=> b!294073 m!430027))

(declare-fun m!430029 () Bool)

(assert (=> bm!4997 m!430029))

(declare-fun m!430031 () Bool)

(assert (=> b!294067 m!430031))

(declare-fun m!430033 () Bool)

(assert (=> b!294067 m!430033))

(declare-fun m!430035 () Bool)

(assert (=> b!294074 m!430035))

(declare-fun m!430037 () Bool)

(assert (=> b!294074 m!430037))

(declare-fun m!430039 () Bool)

(assert (=> b!294070 m!430039))

(declare-fun m!430041 () Bool)

(assert (=> b!294070 m!430041))

(declare-fun m!430043 () Bool)

(assert (=> b!294069 m!430043))

(declare-fun m!430045 () Bool)

(assert (=> b!294069 m!430045))

(declare-fun m!430047 () Bool)

(assert (=> b!294069 m!430047))

(declare-fun m!430049 () Bool)

(assert (=> b!294069 m!430049))

(declare-fun m!430051 () Bool)

(assert (=> b!294069 m!430051))

(declare-fun m!430053 () Bool)

(assert (=> b!294069 m!430053))

(declare-fun m!430055 () Bool)

(assert (=> b!294069 m!430055))

(declare-fun m!430057 () Bool)

(assert (=> b!294069 m!430057))

(declare-fun m!430059 () Bool)

(assert (=> b!294069 m!430059))

(declare-fun m!430061 () Bool)

(assert (=> b!294069 m!430061))

(declare-fun m!430063 () Bool)

(assert (=> b!294069 m!430063))

(declare-fun m!430065 () Bool)

(assert (=> b!294069 m!430065))

(declare-fun m!430067 () Bool)

(assert (=> b!294069 m!430067))

(declare-fun m!430069 () Bool)

(assert (=> b!294069 m!430069))

(declare-fun m!430071 () Bool)

(assert (=> b!294069 m!430071))

(declare-fun m!430073 () Bool)

(assert (=> d!99280 m!430073))

(assert (=> d!99280 m!430063))

(declare-fun m!430075 () Bool)

(assert (=> b!294072 m!430075))

(assert (=> b!293921 d!99280))

(push 1)

(assert (not b!294072))

(assert (not b!294070))

(assert (not d!99266))

(assert (not d!99262))

(assert (not bm!4996))

(assert (not d!99270))

(assert (not d!99268))

(assert (not b!294074))

(assert (not b!294073))

(assert (not b!294067))

(assert (not b!293972))

(assert (not d!99278))

(assert (not bm!4997))

(assert (not d!99280))

(assert (not d!99272))

(assert (not d!99254))

(assert (not b!293969))

(assert (not b!294069))

(check-sat)

(pop 1)

(push 1)

(check-sat)

