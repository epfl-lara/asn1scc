; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!51092 () Bool)

(assert start!51092)

(declare-fun res!199707 () Bool)

(declare-fun e!165046 () Bool)

(assert (=> start!51092 (=> (not res!199707) (not e!165046))))

(declare-fun v!315 () (_ BitVec 64))

(assert (=> start!51092 (= res!199707 (bvslt v!315 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> start!51092 e!165046))

(assert (=> start!51092 true))

(declare-fun b!238909 () Bool)

(declare-fun e!165047 () Bool)

(assert (=> b!238909 (= e!165046 e!165047)))

(declare-fun res!199706 () Bool)

(assert (=> b!238909 (=> (not res!199706) (not e!165047))))

(declare-fun i!888 () (_ BitVec 32))

(declare-fun lt!373731 () (_ BitVec 32))

(assert (=> b!238909 (= res!199706 (and (bvsge i!888 (bvsub lt!373731 #b00000000000000000000000000000001)) (bvsle i!888 #b00000000000000000000000001000000) (bvslt i!888 #b00000000000000000000000001000000) (bvslt (bvadd #b00000000000000000000000000000001 i!888) #b00000000000000000000000001000000)))))

(declare-fun lt!373729 () (_ BitVec 32))

(assert (=> b!238909 (= lt!373731 (bvmul #b00000000000000000000000000001000 lt!373729))))

(assert (=> b!238909 (= lt!373729 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!315 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!315 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!315 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!315 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!315 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(declare-fun b!238910 () Bool)

(assert (=> b!238910 (= e!165047 (and (not (= lt!373729 #b00000000000000000000000000000000)) (not (= #b00000000000000000000000000001000 (bvsdiv lt!373731 lt!373729)))))))

(declare-datatypes ((Unit!17407 0))(
  ( (Unit!17408) )
))
(declare-datatypes ((tuple3!1524 0))(
  ( (tuple3!1525 (_1!11011 Unit!17407) (_2!11011 (_ BitVec 32)) (_3!904 Bool)) )
))
(declare-fun lt!373730 () tuple3!1524)

(declare-fun allOnes!72 () Bool)

(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1524)

(assert (=> b!238910 (= lt!373730 (GetBytesNeededForNegativeNumberWhile!0 v!315 (bvadd #b00000000000000000000000000000001 i!888) (and allOnes!72 (not (= (bvand v!315 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) i!888))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and start!51092 res!199707) b!238909))

(assert (= (and b!238909 res!199706) b!238910))

(declare-fun m!360969 () Bool)

(assert (=> b!238910 m!360969))

(push 1)

(assert (not b!238910))

(check-sat)

(pop 1)

(push 1)

(check-sat)

