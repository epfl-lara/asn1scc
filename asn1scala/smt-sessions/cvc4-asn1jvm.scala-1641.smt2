; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!46016 () Bool)

(assert start!46016)

(declare-fun res!186762 () Bool)

(declare-fun e!150971 () Bool)

(assert (=> start!46016 (=> (not res!186762) (not e!150971))))

(declare-fun v!298 () (_ BitVec 64))

(assert (=> start!46016 (= res!186762 (and (bvslt v!298 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111111111110000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111100000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111110000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111100000000000000000000000000000000000000000000000) (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!46016 e!150971))

(assert (=> start!46016 true))

(declare-fun b!222318 () Bool)

(declare-datatypes ((Unit!16004 0))(
  ( (Unit!16005) )
))
(declare-datatypes ((tuple3!1120 0))(
  ( (tuple3!1121 (_1!10195 Unit!16004) (_2!10195 (_ BitVec 32)) (_3!702 Bool)) )
))
(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1120)

(assert (=> b!222318 (= e!150971 (not (_3!702 (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000110111 true))))))

(assert (= (and start!46016 res!186762) b!222318))

(declare-fun m!340597 () Bool)

(assert (=> b!222318 m!340597))

(push 1)

(assert (not b!222318))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!75179 () Bool)

(declare-fun e!150989 () Bool)

(assert (=> d!75179 e!150989))

(declare-fun res!186771 () Bool)

(assert (=> d!75179 (=> (not res!186771) (not e!150989))))

(declare-fun lt!351250 () tuple3!1120)

(declare-fun lt!351246 () (_ BitVec 32))

(assert (=> d!75179 (= res!186771 (bvsge (_2!10195 lt!351250) (bvsub lt!351246 #b00000000000000000000000000000001)))))

(assert (=> d!75179 (or (= (bvand lt!351246 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!351246 #b10000000000000000000000000000000) (bvand (bvsub lt!351246 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!351248 () (_ BitVec 32))

(declare-fun lt!351251 () (_ BitVec 32))

(assert (=> d!75179 (= lt!351246 (bvmul lt!351248 lt!351251))))

(assert (=> d!75179 (or (= lt!351248 #b00000000000000000000000000000000) (= lt!351251 (bvsdiv (bvmul lt!351248 lt!351251) lt!351248)))))

(assert (=> d!75179 (= lt!351251 #b00000000000000000000000000001000)))

(declare-fun e!150988 () tuple3!1120)

(assert (=> d!75179 (= lt!351250 e!150988)))

(declare-fun c!11046 () Bool)

(declare-fun lt!351247 () (_ BitVec 32))

(assert (=> d!75179 (= c!11046 (bvslt lt!351247 #b00000000000000000000000001000000))))

(assert (=> d!75179 (= lt!351247 (bvadd #b00000000000000000000000000110111 #b00000000000000000000000000000001))))

(declare-fun lt!351249 () Bool)

(assert (=> d!75179 (= lt!351249 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) #b00000000000000000000000000110111))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!75179 (and (bvsge #b00000000000000000000000000110111 (bvsub (bvmul lt!351248 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle #b00000000000000000000000000110111 #b00000000000000000000000001000000) (bvslt #b00000000000000000000000000110111 #b00000000000000000000000001000000))))

(assert (=> d!75179 (= lt!351248 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!75179 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000110111 true) lt!351250)))

(declare-fun b!222343 () Bool)

(assert (=> b!222343 (= e!150988 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!351247 lt!351249))))

(declare-fun b!222344 () Bool)

(declare-fun Unit!16008 () Unit!16004)

(assert (=> b!222344 (= e!150988 (tuple3!1121 Unit!16008 lt!351247 lt!351249))))

(declare-fun b!222345 () Bool)

(assert (=> b!222345 (= e!150989 (and (bvsle (_2!10195 lt!351250) #b00000000000000000000000001000000) (bvsge (_2!10195 lt!351250) #b00000000000000000000000001000000)))))

(assert (= (and d!75179 c!11046) b!222343))

(assert (= (and d!75179 (not c!11046)) b!222344))

(assert (= (and d!75179 res!186771) b!222345))

(declare-fun m!340603 () Bool)

(assert (=> b!222343 m!340603))

(assert (=> b!222318 d!75179))

(push 1)

(assert (not b!222343))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!75193 () Bool)

(declare-fun e!151003 () Bool)

(assert (=> d!75193 e!151003))

(declare-fun res!186778 () Bool)

(assert (=> d!75193 (=> (not res!186778) (not e!151003))))

(declare-fun lt!351292 () tuple3!1120)

(declare-fun lt!351288 () (_ BitVec 32))

(assert (=> d!75193 (= res!186778 (bvsge (_2!10195 lt!351292) (bvsub lt!351288 #b00000000000000000000000000000001)))))

(assert (=> d!75193 (or (= (bvand lt!351288 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!351288 #b10000000000000000000000000000000) (bvand (bvsub lt!351288 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!351290 () (_ BitVec 32))

(declare-fun lt!351293 () (_ BitVec 32))

(assert (=> d!75193 (= lt!351288 (bvmul lt!351290 lt!351293))))

(assert (=> d!75193 (or (= lt!351290 #b00000000000000000000000000000000) (= lt!351293 (bvsdiv (bvmul lt!351290 lt!351293) lt!351290)))))

(assert (=> d!75193 (= lt!351293 #b00000000000000000000000000001000)))

(declare-fun e!151002 () tuple3!1120)

(assert (=> d!75193 (= lt!351292 e!151002)))

(declare-fun c!11053 () Bool)

(declare-fun lt!351289 () (_ BitVec 32))

(assert (=> d!75193 (= c!11053 (bvslt lt!351289 #b00000000000000000000000001000000))))

(assert (=> d!75193 (= lt!351289 (bvadd lt!351247 #b00000000000000000000000000000001))))

(declare-fun lt!351291 () Bool)

(assert (=> d!75193 (= lt!351291 (and lt!351249 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) lt!351247))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!75193 (and (bvsge lt!351247 (bvsub (bvmul lt!351290 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle lt!351247 #b00000000000000000000000001000000) (bvslt lt!351247 #b00000000000000000000000001000000))))

(assert (=> d!75193 (= lt!351290 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!75193 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!351247 lt!351249) lt!351292)))

(declare-fun b!222364 () Bool)

(assert (=> b!222364 (= e!151002 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!351289 lt!351291))))

(declare-fun b!222365 () Bool)

(declare-fun Unit!16015 () Unit!16004)

(assert (=> b!222365 (= e!151002 (tuple3!1121 Unit!16015 lt!351289 lt!351291))))

(declare-fun b!222366 () Bool)

(assert (=> b!222366 (= e!151003 (and (bvsle (_2!10195 lt!351292) #b00000000000000000000000001000000) (bvsge (_2!10195 lt!351292) #b00000000000000000000000001000000)))))

(assert (= (and d!75193 c!11053) b!222364))

(assert (= (and d!75193 (not c!11053)) b!222365))

(assert (= (and d!75193 res!186778) b!222366))

(declare-fun m!340617 () Bool)

(assert (=> b!222364 m!340617))

(assert (=> b!222343 d!75193))

(push 1)

(assert (not b!222364))

(check-sat)

