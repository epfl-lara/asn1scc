; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!46032 () Bool)

(assert start!46032)

(declare-fun res!186786 () Bool)

(declare-fun e!151013 () Bool)

(assert (=> start!46032 (=> (not res!186786) (not e!151013))))

(declare-fun v!298 () (_ BitVec 64))

(assert (=> start!46032 (= res!186786 (and (bvslt v!298 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111111111110000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111100000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111110000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111100000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111110000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!46032 e!151013))

(assert (=> start!46032 true))

(declare-fun b!222378 () Bool)

(assert (=> b!222378 (= e!151013 false)))

(declare-datatypes ((Unit!16020 0))(
  ( (Unit!16021) )
))
(declare-datatypes ((tuple3!1124 0))(
  ( (tuple3!1125 (_1!10197 Unit!16020) (_2!10197 (_ BitVec 32)) (_3!704 Bool)) )
))
(declare-fun lt!351311 () tuple3!1124)

(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1124)

(assert (=> b!222378 (= lt!351311 (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000111111 true))))

(assert (= (and start!46032 res!186786) b!222378))

(declare-fun m!340625 () Bool)

(assert (=> b!222378 m!340625))

(check-sat (not b!222378))
