; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!45964 () Bool)

(assert start!45964)

(declare-fun res!186656 () Bool)

(declare-fun e!150801 () Bool)

(assert (=> start!45964 (=> (not res!186656) (not e!150801))))

(declare-fun v!298 () (_ BitVec 64))

(assert (=> start!45964 (= res!186656 (and (bvslt v!298 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111111111110000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111100000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111110000000000000000000000000000000) (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000)))))

(assert (=> start!45964 e!150801))

(assert (=> start!45964 true))

(declare-fun b!222084 () Bool)

(declare-datatypes ((Unit!15925 0))(
  ( (Unit!15926) )
))
(declare-datatypes ((tuple3!1092 0))(
  ( (tuple3!1093 (_1!10181 Unit!15925) (_2!10181 (_ BitVec 32)) (_3!688 Bool)) )
))
(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1092)

(assert (=> b!222084 (= e!150801 (not (_3!688 (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000100111 true))))))

(assert (= (and start!45964 res!186656) b!222084))

(declare-fun m!340465 () Bool)

(assert (=> b!222084 m!340465))

(push 1)

(assert (not b!222084))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!75061 () Bool)

(declare-fun e!150819 () Bool)

(assert (=> d!75061 e!150819))

(declare-fun res!186668 () Bool)

(assert (=> d!75061 (=> (not res!186668) (not e!150819))))

(declare-fun lt!350831 () tuple3!1092)

(declare-fun lt!350828 () (_ BitVec 32))

(assert (=> d!75061 (= res!186668 (bvsge (_2!10181 lt!350831) (bvsub lt!350828 #b00000000000000000000000000000001)))))

(assert (=> d!75061 (or (= (bvand lt!350828 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!350828 #b10000000000000000000000000000000) (bvand (bvsub lt!350828 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!350829 () (_ BitVec 32))

(declare-fun lt!350830 () (_ BitVec 32))

(assert (=> d!75061 (= lt!350828 (bvmul lt!350829 lt!350830))))

(assert (=> d!75061 (or (= lt!350829 #b00000000000000000000000000000000) (= lt!350830 (bvsdiv (bvmul lt!350829 lt!350830) lt!350829)))))

(assert (=> d!75061 (= lt!350830 #b00000000000000000000000000001000)))

(declare-fun e!150818 () tuple3!1092)

(assert (=> d!75061 (= lt!350831 e!150818)))

(declare-fun c!10979 () Bool)

(declare-fun lt!350826 () (_ BitVec 32))

(assert (=> d!75061 (= c!10979 (bvslt lt!350826 #b00000000000000000000000001000000))))

(assert (=> d!75061 (= lt!350826 (bvadd #b00000000000000000000000000100111 #b00000000000000000000000000000001))))

(declare-fun lt!350827 () Bool)

(assert (=> d!75061 (= lt!350827 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) #b00000000000000000000000000100111))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!75061 (and (bvsge #b00000000000000000000000000100111 (bvsub (bvmul lt!350829 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle #b00000000000000000000000000100111 #b00000000000000000000000001000000) (bvslt #b00000000000000000000000000100111 #b00000000000000000000000001000000))))

(assert (=> d!75061 (= lt!350829 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!75061 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000100111 true) lt!350831)))

(declare-fun b!222106 () Bool)

(assert (=> b!222106 (= e!150818 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350826 lt!350827))))

(declare-fun b!222107 () Bool)

(declare-fun Unit!15932 () Unit!15925)

(assert (=> b!222107 (= e!150818 (tuple3!1093 Unit!15932 lt!350826 lt!350827))))

(declare-fun b!222108 () Bool)

(assert (=> b!222108 (= e!150819 (and (bvsle (_2!10181 lt!350831) #b00000000000000000000000001000000) (bvsge (_2!10181 lt!350831) #b00000000000000000000000001000000)))))

(assert (= (and d!75061 c!10979) b!222106))

(assert (= (and d!75061 (not c!10979)) b!222107))

(assert (= (and d!75061 res!186668) b!222108))

(declare-fun m!340473 () Bool)

(assert (=> b!222106 m!340473))

(assert (=> b!222084 d!75061))

(push 1)

(assert (not b!222106))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!75091 () Bool)

(declare-fun e!150853 () Bool)

(assert (=> d!75091 e!150853))

(declare-fun res!186685 () Bool)

(assert (=> d!75091 (=> (not res!186685) (not e!150853))))

(declare-fun lt!350933 () tuple3!1092)

(declare-fun lt!350930 () (_ BitVec 32))

(assert (=> d!75091 (= res!186685 (bvsge (_2!10181 lt!350933) (bvsub lt!350930 #b00000000000000000000000000000001)))))

(assert (=> d!75091 (or (= (bvand lt!350930 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!350930 #b10000000000000000000000000000000) (bvand (bvsub lt!350930 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!350931 () (_ BitVec 32))

(declare-fun lt!350932 () (_ BitVec 32))

(assert (=> d!75091 (= lt!350930 (bvmul lt!350931 lt!350932))))

(assert (=> d!75091 (or (= lt!350931 #b00000000000000000000000000000000) (= lt!350932 (bvsdiv (bvmul lt!350931 lt!350932) lt!350931)))))

(assert (=> d!75091 (= lt!350932 #b00000000000000000000000000001000)))

(declare-fun e!150852 () tuple3!1092)

(assert (=> d!75091 (= lt!350933 e!150852)))

(declare-fun c!10996 () Bool)

(declare-fun lt!350928 () (_ BitVec 32))

(assert (=> d!75091 (= c!10996 (bvslt lt!350928 #b00000000000000000000000001000000))))

(assert (=> d!75091 (= lt!350928 (bvadd lt!350826 #b00000000000000000000000000000001))))

(declare-fun lt!350929 () Bool)

(assert (=> d!75091 (= lt!350929 (and lt!350827 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) lt!350826))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!75091 (and (bvsge lt!350826 (bvsub (bvmul lt!350931 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle lt!350826 #b00000000000000000000000001000000) (bvslt lt!350826 #b00000000000000000000000001000000))))

(assert (=> d!75091 (= lt!350931 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!75091 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350826 lt!350827) lt!350933)))

(declare-fun b!222157 () Bool)

(assert (=> b!222157 (= e!150852 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350928 lt!350929))))

(declare-fun b!222158 () Bool)

(declare-fun Unit!15947 () Unit!15925)

(assert (=> b!222158 (= e!150852 (tuple3!1093 Unit!15947 lt!350928 lt!350929))))

(declare-fun b!222159 () Bool)

(assert (=> b!222159 (= e!150853 (and (bvsle (_2!10181 lt!350933) #b00000000000000000000000001000000) (bvsge (_2!10181 lt!350933) #b00000000000000000000000001000000)))))

(assert (= (and d!75091 c!10996) b!222157))

(assert (= (and d!75091 (not c!10996)) b!222158))

(assert (= (and d!75091 res!186685) b!222159))

(declare-fun m!340503 () Bool)

(assert (=> b!222157 m!340503))

(assert (=> b!222106 d!75091))

(push 1)

(assert (not b!222157))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!75119 () Bool)

(declare-fun e!150881 () Bool)

(assert (=> d!75119 e!150881))

(declare-fun res!186699 () Bool)

(assert (=> d!75119 (=> (not res!186699) (not e!150881))))

