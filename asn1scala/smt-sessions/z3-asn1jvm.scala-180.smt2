; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!3856 () Bool)

(assert start!3856)

(declare-fun res!15257 () Bool)

(declare-fun e!10611 () Bool)

(assert (=> start!3856 (=> (not res!15257) (not e!10611))))

(declare-fun lt!25140 () Bool)

(declare-fun v!291 () (_ BitVec 64))

(declare-fun i!803 () (_ BitVec 32))

(assert (=> start!3856 (= res!15257 (and (bvsge i!803 #b00000000000000000000000000000001) (bvsle i!803 #b00000000000000000000000001000000) (bvsge i!803 #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub i!803 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25140) (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub i!803 #b00000000000000000000000000000011)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25140)))))

(assert (=> start!3856 (= lt!25140 (not (= (bvand v!291 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!3856 e!10611))

(assert (=> start!3856 true))

(declare-fun b!16886 () Bool)

(declare-datatypes ((Unit!1547 0))(
  ( (Unit!1548) )
))
(declare-datatypes ((tuple2!2030 0))(
  ( (tuple2!2031 (_1!1076 Unit!1547) (_2!1076 (_ BitVec 32))) )
))
(declare-fun lt!25141 () tuple2!2030)

(assert (=> b!16886 (= e!10611 (or (bvslt (_2!1076 lt!25141) #b00000000000000000000000000000001) (bvsgt (_2!1076 lt!25141) #b00000000000000000000000001000000)))))

(declare-fun GetBitCountSignedWhile!0 ((_ BitVec 64) (_ BitVec 32)) tuple2!2030)

(assert (=> b!16886 (= lt!25141 (GetBitCountSignedWhile!0 v!291 (bvsub i!803 #b00000000000000000000000000000001)))))

(assert (= (and start!3856 res!15257) b!16886))

(declare-fun m!23141 () Bool)

(assert (=> b!16886 m!23141))

(check-sat (not b!16886))
(check-sat)
(get-model)

(declare-fun lt!25156 () Bool)

(declare-fun e!10622 () Bool)

(declare-fun b!16901 () Bool)

(declare-fun lt!25158 () (_ BitVec 64))

(assert (=> b!16901 (= e!10622 (not (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 lt!25158)) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25156)))))

(assert (=> b!16901 (and (bvsge lt!25158 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsle lt!25158 #b0000000000000000000000000000000000000000000000000000000001000000))))

(declare-fun lt!25159 () tuple2!2030)

(assert (=> b!16901 (= lt!25158 ((_ sign_extend 32) (bvsub (_2!1076 lt!25159) #b00000000000000000000000000000010)))))

(assert (=> b!16901 (or (= (bvand (_2!1076 lt!25159) #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand (_2!1076 lt!25159) #b10000000000000000000000000000000) (bvand (bvsub (_2!1076 lt!25159) #b00000000000000000000000000000010) #b10000000000000000000000000000000)))))

(declare-fun b!16899 () Bool)

(declare-fun e!10623 () tuple2!2030)

(declare-fun lt!25157 () (_ BitVec 32))

(declare-fun Unit!1551 () Unit!1547)

(assert (=> b!16899 (= e!10623 (tuple2!2031 Unit!1551 lt!25157))))

(declare-fun d!5488 () Bool)

(declare-fun e!10621 () Bool)

(assert (=> d!5488 e!10621))

(declare-fun res!15266 () Bool)

(assert (=> d!5488 (=> (not res!15266) (not e!10621))))

(assert (=> d!5488 (= res!15266 (and (bvsge (_2!1076 lt!25159) #b00000000000000000000000000000001) (bvsle (_2!1076 lt!25159) #b00000000000000000000000001000000)))))

(assert (=> d!5488 (= lt!25159 e!10623)))

(declare-fun c!1294 () Bool)

(assert (=> d!5488 (= c!1294 (and (bvsge lt!25157 #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub lt!25157 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25156)))))

(assert (=> d!5488 (= lt!25157 (bvsub (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000001))))

(assert (=> d!5488 (and (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000001) (bvsle (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000001000000) (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25156))))

(assert (=> d!5488 (= lt!25156 (not (= (bvand v!291 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5488 (= (GetBitCountSignedWhile!0 v!291 (bvsub i!803 #b00000000000000000000000000000001)) lt!25159)))

(declare-fun b!16900 () Bool)

(assert (=> b!16900 (= e!10621 e!10622)))

(declare-fun res!15265 () Bool)

(assert (=> b!16900 (=> res!15265 e!10622)))

(assert (=> b!16900 (= res!15265 (bvslt (_2!1076 lt!25159) #b00000000000000000000000000000010))))

(declare-fun b!16898 () Bool)

(assert (=> b!16898 (= e!10623 (GetBitCountSignedWhile!0 v!291 lt!25157))))

(assert (= (and d!5488 c!1294) b!16898))

(assert (= (and d!5488 (not c!1294)) b!16899))

(assert (= (and d!5488 res!15266) b!16900))

(assert (= (and b!16900 (not res!15265)) b!16901))

(declare-fun m!23145 () Bool)

(assert (=> b!16898 m!23145))

(assert (=> b!16886 d!5488))

(check-sat (not b!16898))
(check-sat)
