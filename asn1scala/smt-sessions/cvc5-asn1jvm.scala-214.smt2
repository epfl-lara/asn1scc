; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!4306 () Bool)

(assert start!4306)

(declare-fun b!17671 () Bool)

(declare-fun e!11334 () Bool)

(declare-datatypes ((array!1178 0))(
  ( (array!1179 (arr!928 (Array (_ BitVec 32) (_ BitVec 8))) (size!499 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!868 0))(
  ( (BitStream!869 (buf!817 array!1178) (currentByte!2032 (_ BitVec 32)) (currentBit!2027 (_ BitVec 32))) )
))
(declare-fun thiss!1917 () BitStream!868)

(declare-datatypes ((tuple2!2060 0))(
  ( (tuple2!2061 (_1!1097 array!1178) (_2!1097 BitStream!868)) )
))
(declare-fun lt!25459 () tuple2!2060)

(assert (=> b!17671 (= e!11334 (or (not (= (currentByte!2032 thiss!1917) (size!499 (buf!817 (_2!1097 lt!25459))))) (= (currentBit!2027 (_2!1097 lt!25459)) #b00000000000000000000000000000000)))))

(declare-fun b!17669 () Bool)

(declare-fun res!15591 () Bool)

(declare-fun e!11332 () Bool)

(assert (=> b!17669 (=> (not res!15591) (not e!11332))))

(declare-fun nBits!604 () (_ BitVec 64))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!17669 (= res!15591 (validate_offset_bits!1 ((_ sign_extend 32) (size!499 (buf!817 thiss!1917))) ((_ sign_extend 32) (currentByte!2032 thiss!1917)) ((_ sign_extend 32) (currentBit!2027 thiss!1917)) nBits!604))))

(declare-fun res!15593 () Bool)

(assert (=> start!4306 (=> (not res!15593) (not e!11332))))

(assert (=> start!4306 (= res!15593 (bvsge nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> start!4306 e!11332))

(assert (=> start!4306 true))

(declare-fun e!11333 () Bool)

(declare-fun inv!12 (BitStream!868) Bool)

(assert (=> start!4306 (and (inv!12 thiss!1917) e!11333)))

(declare-fun b!17670 () Bool)

(assert (=> b!17670 (= e!11332 (not (or (not (= (currentByte!2032 thiss!1917) (size!499 (buf!817 (_2!1097 lt!25459))))) (= (currentBit!2027 thiss!1917) #b00000000000000000000000000000000))))))

(assert (=> b!17670 e!11334))

(declare-fun res!15592 () Bool)

(assert (=> b!17670 (=> (not res!15592) (not e!11334))))

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!17670 (= res!15592 (invariant!0 (currentBit!2027 (_2!1097 lt!25459)) (currentByte!2032 (_2!1097 lt!25459)) (size!499 (buf!817 (_2!1097 lt!25459)))))))

(declare-fun readBits!0 (BitStream!868 (_ BitVec 64)) tuple2!2060)

(assert (=> b!17670 (= lt!25459 (readBits!0 thiss!1917 nBits!604))))

(declare-fun b!17672 () Bool)

(declare-fun array_inv!469 (array!1178) Bool)

(assert (=> b!17672 (= e!11333 (array_inv!469 (buf!817 thiss!1917)))))

(assert (= (and start!4306 res!15593) b!17669))

(assert (= (and b!17669 res!15591) b!17670))

(assert (= (and b!17670 res!15592) b!17671))

(assert (= start!4306 b!17672))

(declare-fun m!23995 () Bool)

(assert (=> b!17669 m!23995))

(declare-fun m!23997 () Bool)

(assert (=> start!4306 m!23997))

(declare-fun m!23999 () Bool)

(assert (=> b!17670 m!23999))

(declare-fun m!24001 () Bool)

(assert (=> b!17670 m!24001))

(declare-fun m!24003 () Bool)

(assert (=> b!17672 m!24003))

(push 1)

(assert (not b!17672))

(assert (not start!4306))

(assert (not b!17670))

(assert (not b!17669))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!5822 () Bool)

(assert (=> d!5822 (= (array_inv!469 (buf!817 thiss!1917)) (bvsge (size!499 (buf!817 thiss!1917)) #b00000000000000000000000000000000))))

(assert (=> b!17672 d!5822))

(declare-fun d!5824 () Bool)

(assert (=> d!5824 (= (inv!12 thiss!1917) (invariant!0 (currentBit!2027 thiss!1917) (currentByte!2032 thiss!1917) (size!499 (buf!817 thiss!1917))))))

(declare-fun bs!1665 () Bool)

(assert (= bs!1665 d!5824))

(declare-fun m!24025 () Bool)

(assert (=> bs!1665 m!24025))

(assert (=> start!4306 d!5824))

(declare-fun d!5826 () Bool)

(assert (=> d!5826 (= (invariant!0 (currentBit!2027 (_2!1097 lt!25459)) (currentByte!2032 (_2!1097 lt!25459)) (size!499 (buf!817 (_2!1097 lt!25459)))) (and (bvsge (currentBit!2027 (_2!1097 lt!25459)) #b00000000000000000000000000000000) (bvslt (currentBit!2027 (_2!1097 lt!25459)) #b00000000000000000000000000001000) (bvsge (currentByte!2032 (_2!1097 lt!25459)) #b00000000000000000000000000000000) (or (bvslt (currentByte!2032 (_2!1097 lt!25459)) (size!499 (buf!817 (_2!1097 lt!25459)))) (and (= (currentBit!2027 (_2!1097 lt!25459)) #b00000000000000000000000000000000) (= (currentByte!2032 (_2!1097 lt!25459)) (size!499 (buf!817 (_2!1097 lt!25459))))))))))

(assert (=> b!17670 d!5826))

(declare-fun b!17707 () Bool)

(declare-fun res!15622 () Bool)

(declare-fun e!11361 () Bool)

(assert (=> b!17707 (=> (not res!15622) (not e!11361))))

(declare-fun lt!25489 () tuple2!2060)

(assert (=> b!17707 (= res!15622 (invariant!0 (currentBit!2027 (_2!1097 lt!25489)) (currentByte!2032 (_2!1097 lt!25489)) (size!499 (buf!817 (_2!1097 lt!25489)))))))

(declare-fun d!5828 () Bool)

(assert (=> d!5828 e!11361))

(declare-fun res!15624 () Bool)

(assert (=> d!5828 (=> (not res!15624) (not e!11361))))

(assert (=> d!5828 (= res!15624 (= (buf!817 (_2!1097 lt!25489)) (buf!817 thiss!1917)))))

(declare-datatypes ((Unit!1584 0))(
  ( (Unit!1585) )
))
(declare-datatypes ((tuple3!122 0))(
  ( (tuple3!123 (_1!1100 Unit!1584) (_2!1100 BitStream!868) (_3!67 array!1178)) )
))
(declare-fun lt!25491 () tuple3!122)

(assert (=> d!5828 (= lt!25489 (tuple2!2061 (_3!67 lt!25491) (_2!1100 lt!25491)))))

(declare-fun readBitsLoop!0 (BitStream!868 (_ BitVec 64) array!1178 (_ BitVec 64) (_ BitVec 64)) tuple3!122)

(assert (=> d!5828 (= lt!25491 (readBitsLoop!0 thiss!1917 nBits!604 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604))))

(assert (=> d!5828 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bvsle nBits!604 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!5828 (= (readBits!0 thiss!1917 nBits!604) lt!25489)))

(declare-fun b!17708 () Bool)

(declare-datatypes ((List!195 0))(
  ( (Nil!192) (Cons!191 (h!310 Bool) (t!945 List!195)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!868 array!1178 (_ BitVec 64) (_ BitVec 64)) List!195)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!868 BitStream!868 (_ BitVec 64)) List!195)

(assert (=> b!17708 (= e!11361 (= (byteArrayBitContentToList!0 (_2!1097 lt!25489) (_1!1097 lt!25489) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bitStreamReadBitsIntoList!0 (_2!1097 lt!25489) thiss!1917 nBits!604)))))

(declare-fun b!17709 () Bool)

(declare-fun res!15625 () Bool)

(assert (=> b!17709 (=> (not res!15625) (not e!11361))))

(declare-fun lt!25488 () (_ BitVec 64))

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!17709 (= res!15625 (= (bvadd lt!25488 nBits!604) (bitIndex!0 (size!499 (buf!817 (_2!1097 lt!25489))) (currentByte!2032 (_2!1097 lt!25489)) (currentBit!2027 (_2!1097 lt!25489)))))))

(assert (=> b!17709 (or (not (= (bvand lt!25488 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!25488 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!25488 nBits!604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!17709 (= lt!25488 (bitIndex!0 (size!499 (buf!817 thiss!1917)) (currentByte!2032 thiss!1917) (currentBit!2027 thiss!1917)))))

(declare-fun b!17710 () Bool)

(declare-fun res!15626 () Bool)

(assert (=> b!17710 (=> (not res!15626) (not e!11361))))

(assert (=> b!17710 (= res!15626 (bvsle (currentByte!2032 thiss!1917) (currentByte!2032 (_2!1097 lt!25489))))))

(declare-fun b!17711 () Bool)

(declare-fun res!15623 () Bool)

(assert (=> b!17711 (=> (not res!15623) (not e!11361))))

(declare-fun lt!25490 () (_ BitVec 64))

(assert (=> b!17711 (= res!15623 (= (size!499 (_1!1097 lt!25489)) ((_ extract 31 0) lt!25490)))))

(assert (=> b!17711 (and (bvslt lt!25490 #b0000000000000000000000000000000010000000000000000000000000000000) (bvsge lt!25490 #b1111111111111111111111111111111110000000000000000000000000000000))))

(declare-fun lt!25492 () (_ BitVec 64))

(declare-fun lt!25487 () (_ BitVec 64))

(assert (=> b!17711 (= lt!25490 (bvsdiv lt!25492 lt!25487))))

(assert (=> b!17711 (and (not (= lt!25487 #b0000000000000000000000000000000000000000000000000000000000000000)) (or (not (= lt!25492 #b1000000000000000000000000000000000000000000000000000000000000000)) (not (= lt!25487 #b1111111111111111111111111111111111111111111111111111111111111111))))))

(assert (=> b!17711 (= lt!25487 #b0000000000000000000000000000000000000000000000000000000000001000)))

(declare-fun lt!25485 () (_ BitVec 64))

(declare-fun lt!25484 () (_ BitVec 64))

(assert (=> b!17711 (= lt!25492 (bvsub lt!25485 lt!25484))))

(assert (=> b!17711 (or (= (bvand lt!25485 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!25484 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!25485 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!25485 lt!25484) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!17711 (= lt!25484 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!25486 () (_ BitVec 64))

(assert (=> b!17711 (= lt!25485 (bvadd nBits!604 lt!25486))))

(assert (=> b!17711 (or (not (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!25486 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd nBits!604 lt!25486) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!17711 (= lt!25486 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (= (and d!5828 res!15624) b!17709))

(assert (= (and b!17709 res!15625) b!17707))

(assert (= (and b!17707 res!15622) b!17711))

(assert (= (and b!17711 res!15623) b!17710))

(assert (= (and b!17710 res!15626) b!17708))

(declare-fun m!24031 () Bool)

(assert (=> b!17707 m!24031))

(declare-fun m!24033 () Bool)

(assert (=> d!5828 m!24033))

(declare-fun m!24035 () Bool)

(assert (=> b!17708 m!24035))

(declare-fun m!24037 () Bool)

(assert (=> b!17708 m!24037))

(declare-fun m!24039 () Bool)

(assert (=> b!17709 m!24039))

(declare-fun m!24041 () Bool)

(assert (=> b!17709 m!24041))

(assert (=> b!17670 d!5828))

(declare-fun d!5842 () Bool)

(declare-fun remainingBits!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))

(assert (=> d!5842 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!499 (buf!817 thiss!1917))) ((_ sign_extend 32) (currentByte!2032 thiss!1917)) ((_ sign_extend 32) (currentBit!2027 thiss!1917)) nBits!604) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!499 (buf!817 thiss!1917))) ((_ sign_extend 32) (currentByte!2032 thiss!1917)) ((_ sign_extend 32) (currentBit!2027 thiss!1917))) nBits!604))))

(declare-fun bs!1668 () Bool)

(assert (= bs!1668 d!5842))

(declare-fun m!24043 () Bool)

(assert (=> bs!1668 m!24043))

(assert (=> b!17669 d!5842))

(push 1)

(assert (not b!17708))

(assert (not b!17707))

(assert (not d!5824))

(assert (not d!5828))

(assert (not d!5842))

(assert (not b!17709))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun b!17866 () Bool)

(declare-fun res!15731 () Bool)

(declare-fun e!11428 () Bool)

(assert (=> b!17866 (=> (not res!15731) (not e!11428))))

(declare-fun lt!25910 () tuple3!122)

(declare-fun arrayBitRangesEq!0 (array!1178 array!1178 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!17866 (= res!15731 (arrayBitRangesEq!0 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!67 lt!25910) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!17867 () Bool)

(declare-fun res!15732 () Bool)

(assert (=> b!17867 (=> (not res!15732) (not e!11428))))

(assert (=> b!17867 (= res!15732 (and (= (buf!817 thiss!1917) (buf!817 (_2!1100 lt!25910))) (= (size!499 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!499 (_3!67 lt!25910)))))))

(declare-fun b!17868 () Bool)

(declare-fun lt!25913 () Unit!1584)

(declare-fun e!11426 () tuple3!122)

(assert (=> b!17868 (= e!11426 (tuple3!123 lt!25913 thiss!1917 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun lt!25932 () Unit!1584)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!1178) Unit!1584)

(assert (=> b!17868 (= lt!25932 (arrayBitRangesEqReflexiveLemma!0 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun call!274 () Bool)

(assert (=> b!17868 call!274))

(declare-fun lt!25908 () Unit!1584)

(assert (=> b!17868 (= lt!25908 lt!25932)))

(declare-fun lt!25901 () array!1178)

(assert (=> b!17868 (= lt!25901 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!25909 () array!1178)

(assert (=> b!17868 (= lt!25909 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!25918 () (_ BitVec 64))

(assert (=> b!17868 (= lt!25918 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25927 () (_ BitVec 64))

(assert (=> b!17868 (= lt!25927 ((_ sign_extend 32) (size!499 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!25917 () (_ BitVec 64))

(assert (=> b!17868 (= lt!25917 (bvmul lt!25927 #b0000000000000000000000000000000000000000000000000000000000001000))))

(declare-fun lt!25914 () (_ BitVec 64))

(assert (=> b!17868 (= lt!25914 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25935 () (_ BitVec 64))

(assert (=> b!17868 (= lt!25935 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!1178 array!1178 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1584)

(assert (=> b!17868 (= lt!25913 (arrayBitRangesEqSlicedLemma!0 lt!25901 lt!25909 lt!25918 lt!25917 lt!25914 lt!25935))))

(declare-fun call!275 () Bool)

(assert (=> b!17868 call!275))

(declare-fun b!17869 () Bool)

(assert (=> b!17869 (= e!11428 (= (byteArrayBitContentToList!0 (_2!1100 lt!25910) (_3!67 lt!25910) #b0000000000000000000000000000000000000000000000000000000000000000 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000)) (bitStreamReadBitsIntoList!0 (_2!1100 lt!25910) thiss!1917 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!17869 (or (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!17869 (or (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!5884 () Bool)

(assert (=> d!5884 e!11428))

(declare-fun res!15733 () Bool)

(assert (=> d!5884 (=> (not res!15733) (not e!11428))))

(declare-fun lt!25915 () (_ BitVec 64))

(assert (=> d!5884 (= res!15733 (= (bvsub lt!25915 #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!499 (buf!817 (_2!1100 lt!25910))) (currentByte!2032 (_2!1100 lt!25910)) (currentBit!2027 (_2!1100 lt!25910)))))))

(assert (=> d!5884 (or (= (bvand lt!25915 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!25915 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!25915 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!25931 () (_ BitVec 64))

(assert (=> d!5884 (= lt!25915 (bvadd lt!25931 nBits!604))))

(assert (=> d!5884 (or (not (= (bvand lt!25931 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!25931 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!25931 nBits!604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5884 (= lt!25931 (bitIndex!0 (size!499 (buf!817 thiss!1917)) (currentByte!2032 thiss!1917) (currentBit!2027 thiss!1917)))))

(assert (=> d!5884 (= lt!25910 e!11426)))

(declare-fun c!1342 () Bool)

(assert (=> d!5884 (= c!1342 (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604))))

(assert (=> d!5884 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bvsle nBits!604 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!5884 (= (readBitsLoop!0 thiss!1917 nBits!604 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) lt!25910)))

(declare-fun b!17870 () Bool)

(declare-fun e!11427 () Bool)

(declare-fun lt!25919 () tuple3!122)

(assert (=> b!17870 (= e!11427 (and (= (buf!817 thiss!1917) (buf!817 (_2!1100 lt!25919))) (= (size!499 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!499 (_3!67 lt!25919)))))))

(declare-fun b!17871 () Bool)

(declare-fun res!15735 () Bool)

(assert (=> b!17871 (=> (not res!15735) (not e!11428))))

(declare-fun e!11429 () Bool)

(assert (=> b!17871 (= res!15735 e!11429)))

(declare-fun res!15729 () Bool)

(assert (=> b!17871 (=> res!15729 e!11429)))

(assert (=> b!17871 (= res!15729 (not (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604)))))

(declare-fun b!17872 () Bool)

(declare-fun bitAt!0 (array!1178 (_ BitVec 64)) Bool)

(declare-datatypes ((tuple2!2078 0))(
  ( (tuple2!2079 (_1!1109 BitStream!868) (_2!1109 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!868) tuple2!2078)

(assert (=> b!17872 (= e!11429 (= (bitAt!0 (_3!67 lt!25910) #b0000000000000000000000000000000000000000000000000000000000000000) (_2!1109 (readBitPure!0 thiss!1917))))))

(declare-fun b!17873 () Bool)

(declare-fun lt!25933 () Unit!1584)

(assert (=> b!17873 (= e!11426 (tuple3!123 lt!25933 (_2!1100 lt!25919) (_3!67 lt!25919)))))

(declare-datatypes ((tuple2!2080 0))(
  ( (tuple2!2081 (_1!1110 Bool) (_2!1110 BitStream!868)) )
))
(declare-fun lt!25903 () tuple2!2080)

(declare-fun readBit!0 (BitStream!868) tuple2!2080)

(assert (=> b!17873 (= lt!25903 (readBit!0 thiss!1917))))

(declare-fun lt!25905 () (_ BitVec 32))

(assert (=> b!17873 (= lt!25905 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!25929 () (_ BitVec 32))

(assert (=> b!17873 (= lt!25929 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!25923 () array!1178)

(assert (=> b!17873 (= lt!25923 (array!1179 (store (arr!928 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!25905 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!928 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!25905)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!25929)))) ((_ sign_extend 24) (ite (_1!1110 lt!25903) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!25929) #b00000000))))) (size!499 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!25926 () (_ BitVec 64))

(assert (=> b!17873 (= lt!25926 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!25934 () (_ BitVec 64))

(assert (=> b!17873 (= lt!25934 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!25924 () Unit!1584)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!868 BitStream!868 (_ BitVec 64) (_ BitVec 64)) Unit!1584)

(assert (=> b!17873 (= lt!25924 (validateOffsetBitsIneqLemma!0 thiss!1917 (_2!1110 lt!25903) lt!25926 lt!25934))))

(assert (=> b!17873 (validate_offset_bits!1 ((_ sign_extend 32) (size!499 (buf!817 (_2!1110 lt!25903)))) ((_ sign_extend 32) (currentByte!2032 (_2!1110 lt!25903))) ((_ sign_extend 32) (currentBit!2027 (_2!1110 lt!25903))) (bvsub lt!25926 lt!25934))))

(declare-fun lt!25925 () Unit!1584)

(assert (=> b!17873 (= lt!25925 lt!25924)))

(assert (=> b!17873 (= lt!25919 (readBitsLoop!0 (_2!1110 lt!25903) nBits!604 lt!25923 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) nBits!604))))

(declare-fun res!15734 () Bool)

(assert (=> b!17873 (= res!15734 (= (bvsub (bvadd (bitIndex!0 (size!499 (buf!817 thiss!1917)) (currentByte!2032 thiss!1917) (currentBit!2027 thiss!1917)) nBits!604) #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!499 (buf!817 (_2!1100 lt!25919))) (currentByte!2032 (_2!1100 lt!25919)) (currentBit!2027 (_2!1100 lt!25919)))))))

(assert (=> b!17873 (=> (not res!15734) (not e!11427))))

(assert (=> b!17873 e!11427))

(declare-fun lt!25921 () Unit!1584)

(declare-fun Unit!1598 () Unit!1584)

(assert (=> b!17873 (= lt!25921 Unit!1598)))

(declare-fun lt!25928 () (_ BitVec 32))

(assert (=> b!17873 (= lt!25928 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!25936 () (_ BitVec 32))

(assert (=> b!17873 (= lt!25936 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!25920 () Unit!1584)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!1178 (_ BitVec 64) Bool) Unit!1584)

(assert (=> b!17873 (= lt!25920 (arrayBitRangesUpdatedAtLemma!0 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 (_1!1110 lt!25903)))))

(assert (=> b!17873 (arrayBitRangesEq!0 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (array!1179 (store (arr!928 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!25928 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!928 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!25928)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!25936)))) ((_ sign_extend 24) (ite (_1!1110 lt!25903) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!25936) #b00000000))))) (size!499 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25907 () Unit!1584)

(assert (=> b!17873 (= lt!25907 lt!25920)))

(declare-fun lt!25912 () (_ BitVec 64))

(assert (=> b!17873 (= lt!25912 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25902 () Unit!1584)

(declare-fun arrayBitRangesEqTransitive!0 (array!1178 array!1178 array!1178 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1584)

(assert (=> b!17873 (= lt!25902 (arrayBitRangesEqTransitive!0 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!25923 (_3!67 lt!25919) lt!25912 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!17873 call!274))

(declare-fun lt!25904 () Unit!1584)

(assert (=> b!17873 (= lt!25904 lt!25902)))

(assert (=> b!17873 call!275))

(declare-fun lt!25922 () Unit!1584)

(declare-fun Unit!1599 () Unit!1584)

(assert (=> b!17873 (= lt!25922 Unit!1599)))

(declare-fun lt!25916 () Unit!1584)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!1178 array!1178 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1584)

(assert (=> b!17873 (= lt!25916 (arrayBitRangesEqImpliesEq!0 lt!25923 (_3!67 lt!25919) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!17873 (= (bitAt!0 lt!25923 #b0000000000000000000000000000000000000000000000000000000000000000) (bitAt!0 (_3!67 lt!25919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!25906 () Unit!1584)

(assert (=> b!17873 (= lt!25906 lt!25916)))

(declare-fun lt!25930 () Unit!1584)

(declare-fun Unit!1600 () Unit!1584)

(assert (=> b!17873 (= lt!25930 Unit!1600)))

(declare-fun lt!25911 () Bool)

(assert (=> b!17873 (= lt!25911 (= (bitAt!0 (_3!67 lt!25919) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!1110 lt!25903)))))

(declare-fun Unit!1601 () Unit!1584)

(assert (=> b!17873 (= lt!25933 Unit!1601)))

(assert (=> b!17873 lt!25911))

(declare-fun bm!271 () Bool)

(assert (=> bm!271 (= call!274 (arrayBitRangesEq!0 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (ite c!1342 (_3!67 lt!25919) (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (ite c!1342 lt!25912 #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!1342 #b0000000000000000000000000000000000000000000000000000000000000000 (bvmul ((_ sign_extend 32) (size!499 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun bm!272 () Bool)

(assert (=> bm!272 (= call!275 (arrayBitRangesEq!0 (ite c!1342 (array!1179 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!25901) (ite c!1342 (_3!67 lt!25919) lt!25909) (ite c!1342 #b0000000000000000000000000000000000000000000000000000000000000000 lt!25914) (ite c!1342 #b0000000000000000000000000000000000000000000000000000000000000000 lt!25935)))))

(declare-fun b!17874 () Bool)

(declare-fun res!15730 () Bool)

(assert (=> b!17874 (=> (not res!15730) (not e!11428))))

(assert (=> b!17874 (= res!15730 (invariant!0 (currentBit!2027 (_2!1100 lt!25910)) (currentByte!2032 (_2!1100 lt!25910)) (size!499 (buf!817 (_2!1100 lt!25910)))))))

(assert (= (and d!5884 c!1342) b!17873))

(assert (= (and d!5884 (not c!1342)) b!17868))

(assert (= (and b!17873 res!15734) b!17870))

(assert (= (or b!17873 b!17868) bm!272))

(assert (= (or b!17873 b!17868) bm!271))

(assert (= (and d!5884 res!15733) b!17867))

(assert (= (and b!17867 res!15732) b!17866))

(assert (= (and b!17866 res!15731) b!17871))

(assert (= (and b!17871 (not res!15729)) b!17872))

(assert (= (and b!17871 res!15735) b!17874))

(assert (= (and b!17874 res!15730) b!17869))

(declare-fun m!24213 () Bool)

(assert (=> bm!272 m!24213))

(declare-fun m!24215 () Bool)

(assert (=> b!17869 m!24215))

(declare-fun m!24217 () Bool)

(assert (=> b!17869 m!24217))

(declare-fun m!24219 () Bool)

(assert (=> bm!271 m!24219))

(declare-fun m!24221 () Bool)

(assert (=> d!5884 m!24221))

(assert (=> d!5884 m!24041))

(declare-fun m!24223 () Bool)

(assert (=> b!17868 m!24223))

(declare-fun m!24225 () Bool)

(assert (=> b!17868 m!24225))

(declare-fun m!24227 () Bool)

(assert (=> b!17872 m!24227))

(declare-fun m!24229 () Bool)

(assert (=> b!17872 m!24229))

(declare-fun m!24231 () Bool)

(assert (=> b!17866 m!24231))

(declare-fun m!24233 () Bool)

(assert (=> b!17873 m!24233))

(declare-fun m!24235 () Bool)

(assert (=> b!17873 m!24235))

(declare-fun m!24237 () Bool)

(assert (=> b!17873 m!24237))

(declare-fun m!24239 () Bool)

(assert (=> b!17873 m!24239))

(declare-fun m!24241 () Bool)

(assert (=> b!17873 m!24241))

(declare-fun m!24243 () Bool)

(assert (=> b!17873 m!24243))

(declare-fun m!24245 () Bool)

(assert (=> b!17873 m!24245))

(declare-fun m!24247 () Bool)

(assert (=> b!17873 m!24247))

(declare-fun m!24249 () Bool)

(assert (=> b!17873 m!24249))

(declare-fun m!24251 () Bool)

(assert (=> b!17873 m!24251))

(declare-fun m!24253 () Bool)

(assert (=> b!17873 m!24253))

(declare-fun m!24255 () Bool)

(assert (=> b!17873 m!24255))

(declare-fun m!24257 () Bool)

(assert (=> b!17873 m!24257))

(declare-fun m!24259 () Bool)

(assert (=> b!17873 m!24259))

(declare-fun m!24261 () Bool)

(assert (=> b!17873 m!24261))

(declare-fun m!24263 () Bool)

(assert (=> b!17873 m!24263))

(assert (=> b!17873 m!24041))

(declare-fun m!24265 () Bool)

(assert (=> b!17873 m!24265))

(declare-fun m!24267 () Bool)

(assert (=> b!17874 m!24267))

(assert (=> d!5828 d!5884))

(declare-fun d!5886 () Bool)

(assert (=> d!5886 (= (invariant!0 (currentBit!2027 thiss!1917) (currentByte!2032 thiss!1917) (size!499 (buf!817 thiss!1917))) (and (bvsge (currentBit!2027 thiss!1917) #b00000000000000000000000000000000) (bvslt (currentBit!2027 thiss!1917) #b00000000000000000000000000001000) (bvsge (currentByte!2032 thiss!1917) #b00000000000000000000000000000000) (or (bvslt (currentByte!2032 thiss!1917) (size!499 (buf!817 thiss!1917))) (and (= (currentBit!2027 thiss!1917) #b00000000000000000000000000000000) (= (currentByte!2032 thiss!1917) (size!499 (buf!817 thiss!1917)))))))))

(assert (=> d!5824 d!5886))

(declare-fun d!5888 () Bool)

(assert (=> d!5888 (= (invariant!0 (currentBit!2027 (_2!1097 lt!25489)) (currentByte!2032 (_2!1097 lt!25489)) (size!499 (buf!817 (_2!1097 lt!25489)))) (and (bvsge (currentBit!2027 (_2!1097 lt!25489)) #b00000000000000000000000000000000) (bvslt (currentBit!2027 (_2!1097 lt!25489)) #b00000000000000000000000000001000) (bvsge (currentByte!2032 (_2!1097 lt!25489)) #b00000000000000000000000000000000) (or (bvslt (currentByte!2032 (_2!1097 lt!25489)) (size!499 (buf!817 (_2!1097 lt!25489)))) (and (= (currentBit!2027 (_2!1097 lt!25489)) #b00000000000000000000000000000000) (= (currentByte!2032 (_2!1097 lt!25489)) (size!499 (buf!817 (_2!1097 lt!25489))))))))))

(assert (=> b!17707 d!5888))

(declare-fun d!5890 () Bool)

(declare-fun c!1345 () Bool)

(assert (=> d!5890 (= c!1345 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!11432 () List!195)

(assert (=> d!5890 (= (byteArrayBitContentToList!0 (_2!1097 lt!25489) (_1!1097 lt!25489) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) e!11432)))

(declare-fun b!17879 () Bool)

(assert (=> b!17879 (= e!11432 Nil!192)))

(declare-fun b!17880 () Bool)

(assert (=> b!17880 (= e!11432 (Cons!191 (not (= (bvand ((_ sign_extend 24) (select (arr!928 (_1!1097 lt!25489)) ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 (_2!1097 lt!25489) (_1!1097 lt!25489) (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!5890 c!1345) b!17879))

(assert (= (and d!5890 (not c!1345)) b!17880))

(declare-fun m!24269 () Bool)

(assert (=> b!17880 m!24269))

(declare-fun m!24271 () Bool)

(assert (=> b!17880 m!24271))

(declare-fun m!24273 () Bool)

(assert (=> b!17880 m!24273))

(assert (=> b!17708 d!5890))

(declare-fun b!17891 () Bool)

(declare-fun e!11437 () Bool)

(declare-fun lt!25945 () List!195)

(declare-fun isEmpty!45 (List!195) Bool)

(assert (=> b!17891 (= e!11437 (isEmpty!45 lt!25945))))

(declare-fun d!5892 () Bool)

(assert (=> d!5892 e!11437))

(declare-fun c!1350 () Bool)

(assert (=> d!5892 (= c!1350 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-datatypes ((tuple2!2082 0))(
  ( (tuple2!2083 (_1!1111 List!195) (_2!1111 BitStream!868)) )
))
(declare-fun e!11438 () tuple2!2082)

(assert (=> d!5892 (= lt!25945 (_1!1111 e!11438))))

(declare-fun c!1351 () Bool)

(assert (=> d!5892 (= c!1351 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!5892 (bvsge nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> d!5892 (= (bitStreamReadBitsIntoList!0 (_2!1097 lt!25489) thiss!1917 nBits!604) lt!25945)))

(declare-fun b!17889 () Bool)

(assert (=> b!17889 (= e!11438 (tuple2!2083 Nil!192 thiss!1917))))

(declare-fun b!17890 () Bool)

(declare-fun lt!25943 () (_ BitVec 64))

(declare-fun lt!25944 () tuple2!2080)

(assert (=> b!17890 (= e!11438 (tuple2!2083 (Cons!191 (_1!1110 lt!25944) (bitStreamReadBitsIntoList!0 (_2!1097 lt!25489) (_2!1110 lt!25944) (bvsub nBits!604 lt!25943))) (_2!1110 lt!25944)))))

(assert (=> b!17890 (= lt!25944 (readBit!0 thiss!1917))))

(assert (=> b!17890 (= lt!25943 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun b!17892 () Bool)

(declare-fun length!40 (List!195) Int)

(assert (=> b!17892 (= e!11437 (> (length!40 lt!25945) 0))))

(assert (= (and d!5892 c!1351) b!17889))

(assert (= (and d!5892 (not c!1351)) b!17890))

(assert (= (and d!5892 c!1350) b!17891))

(assert (= (and d!5892 (not c!1350)) b!17892))

(declare-fun m!24275 () Bool)

(assert (=> b!17891 m!24275))

(declare-fun m!24277 () Bool)

(assert (=> b!17890 m!24277))

(assert (=> b!17890 m!24253))

(declare-fun m!24279 () Bool)

(assert (=> b!17892 m!24279))

(assert (=> b!17708 d!5892))

(declare-fun d!5894 () Bool)

(assert (=> d!5894 (= (remainingBits!0 ((_ sign_extend 32) (size!499 (buf!817 thiss!1917))) ((_ sign_extend 32) (currentByte!2032 thiss!1917)) ((_ sign_extend 32) (currentBit!2027 thiss!1917))) (bvsub (bvmul ((_ sign_extend 32) (size!499 (buf!817 thiss!1917))) #b0000000000000000000000000000000000000000000000000000000000001000) (bvadd (bvmul ((_ sign_extend 32) (currentByte!2032 thiss!1917)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2027 thiss!1917)))))))

(assert (=> d!5842 d!5894))

(declare-fun d!5896 () Bool)

(declare-fun e!11441 () Bool)

(assert (=> d!5896 e!11441))

(declare-fun res!15740 () Bool)

(assert (=> d!5896 (=> (not res!15740) (not e!11441))))

(declare-fun lt!25962 () (_ BitVec 64))

(declare-fun lt!25960 () (_ BitVec 64))

(declare-fun lt!25963 () (_ BitVec 64))

(assert (=> d!5896 (= res!15740 (= lt!25960 (bvsub lt!25962 lt!25963)))))

(assert (=> d!5896 (or (= (bvand lt!25962 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!25963 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!25962 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!25962 lt!25963) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5896 (= lt!25963 (remainingBits!0 ((_ sign_extend 32) (size!499 (buf!817 (_2!1097 lt!25489)))) ((_ sign_extend 32) (currentByte!2032 (_2!1097 lt!25489))) ((_ sign_extend 32) (currentBit!2027 (_2!1097 lt!25489)))))))

(declare-fun lt!25958 () (_ BitVec 64))

(declare-fun lt!25961 () (_ BitVec 64))

(assert (=> d!5896 (= lt!25962 (bvmul lt!25958 lt!25961))))

(assert (=> d!5896 (or (= lt!25958 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!25961 (bvsdiv (bvmul lt!25958 lt!25961) lt!25958)))))

(assert (=> d!5896 (= lt!25961 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!5896 (= lt!25958 ((_ sign_extend 32) (size!499 (buf!817 (_2!1097 lt!25489)))))))

(assert (=> d!5896 (= lt!25960 (bvadd (bvmul ((_ sign_extend 32) (currentByte!2032 (_2!1097 lt!25489))) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2027 (_2!1097 lt!25489)))))))

(assert (=> d!5896 (invariant!0 (currentBit!2027 (_2!1097 lt!25489)) (currentByte!2032 (_2!1097 lt!25489)) (size!499 (buf!817 (_2!1097 lt!25489))))))

(assert (=> d!5896 (= (bitIndex!0 (size!499 (buf!817 (_2!1097 lt!25489))) (currentByte!2032 (_2!1097 lt!25489)) (currentBit!2027 (_2!1097 lt!25489))) lt!25960)))

(declare-fun b!17897 () Bool)

(declare-fun res!15741 () Bool)

(assert (=> b!17897 (=> (not res!15741) (not e!11441))))

(assert (=> b!17897 (= res!15741 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!25960))))

(declare-fun b!17898 () Bool)

(declare-fun lt!25959 () (_ BitVec 64))

(assert (=> b!17898 (= e!11441 (bvsle lt!25960 (bvmul lt!25959 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!17898 (or (= lt!25959 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!25959 #b0000000000000000000000000000000000000000000000000000000000001000) lt!25959)))))

(assert (=> b!17898 (= lt!25959 ((_ sign_extend 32) (size!499 (buf!817 (_2!1097 lt!25489)))))))

(assert (= (and d!5896 res!15740) b!17897))

(assert (= (and b!17897 res!15741) b!17898))

(declare-fun m!24281 () Bool)

(assert (=> d!5896 m!24281))

(assert (=> d!5896 m!24031))

(assert (=> b!17709 d!5896))

(declare-fun d!5898 () Bool)

(declare-fun e!11442 () Bool)

(assert (=> d!5898 e!11442))

(declare-fun res!15742 () Bool)

(assert (=> d!5898 (=> (not res!15742) (not e!11442))))

(declare-fun lt!25966 () (_ BitVec 64))

(declare-fun lt!25969 () (_ BitVec 64))

(declare-fun lt!25968 () (_ BitVec 64))

(assert (=> d!5898 (= res!15742 (= lt!25966 (bvsub lt!25968 lt!25969)))))

(assert (=> d!5898 (or (= (bvand lt!25968 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!25969 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!25968 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!25968 lt!25969) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5898 (= lt!25969 (remainingBits!0 ((_ sign_extend 32) (size!499 (buf!817 thiss!1917))) ((_ sign_extend 32) (currentByte!2032 thiss!1917)) ((_ sign_extend 32) (currentBit!2027 thiss!1917))))))

(declare-fun lt!25964 () (_ BitVec 64))

(declare-fun lt!25967 () (_ BitVec 64))

(assert (=> d!5898 (= lt!25968 (bvmul lt!25964 lt!25967))))

(assert (=> d!5898 (or (= lt!25964 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!25967 (bvsdiv (bvmul lt!25964 lt!25967) lt!25964)))))

(assert (=> d!5898 (= lt!25967 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!5898 (= lt!25964 ((_ sign_extend 32) (size!499 (buf!817 thiss!1917))))))

(assert (=> d!5898 (= lt!25966 (bvadd (bvmul ((_ sign_extend 32) (currentByte!2032 thiss!1917)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2027 thiss!1917))))))

(assert (=> d!5898 (invariant!0 (currentBit!2027 thiss!1917) (currentByte!2032 thiss!1917) (size!499 (buf!817 thiss!1917)))))

(assert (=> d!5898 (= (bitIndex!0 (size!499 (buf!817 thiss!1917)) (currentByte!2032 thiss!1917) (currentBit!2027 thiss!1917)) lt!25966)))

(declare-fun b!17899 () Bool)

(declare-fun res!15743 () Bool)

(assert (=> b!17899 (=> (not res!15743) (not e!11442))))

(assert (=> b!17899 (= res!15743 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!25966))))

(declare-fun b!17900 () Bool)

(declare-fun lt!25965 () (_ BitVec 64))

(assert (=> b!17900 (= e!11442 (bvsle lt!25966 (bvmul lt!25965 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!17900 (or (= lt!25965 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!25965 #b0000000000000000000000000000000000000000000000000000000000001000) lt!25965)))))

(assert (=> b!17900 (= lt!25965 ((_ sign_extend 32) (size!499 (buf!817 thiss!1917))))))

(assert (= (and d!5898 res!15742) b!17899))

(assert (= (and b!17899 res!15743) b!17900))

(assert (=> d!5898 m!24043))

(assert (=> d!5898 m!24025))

(assert (=> b!17709 d!5898))

(push 1)

(assert (not d!5896))

(assert (not b!17869))

(assert (not b!17868))

(assert (not bm!272))

(assert (not b!17890))

(assert (not b!17873))

(assert (not b!17880))

(assert (not b!17866))

(assert (not d!5898))

(assert (not bm!271))

(assert (not b!17892))

(assert (not b!17872))

(assert (not d!5884))

(assert (not b!17891))

(assert (not b!17874))

(check-sat)

(pop 1)

(push 1)

(check-sat)

