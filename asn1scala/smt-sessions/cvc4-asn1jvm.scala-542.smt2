; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!15768 () Bool)

(assert start!15768)

(declare-fun b!79620 () Bool)

(declare-fun res!65903 () Bool)

(declare-fun e!52326 () Bool)

(assert (=> b!79620 (=> (not res!65903) (not e!52326))))

(declare-datatypes ((array!3434 0))(
  ( (array!3435 (arr!2186 (Array (_ BitVec 32) (_ BitVec 8))) (size!1585 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!2732 0))(
  ( (BitStream!2733 (buf!1975 array!3434) (currentByte!3855 (_ BitVec 32)) (currentBit!3850 (_ BitVec 32))) )
))
(declare-fun thiss!1716 () BitStream!2732)

(declare-fun nBits!516 () (_ BitVec 64))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!79620 (= res!65903 (validate_offset_bits!1 ((_ sign_extend 32) (size!1585 (buf!1975 thiss!1716))) ((_ sign_extend 32) (currentByte!3855 thiss!1716)) ((_ sign_extend 32) (currentBit!3850 thiss!1716)) nBits!516))))

(declare-fun res!65905 () Bool)

(assert (=> start!15768 (=> (not res!65905) (not e!52326))))

(assert (=> start!15768 (= res!65905 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) (bvsle nBits!516 #b0000000000000000000000000000001111111111111111111111111111111000)))))

(assert (=> start!15768 e!52326))

(assert (=> start!15768 true))

(declare-fun e!52324 () Bool)

(declare-fun inv!12 (BitStream!2732) Bool)

(assert (=> start!15768 (and (inv!12 thiss!1716) e!52324)))

(declare-fun b!79623 () Bool)

(declare-fun array_inv!1431 (array!3434) Bool)

(assert (=> b!79623 (= e!52324 (array_inv!1431 (buf!1975 thiss!1716)))))

(declare-fun b!79622 () Bool)

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!79622 (= e!52326 (not (invariant!0 (currentBit!3850 thiss!1716) (currentByte!3855 thiss!1716) (size!1585 (buf!1975 thiss!1716)))))))

(declare-fun b!79621 () Bool)

(declare-fun res!65904 () Bool)

(assert (=> b!79621 (=> (not res!65904) (not e!52326))))

(declare-datatypes ((Unit!5225 0))(
  ( (Unit!5226) )
))
(declare-datatypes ((tuple3!236 0))(
  ( (tuple3!237 (_1!3692 Unit!5225) (_2!3692 BitStream!2732) (_3!139 array!3434)) )
))
(declare-fun readBitsLoop!0 (BitStream!2732 (_ BitVec 64) array!3434 (_ BitVec 64) (_ BitVec 64)) tuple3!236)

(assert (=> b!79621 (= res!65904 (= (buf!1975 (_2!3692 (readBitsLoop!0 thiss!1716 nBits!516 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516))) (buf!1975 thiss!1716)))))

(assert (= (and start!15768 res!65905) b!79620))

(assert (= (and b!79620 res!65903) b!79621))

(assert (= (and b!79621 res!65904) b!79622))

(assert (= start!15768 b!79623))

(declare-fun m!125003 () Bool)

(assert (=> start!15768 m!125003))

(declare-fun m!125005 () Bool)

(assert (=> b!79621 m!125005))

(declare-fun m!125007 () Bool)

(assert (=> b!79622 m!125007))

(declare-fun m!125009 () Bool)

(assert (=> b!79623 m!125009))

(declare-fun m!125011 () Bool)

(assert (=> b!79620 m!125011))

(push 1)

(assert (not b!79620))

(assert (not b!79623))

(assert (not b!79622))

(assert (not start!15768))

(assert (not b!79621))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun b!79696 () Bool)

(declare-fun res!65968 () Bool)

(declare-fun e!52362 () Bool)

(assert (=> b!79696 (=> (not res!65968) (not e!52362))))

(declare-fun lt!126661 () tuple3!236)

(assert (=> b!79696 (= res!65968 (invariant!0 (currentBit!3850 (_2!3692 lt!126661)) (currentByte!3855 (_2!3692 lt!126661)) (size!1585 (buf!1975 (_2!3692 lt!126661)))))))

(declare-fun b!79697 () Bool)

(declare-fun res!65964 () Bool)

(assert (=> b!79697 (=> (not res!65964) (not e!52362))))

(declare-fun arrayBitRangesEq!0 (array!3434 array!3434 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!79697 (= res!65964 (arrayBitRangesEq!0 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!139 lt!126661) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!79698 () Bool)

(declare-fun e!52361 () tuple3!236)

(declare-fun lt!126670 () Unit!5225)

(declare-fun lt!126689 () tuple3!236)

(assert (=> b!79698 (= e!52361 (tuple3!237 lt!126670 (_2!3692 lt!126689) (_3!139 lt!126689)))))

(declare-datatypes ((tuple2!7110 0))(
  ( (tuple2!7111 (_1!3695 Bool) (_2!3695 BitStream!2732)) )
))
(declare-fun lt!126685 () tuple2!7110)

(declare-fun readBit!0 (BitStream!2732) tuple2!7110)

(assert (=> b!79698 (= lt!126685 (readBit!0 thiss!1716))))

(declare-fun lt!126681 () (_ BitVec 32))

(assert (=> b!79698 (= lt!126681 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!126683 () (_ BitVec 32))

(assert (=> b!79698 (= lt!126683 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!126662 () array!3434)

(assert (=> b!79698 (= lt!126662 (array!3435 (store (arr!2186 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!126681 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!2186 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!126681)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!126683)))) ((_ sign_extend 24) (ite (_1!3695 lt!126685) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!126683) #b00000000))))) (size!1585 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!126691 () (_ BitVec 64))

(assert (=> b!79698 (= lt!126691 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!126684 () (_ BitVec 64))

(assert (=> b!79698 (= lt!126684 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!126672 () Unit!5225)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!2732 BitStream!2732 (_ BitVec 64) (_ BitVec 64)) Unit!5225)

(assert (=> b!79698 (= lt!126672 (validateOffsetBitsIneqLemma!0 thiss!1716 (_2!3695 lt!126685) lt!126691 lt!126684))))

(assert (=> b!79698 (validate_offset_bits!1 ((_ sign_extend 32) (size!1585 (buf!1975 (_2!3695 lt!126685)))) ((_ sign_extend 32) (currentByte!3855 (_2!3695 lt!126685))) ((_ sign_extend 32) (currentBit!3850 (_2!3695 lt!126685))) (bvsub lt!126691 lt!126684))))

(declare-fun lt!126694 () Unit!5225)

(assert (=> b!79698 (= lt!126694 lt!126672)))

(assert (=> b!79698 (= lt!126689 (readBitsLoop!0 (_2!3695 lt!126685) nBits!516 lt!126662 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) nBits!516))))

(declare-fun res!65967 () Bool)

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!79698 (= res!65967 (= (bvsub (bvadd (bitIndex!0 (size!1585 (buf!1975 thiss!1716)) (currentByte!3855 thiss!1716) (currentBit!3850 thiss!1716)) nBits!516) #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!1585 (buf!1975 (_2!3692 lt!126689))) (currentByte!3855 (_2!3692 lt!126689)) (currentBit!3850 (_2!3692 lt!126689)))))))

(declare-fun e!52359 () Bool)

(assert (=> b!79698 (=> (not res!65967) (not e!52359))))

(assert (=> b!79698 e!52359))

(declare-fun lt!126688 () Unit!5225)

(declare-fun Unit!5231 () Unit!5225)

(assert (=> b!79698 (= lt!126688 Unit!5231)))

(declare-fun lt!126669 () (_ BitVec 32))

(assert (=> b!79698 (= lt!126669 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!126690 () (_ BitVec 32))

(assert (=> b!79698 (= lt!126690 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!126692 () Unit!5225)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!3434 (_ BitVec 64) Bool) Unit!5225)

(assert (=> b!79698 (= lt!126692 (arrayBitRangesUpdatedAtLemma!0 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 (_1!3695 lt!126685)))))

(assert (=> b!79698 (arrayBitRangesEq!0 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) (array!3435 (store (arr!2186 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!126669 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!2186 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!126669)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!126690)))) ((_ sign_extend 24) (ite (_1!3695 lt!126685) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!126690) #b00000000))))) (size!1585 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!126665 () Unit!5225)

(assert (=> b!79698 (= lt!126665 lt!126692)))

(declare-fun lt!126664 () (_ BitVec 64))

(assert (=> b!79698 (= lt!126664 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!126673 () Unit!5225)

(declare-fun arrayBitRangesEqTransitive!0 (array!3434 array!3434 array!3434 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5225)

(assert (=> b!79698 (= lt!126673 (arrayBitRangesEqTransitive!0 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!126662 (_3!139 lt!126689) lt!126664 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(declare-fun call!980 () Bool)

(assert (=> b!79698 call!980))

(declare-fun lt!126686 () Unit!5225)

(assert (=> b!79698 (= lt!126686 lt!126673)))

(declare-fun call!981 () Bool)

(assert (=> b!79698 call!981))

(declare-fun lt!126679 () Unit!5225)

(declare-fun Unit!5233 () Unit!5225)

(assert (=> b!79698 (= lt!126679 Unit!5233)))

(declare-fun lt!126676 () Unit!5225)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!3434 array!3434 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5225)

(assert (=> b!79698 (= lt!126676 (arrayBitRangesEqImpliesEq!0 lt!126662 (_3!139 lt!126689) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(declare-fun bitAt!0 (array!3434 (_ BitVec 64)) Bool)

(assert (=> b!79698 (= (bitAt!0 lt!126662 #b0000000000000000000000000000000000000000000000000000000000000000) (bitAt!0 (_3!139 lt!126689) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!126696 () Unit!5225)

(assert (=> b!79698 (= lt!126696 lt!126676)))

(declare-fun lt!126680 () Unit!5225)

(declare-fun Unit!5234 () Unit!5225)

(assert (=> b!79698 (= lt!126680 Unit!5234)))

(declare-fun lt!126693 () Bool)

(assert (=> b!79698 (= lt!126693 (= (bitAt!0 (_3!139 lt!126689) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!3695 lt!126685)))))

(declare-fun Unit!5235 () Unit!5225)

(assert (=> b!79698 (= lt!126670 Unit!5235)))

(assert (=> b!79698 lt!126693))

(declare-fun d!25102 () Bool)

(assert (=> d!25102 e!52362))

(declare-fun res!65965 () Bool)

(assert (=> d!25102 (=> (not res!65965) (not e!52362))))

(declare-fun lt!126666 () (_ BitVec 64))

(assert (=> d!25102 (= res!65965 (= (bvsub lt!126666 #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!1585 (buf!1975 (_2!3692 lt!126661))) (currentByte!3855 (_2!3692 lt!126661)) (currentBit!3850 (_2!3692 lt!126661)))))))

(assert (=> d!25102 (or (= (bvand lt!126666 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!126666 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!126666 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!126687 () (_ BitVec 64))

(assert (=> d!25102 (= lt!126666 (bvadd lt!126687 nBits!516))))

(assert (=> d!25102 (or (not (= (bvand lt!126687 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!126687 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!126687 nBits!516) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25102 (= lt!126687 (bitIndex!0 (size!1585 (buf!1975 thiss!1716)) (currentByte!3855 thiss!1716) (currentBit!3850 thiss!1716)))))

(assert (=> d!25102 (= lt!126661 e!52361)))

(declare-fun c!5639 () Bool)

(assert (=> d!25102 (= c!5639 (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516))))

(assert (=> d!25102 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) (bvsle nBits!516 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!25102 (= (readBitsLoop!0 thiss!1716 nBits!516 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) lt!126661)))

(declare-fun b!79699 () Bool)

(declare-datatypes ((List!791 0))(
  ( (Nil!788) (Cons!787 (h!906 Bool) (t!1541 List!791)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!2732 array!3434 (_ BitVec 64) (_ BitVec 64)) List!791)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!2732 BitStream!2732 (_ BitVec 64)) List!791)

(assert (=> b!79699 (= e!52362 (= (byteArrayBitContentToList!0 (_2!3692 lt!126661) (_3!139 lt!126661) #b0000000000000000000000000000000000000000000000000000000000000000 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000)) (bitStreamReadBitsIntoList!0 (_2!3692 lt!126661) thiss!1716 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!79699 (or (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!79699 (or (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!79700 () Bool)

(declare-fun e!52360 () Bool)

(declare-datatypes ((tuple2!7116 0))(
  ( (tuple2!7117 (_1!3698 BitStream!2732) (_2!3698 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!2732) tuple2!7116)

(assert (=> b!79700 (= e!52360 (= (bitAt!0 (_3!139 lt!126661) #b0000000000000000000000000000000000000000000000000000000000000000) (_2!3698 (readBitPure!0 thiss!1716))))))

(declare-fun lt!126695 () Unit!5225)

(declare-fun b!79701 () Bool)

(assert (=> b!79701 (= e!52361 (tuple3!237 lt!126695 thiss!1716 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun lt!126677 () Unit!5225)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!3434) Unit!5225)

(assert (=> b!79701 (= lt!126677 (arrayBitRangesEqReflexiveLemma!0 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(assert (=> b!79701 call!980))

(declare-fun lt!126671 () Unit!5225)

(assert (=> b!79701 (= lt!126671 lt!126677)))

(declare-fun lt!126678 () array!3434)

(assert (=> b!79701 (= lt!126678 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!126668 () array!3434)

(assert (=> b!79701 (= lt!126668 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!126675 () (_ BitVec 64))

(assert (=> b!79701 (= lt!126675 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!126682 () (_ BitVec 64))

(assert (=> b!79701 (= lt!126682 ((_ sign_extend 32) (size!1585 (array!3435 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!126674 () (_ BitVec 64))

(assert (=> b!79701 (= lt!126674 (bvmul lt!126682 #b0000000000000000000000000000000000000000000000000000000000001000))))

(declare-fun lt!126663 () (_ BitVec 64))

(assert (=> b!79701 (= lt!126663 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!126667 () (_ BitVec 64))

(assert (=> b!79701 (= lt!126667 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!3434 array!3434 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5225)

(assert (=> b!79701 (= lt!126695 (arrayBitRangesEqSlicedLemma!0 lt!126678 lt!126668 lt!126675 lt!126674 lt!126663 lt!126667))))

(assert (=> b!79701 call!981))

(declare-fun bm!977 () Bool)

