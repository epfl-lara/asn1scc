; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!51098 () Bool)

(assert start!51098)

(declare-fun res!199724 () Bool)

(declare-fun e!165065 () Bool)

(assert (=> start!51098 (=> (not res!199724) (not e!165065))))

(declare-fun v!315 () (_ BitVec 64))

(assert (=> start!51098 (= res!199724 (bvslt v!315 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> start!51098 e!165065))

(assert (=> start!51098 true))

(declare-fun b!238927 () Bool)

(declare-fun e!165064 () Bool)

(assert (=> b!238927 (= e!165065 e!165064)))

(declare-fun res!199725 () Bool)

(assert (=> b!238927 (=> (not res!199725) (not e!165064))))

(declare-fun i!888 () (_ BitVec 32))

(declare-fun lt!373761 () (_ BitVec 32))

(assert (=> b!238927 (= res!199725 (and (bvsge i!888 lt!373761) (bvsle i!888 #b00000000000000000000000001000000) (bvslt i!888 #b00000000000000000000000001000000) (bvslt (bvadd #b00000000000000000000000000000001 i!888) #b00000000000000000000000001000000)))))

(declare-fun lt!373760 () (_ BitVec 32))

(assert (=> b!238927 (= lt!373761 (bvsub lt!373760 #b00000000000000000000000000000001))))

(assert (=> b!238927 (= lt!373760 (bvmul #b00000000000000000000000000001000 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!315 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!315 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!315 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!315 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!315 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000)))))))))))

(declare-fun b!238928 () Bool)

(declare-fun lt!373758 () (_ BitVec 32))

(assert (=> b!238928 (= e!165064 (and (not (= lt!373758 #b00000000000000000000000000000000)) (not (= lt!373758 (bvand lt!373761 #b10000000000000000000000000000000)))))))

(assert (=> b!238928 (= lt!373758 (bvand lt!373760 #b10000000000000000000000000000000))))

(declare-datatypes ((Unit!17413 0))(
  ( (Unit!17414) )
))
(declare-datatypes ((tuple3!1530 0))(
  ( (tuple3!1531 (_1!11014 Unit!17413) (_2!11014 (_ BitVec 32)) (_3!907 Bool)) )
))
(declare-fun lt!373759 () tuple3!1530)

(declare-fun allOnes!72 () Bool)

(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1530)

(assert (=> b!238928 (= lt!373759 (GetBytesNeededForNegativeNumberWhile!0 v!315 (bvadd #b00000000000000000000000000000001 i!888) (and allOnes!72 (not (= (bvand v!315 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) i!888))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and start!51098 res!199724) b!238927))

(assert (= (and b!238927 res!199725) b!238928))

(declare-fun m!360975 () Bool)

(assert (=> b!238928 m!360975))

(push 1)

(assert (not b!238928))

(check-sat)

(pop 1)

(push 1)

(check-sat)

