; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!37484 () Bool)

(assert start!37484)

(declare-fun res!141076 () Bool)

(declare-fun e!118446 () Bool)

(assert (=> start!37484 (=> (not res!141076) (not e!118446))))

(declare-fun uintSizeInBytes!5 () (_ BitVec 32))

(declare-fun v!147 () (_ BitVec 64))

(declare-fun i!474 () (_ BitVec 32))

(declare-datatypes ((Unit!11939 0))(
  ( (Unit!11940) )
))
(declare-datatypes ((ControlFlow!78 0))(
  ( (Return!77 (value!6915 (_ BitVec 64))) (Proceed!77 (value!6916 Unit!11939)) )
))
(declare-fun Unit!11941 () Unit!11939)

(assert (=> start!37484 (= res!141076 (and (bvsge uintSizeInBytes!5 #b00000000000000000000000000000001) (bvsle uintSizeInBytes!5 #b00000000000000000000000000001001) (not (is-Return!77 (ite (bvsle (bvand v!147 (bvshl #b0000000000000000000000000000000000000000000000000000000010000000 ((_ sign_extend 32) (bvmul #b00000000000000000000000000001000 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001))))) #b0000000000000000000000000000000000000000000000000000000000000000) (Return!77 v!147) (Proceed!77 Unit!11941)))) (bvsle i!474 #b00000000000000000000000000000111) (bvsge i!474 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)) (bvsge i!474 uintSizeInBytes!5) (bvsge (bvsub i!474 #b00000000000000000000000000000001) uintSizeInBytes!5)))))

(assert (=> start!37484 e!118446))

(assert (=> start!37484 true))

(declare-fun b!169769 () Bool)

(declare-fun res!141077 () Bool)

(assert (=> b!169769 (=> (not res!141077) (not e!118446))))

(declare-fun vv!30 () (_ BitVec 64))

(declare-datatypes ((tuple3!988 0))(
  ( (tuple3!989 (_1!7950 Unit!11939) (_2!7950 (_ BitVec 32)) (_3!620 (_ BitVec 64))) )
))
(declare-fun uint2intWhile!0 ((_ BitVec 32) (_ BitVec 64) (_ BitVec 32) (_ BitVec 64)) tuple3!988)

(assert (=> b!169769 (= res!141077 (bvsle (_2!7950 (uint2intWhile!0 uintSizeInBytes!5 v!147 (bvsub i!474 #b00000000000000000000000000000001) (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474)))) #b00000000000000000000000000000111))))

(declare-fun b!169770 () Bool)

(assert (=> b!169770 (= e!118446 (and (not (= (bvand uintSizeInBytes!5 #b10000000000000000000000000000000) #b00000000000000000000000000000000)) (not (= (bvand uintSizeInBytes!5 #b10000000000000000000000000000000) (bvand (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))))

(assert (= (and start!37484 res!141076) b!169769))

(assert (= (and b!169769 res!141077) b!169770))

(declare-fun m!269549 () Bool)

(assert (=> b!169769 m!269549))

(declare-fun m!269551 () Bool)

(assert (=> b!169769 m!269551))

(push 1)

(assert (not b!169769))

(check-sat)

(pop 1)

(push 1)

(check-sat)

