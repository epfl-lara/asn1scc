; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!37482 () Bool)

(assert start!37482)

(declare-fun res!141070 () Bool)

(declare-fun e!118443 () Bool)

(assert (=> start!37482 (=> (not res!141070) (not e!118443))))

(declare-fun uintSizeInBytes!5 () (_ BitVec 32))

(declare-fun v!147 () (_ BitVec 64))

(declare-fun i!474 () (_ BitVec 32))

(get-info :version)

(declare-datatypes ((Unit!11936 0))(
  ( (Unit!11937) )
))
(declare-datatypes ((ControlFlow!77 0))(
  ( (Return!76 (value!6913 (_ BitVec 64))) (Proceed!76 (value!6914 Unit!11936)) )
))
(declare-fun Unit!11938 () Unit!11936)

(assert (=> start!37482 (= res!141070 (and (bvsge uintSizeInBytes!5 #b00000000000000000000000000000001) (bvsle uintSizeInBytes!5 #b00000000000000000000000000001001) (not ((_ is Return!76) (ite (bvsle (bvand v!147 (bvshl #b0000000000000000000000000000000000000000000000000000000010000000 ((_ sign_extend 32) (bvmul #b00000000000000000000000000001000 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001))))) #b0000000000000000000000000000000000000000000000000000000000000000) (Return!76 v!147) (Proceed!76 Unit!11938)))) (bvsle i!474 #b00000000000000000000000000000111) (bvsge i!474 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)) (bvsge i!474 uintSizeInBytes!5) (bvsge (bvsub i!474 #b00000000000000000000000000000001) uintSizeInBytes!5)))))

(assert (=> start!37482 e!118443))

(assert (=> start!37482 true))

(declare-fun b!169763 () Bool)

(declare-fun res!141071 () Bool)

(assert (=> b!169763 (=> (not res!141071) (not e!118443))))

(declare-fun vv!30 () (_ BitVec 64))

(declare-datatypes ((tuple3!986 0))(
  ( (tuple3!987 (_1!7949 Unit!11936) (_2!7949 (_ BitVec 32)) (_3!619 (_ BitVec 64))) )
))
(declare-fun uint2intWhile!0 ((_ BitVec 32) (_ BitVec 64) (_ BitVec 32) (_ BitVec 64)) tuple3!986)

(assert (=> b!169763 (= res!141071 (bvsle (_2!7949 (uint2intWhile!0 uintSizeInBytes!5 v!147 (bvsub i!474 #b00000000000000000000000000000001) (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474)))) #b00000000000000000000000000000111))))

(declare-fun b!169764 () Bool)

(assert (=> b!169764 (= e!118443 (and (not (= (bvand uintSizeInBytes!5 #b10000000000000000000000000000000) #b00000000000000000000000000000000)) (not (= (bvand uintSizeInBytes!5 #b10000000000000000000000000000000) (bvand (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))))

(assert (= (and start!37482 res!141070) b!169763))

(assert (= (and b!169763 res!141071) b!169764))

(declare-fun m!269545 () Bool)

(assert (=> b!169763 m!269545))

(declare-fun m!269547 () Bool)

(assert (=> b!169763 m!269547))

(check-sat (not b!169763))
(check-sat)
