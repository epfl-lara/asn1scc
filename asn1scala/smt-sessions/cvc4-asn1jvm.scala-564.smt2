; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!16044 () Bool)

(assert start!16044)

(declare-fun res!66981 () Bool)

(declare-fun e!53238 () Bool)

(assert (=> start!16044 (=> (not res!66981) (not e!53238))))

(declare-fun nBits!516 () (_ BitVec 64))

(assert (=> start!16044 (= res!66981 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516) (bvsle nBits!516 #b0000000000000000000000000000001111111111111111111111111111111000)))))

(assert (=> start!16044 e!53238))

(assert (=> start!16044 true))

(declare-datatypes ((array!3581 0))(
  ( (array!3582 (arr!2267 (Array (_ BitVec 32) (_ BitVec 8))) (size!1651 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!2864 0))(
  ( (BitStream!2865 (buf!2041 array!3581) (currentByte!3948 (_ BitVec 32)) (currentBit!3943 (_ BitVec 32))) )
))
(declare-fun thiss!1716 () BitStream!2864)

(declare-fun e!53237 () Bool)

(declare-fun inv!12 (BitStream!2864) Bool)

(assert (=> start!16044 (and (inv!12 thiss!1716) e!53237)))

(declare-fun b!80986 () Bool)

(declare-fun res!66982 () Bool)

(assert (=> b!80986 (=> (not res!66982) (not e!53238))))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!80986 (= res!66982 (validate_offset_bits!1 ((_ sign_extend 32) (size!1651 (buf!2041 thiss!1716))) ((_ sign_extend 32) (currentByte!3948 thiss!1716)) ((_ sign_extend 32) (currentBit!3943 thiss!1716)) nBits!516))))

(declare-fun b!80987 () Bool)

(declare-datatypes ((Unit!5384 0))(
  ( (Unit!5385) )
))
(declare-datatypes ((tuple3!338 0))(
  ( (tuple3!339 (_1!3771 Unit!5384) (_2!3771 BitStream!2864) (_3!190 array!3581)) )
))
(declare-fun lt!128424 () tuple3!338)

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!80987 (= e!53238 (not (invariant!0 (currentBit!3943 (_2!3771 lt!128424)) (currentByte!3948 (_2!3771 lt!128424)) (size!1651 (buf!2041 (_2!3771 lt!128424))))))))

(declare-fun readBitsLoop!0 (BitStream!2864 (_ BitVec 64) array!3581 (_ BitVec 64) (_ BitVec 64)) tuple3!338)

(assert (=> b!80987 (= lt!128424 (readBitsLoop!0 thiss!1716 nBits!516 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!516))))

(declare-fun b!80988 () Bool)

(declare-fun array_inv!1497 (array!3581) Bool)

(assert (=> b!80988 (= e!53237 (array_inv!1497 (buf!2041 thiss!1716)))))

(assert (= (and start!16044 res!66981) b!80986))

(assert (= (and b!80986 res!66982) b!80987))

(assert (= start!16044 b!80988))

(declare-fun m!126671 () Bool)

(assert (=> start!16044 m!126671))

(declare-fun m!126673 () Bool)

(assert (=> b!80986 m!126673))

(declare-fun m!126675 () Bool)

(assert (=> b!80987 m!126675))

(declare-fun m!126677 () Bool)

(assert (=> b!80987 m!126677))

(declare-fun m!126679 () Bool)

(assert (=> b!80988 m!126679))

(push 1)

(assert (not b!80986))

(assert (not b!80987))

(assert (not start!16044))

(assert (not b!80988))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!25308 () Bool)

(declare-fun remainingBits!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))

(assert (=> d!25308 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!1651 (buf!2041 thiss!1716))) ((_ sign_extend 32) (currentByte!3948 thiss!1716)) ((_ sign_extend 32) (currentBit!3943 thiss!1716)) nBits!516) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!1651 (buf!2041 thiss!1716))) ((_ sign_extend 32) (currentByte!3948 thiss!1716)) ((_ sign_extend 32) (currentBit!3943 thiss!1716))) nBits!516))))

(declare-fun bs!6195 () Bool)

(assert (= bs!6195 d!25308))

(declare-fun m!126687 () Bool)

(assert (=> bs!6195 m!126687))

(assert (=> b!80986 d!25308))

(declare-fun d!25310 () Bool)

(assert (=> d!25310 (= (invariant!0 (currentBit!3943 (_2!3771 lt!128424)) (currentByte!3948 (_2!3771 lt!128424)) (size!1651 (buf!2041 (_2!3771 lt!128424)))) (and (bvsge (currentBit!3943 (_2!3771 lt!128424)) #b00000000000000000000000000000000) (bvslt (currentBit!3943 (_2!3771 lt!128424)) #b00000000000000000000000000001000) (bvsge (currentByte!3948 (_2!3771 lt!128424)) #b00000000000000000000000000000000) (or (bvslt (currentByte!3948 (_2!3771 lt!128424)) (size!1651 (buf!2041 (_2!3771 lt!128424)))) (and (= (currentBit!3943 (_2!3771 lt!128424)) #b00000000000000000000000000000000) (= (currentByte!3948 (_2!3771 lt!128424)) (size!1651 (buf!2041 (_2!3771 lt!128424))))))))))

(assert (=> b!80987 d!25310))

(declare-fun lt!128737 () (_ BitVec 64))

(declare-fun call!1070 () Bool)

(declare-fun lt!128718 () (_ BitVec 64))

(declare-fun lt!128724 () array!3581)

(declare-fun lt!128714 () array!3581)

(declare-fun lt!128731 () tuple3!338)

(declare-fun c!5684 () Bool)

(declare-fun bm!1067 () Bool)

(declare-fun lt!128747 () (_ BitVec 64))

(declare-fun arrayBitRangesEq!0 (array!3581 array!3581 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> bm!1067 (= call!1070 (arrayBitRangesEq!0 (ite c!5684 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!128714) (ite c!5684 (_3!190 lt!128731) lt!128724) (ite c!5684 lt!128747 lt!128737) (ite c!5684 #b0000000000000000000000000000000000000000000000000000000000000000 lt!128718)))))

(declare-fun b!81061 () Bool)

(declare-fun e!53272 () tuple3!338)

(declare-fun lt!128748 () Unit!5384)

(assert (=> b!81061 (= e!53272 (tuple3!339 lt!128748 (_2!3771 lt!128731) (_3!190 lt!128731)))))

(declare-datatypes ((tuple2!7168 0))(
  ( (tuple2!7169 (_1!3775 Bool) (_2!3775 BitStream!2864)) )
))
(declare-fun lt!128739 () tuple2!7168)

(declare-fun readBit!0 (BitStream!2864) tuple2!7168)

(assert (=> b!81061 (= lt!128739 (readBit!0 thiss!1716))))

(declare-fun lt!128735 () (_ BitVec 32))

(assert (=> b!81061 (= lt!128735 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!128715 () (_ BitVec 32))

(assert (=> b!81061 (= lt!128715 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!128732 () array!3581)

(assert (=> b!81061 (= lt!128732 (array!3582 (store (arr!2267 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!128735 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!2267 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!128735)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!128715)))) ((_ sign_extend 24) (ite (_1!3775 lt!128739) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!128715) #b00000000))))) (size!1651 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!128726 () (_ BitVec 64))

(assert (=> b!81061 (= lt!128726 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!128725 () (_ BitVec 64))

(assert (=> b!81061 (= lt!128725 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!128746 () Unit!5384)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!2864 BitStream!2864 (_ BitVec 64) (_ BitVec 64)) Unit!5384)

(assert (=> b!81061 (= lt!128746 (validateOffsetBitsIneqLemma!0 thiss!1716 (_2!3775 lt!128739) lt!128726 lt!128725))))

(assert (=> b!81061 (validate_offset_bits!1 ((_ sign_extend 32) (size!1651 (buf!2041 (_2!3775 lt!128739)))) ((_ sign_extend 32) (currentByte!3948 (_2!3775 lt!128739))) ((_ sign_extend 32) (currentBit!3943 (_2!3775 lt!128739))) (bvsub lt!128726 lt!128725))))

(declare-fun lt!128733 () Unit!5384)

(assert (=> b!81061 (= lt!128733 lt!128746)))

(assert (=> b!81061 (= lt!128731 (readBitsLoop!0 (_2!3775 lt!128739) nBits!516 lt!128732 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) nBits!516))))

(declare-fun res!67043 () Bool)

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!81061 (= res!67043 (= (bvsub (bvadd (bitIndex!0 (size!1651 (buf!2041 thiss!1716)) (currentByte!3948 thiss!1716) (currentBit!3943 thiss!1716)) nBits!516) #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!1651 (buf!2041 (_2!3771 lt!128731))) (currentByte!3948 (_2!3771 lt!128731)) (currentBit!3943 (_2!3771 lt!128731)))))))

(declare-fun e!53271 () Bool)

(assert (=> b!81061 (=> (not res!67043) (not e!53271))))

(assert (=> b!81061 e!53271))

(declare-fun lt!128728 () Unit!5384)

(declare-fun Unit!5394 () Unit!5384)

(assert (=> b!81061 (= lt!128728 Unit!5394)))

(declare-fun lt!128716 () (_ BitVec 32))

(assert (=> b!81061 (= lt!128716 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!128722 () (_ BitVec 32))

(assert (=> b!81061 (= lt!128722 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!128742 () Unit!5384)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!3581 (_ BitVec 64) Bool) Unit!5384)

(assert (=> b!81061 (= lt!128742 (arrayBitRangesUpdatedAtLemma!0 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 (_1!3775 lt!128739)))))

(assert (=> b!81061 (arrayBitRangesEq!0 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) (array!3582 (store (arr!2267 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!128716 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!2267 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!128716)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!128722)))) ((_ sign_extend 24) (ite (_1!3775 lt!128739) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!128722) #b00000000))))) (size!1651 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!128720 () Unit!5384)

(assert (=> b!81061 (= lt!128720 lt!128742)))

(assert (=> b!81061 (= lt!128747 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!128734 () Unit!5384)

(declare-fun arrayBitRangesEqTransitive!0 (array!3581 array!3581 array!3581 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5384)

(assert (=> b!81061 (= lt!128734 (arrayBitRangesEqTransitive!0 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!128732 (_3!190 lt!128731) lt!128747 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!81061 call!1070))

(declare-fun lt!128719 () Unit!5384)

(assert (=> b!81061 (= lt!128719 lt!128734)))

(declare-fun call!1071 () Bool)

(assert (=> b!81061 call!1071))

(declare-fun lt!128727 () Unit!5384)

(declare-fun Unit!5395 () Unit!5384)

(assert (=> b!81061 (= lt!128727 Unit!5395)))

(declare-fun lt!128736 () Unit!5384)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!3581 array!3581 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5384)

(assert (=> b!81061 (= lt!128736 (arrayBitRangesEqImpliesEq!0 lt!128732 (_3!190 lt!128731) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(declare-fun bitAt!0 (array!3581 (_ BitVec 64)) Bool)

(assert (=> b!81061 (= (bitAt!0 lt!128732 #b0000000000000000000000000000000000000000000000000000000000000000) (bitAt!0 (_3!190 lt!128731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!128743 () Unit!5384)

(assert (=> b!81061 (= lt!128743 lt!128736)))

(declare-fun lt!128740 () Unit!5384)

(declare-fun Unit!5396 () Unit!5384)

(assert (=> b!81061 (= lt!128740 Unit!5396)))

(declare-fun lt!128721 () Bool)

(assert (=> b!81061 (= lt!128721 (= (bitAt!0 (_3!190 lt!128731) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!3775 lt!128739)))))

(declare-fun Unit!5397 () Unit!5384)

(assert (=> b!81061 (= lt!128748 Unit!5397)))

(assert (=> b!81061 lt!128721))

(declare-fun b!81062 () Bool)

(declare-fun res!67039 () Bool)

(declare-fun e!53273 () Bool)

(assert (=> b!81062 (=> (not res!67039) (not e!53273))))

(declare-fun lt!128723 () tuple3!338)

(assert (=> b!81062 (= res!67039 (and (= (buf!2041 thiss!1716) (buf!2041 (_2!3771 lt!128723))) (= (size!1651 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!1651 (_3!190 lt!128723)))))))

(declare-fun b!81064 () Bool)

(declare-fun e!53274 () Bool)

(declare-datatypes ((tuple2!7172 0))(
  ( (tuple2!7173 (_1!3777 BitStream!2864) (_2!3777 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!2864) tuple2!7172)

(assert (=> b!81064 (= e!53274 (= (bitAt!0 (_3!190 lt!128723) #b0000000000000000000000000000000000000000000000000000000000000000) (_2!3777 (readBitPure!0 thiss!1716))))))

(declare-fun b!81065 () Bool)

(declare-fun lt!128741 () Unit!5384)

(assert (=> b!81065 (= e!53272 (tuple3!339 lt!128741 thiss!1716 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun lt!128713 () Unit!5384)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!3581) Unit!5384)

(assert (=> b!81065 (= lt!128713 (arrayBitRangesEqReflexiveLemma!0 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(assert (=> b!81065 call!1071))

(declare-fun lt!128730 () Unit!5384)

(assert (=> b!81065 (= lt!128730 lt!128713)))

(assert (=> b!81065 (= lt!128714 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(assert (=> b!81065 (= lt!128724 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!128744 () (_ BitVec 64))

(assert (=> b!81065 (= lt!128744 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!128738 () (_ BitVec 64))

(assert (=> b!81065 (= lt!128738 ((_ sign_extend 32) (size!1651 (array!3582 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000111 nBits!516) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!128729 () (_ BitVec 64))

(assert (=> b!81065 (= lt!128729 (bvmul lt!128738 #b0000000000000000000000000000000000000000000000000000000000001000))))

(assert (=> b!81065 (= lt!128737 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!81065 (= lt!128718 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!3581 array!3581 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!5384)

(assert (=> b!81065 (= lt!128741 (arrayBitRangesEqSlicedLemma!0 lt!128714 lt!128724 lt!128744 lt!128729 lt!128737 lt!128718))))

(assert (=> b!81065 call!1070))

(declare-fun b!81066 () Bool)

(declare-datatypes ((List!805 0))(
  ( (Nil!802) (Cons!801 (h!920 Bool) (t!1555 List!805)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!2864 array!3581 (_ BitVec 64) (_ BitVec 64)) List!805)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!2864 BitStream!2864 (_ BitVec 64)) List!805)

(assert (=> b!81066 (= e!53273 (= (byteArrayBitContentToList!0 (_2!3771 lt!128723) (_3!190 lt!128723) #b0000000000000000000000000000000000000000000000000000000000000000 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000)) (bitStreamReadBitsIntoList!0 (_2!3771 lt!128723) thiss!1716 (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!81066 (or (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!81066 (or (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!516 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!516 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

