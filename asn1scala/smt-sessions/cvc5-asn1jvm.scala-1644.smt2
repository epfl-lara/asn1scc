; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!46036 () Bool)

(assert start!46036)

(declare-fun res!186792 () Bool)

(declare-fun e!151019 () Bool)

(assert (=> start!46036 (=> (not res!186792) (not e!151019))))

(declare-fun v!298 () (_ BitVec 64))

(assert (=> start!46036 (= res!186792 (and (bvslt v!298 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111111111110000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111100000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111110000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111100000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111110000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!46036 e!151019))

(assert (=> start!46036 true))

(declare-fun b!222384 () Bool)

(declare-datatypes ((Unit!16024 0))(
  ( (Unit!16025) )
))
(declare-datatypes ((tuple3!1128 0))(
  ( (tuple3!1129 (_1!10199 Unit!16024) (_2!10199 (_ BitVec 32)) (_3!706 Bool)) )
))
(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1128)

(assert (=> b!222384 (= e!151019 (not (_3!706 (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000111111 true))))))

(assert (= (and start!46036 res!186792) b!222384))

(declare-fun m!340629 () Bool)

(assert (=> b!222384 m!340629))

(push 1)

(assert (not b!222384))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!75207 () Bool)

(declare-fun e!151035 () Bool)

(assert (=> d!75207 e!151035))

(declare-fun res!186803 () Bool)

(assert (=> d!75207 (=> (not res!186803) (not e!151035))))

(declare-fun lt!351343 () tuple3!1128)

(declare-fun lt!351341 () (_ BitVec 32))

(assert (=> d!75207 (= res!186803 (bvsge (_2!10199 lt!351343) (bvsub lt!351341 #b00000000000000000000000000000001)))))

(assert (=> d!75207 (or (= (bvand lt!351341 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!351341 #b10000000000000000000000000000000) (bvand (bvsub lt!351341 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!351340 () (_ BitVec 32))

(declare-fun lt!351342 () (_ BitVec 32))

(assert (=> d!75207 (= lt!351341 (bvmul lt!351340 lt!351342))))

(assert (=> d!75207 (or (= lt!351340 #b00000000000000000000000000000000) (= lt!351342 (bvsdiv (bvmul lt!351340 lt!351342) lt!351340)))))

(assert (=> d!75207 (= lt!351342 #b00000000000000000000000000001000)))

(declare-fun e!151034 () tuple3!1128)

(assert (=> d!75207 (= lt!351343 e!151034)))

(declare-fun c!11060 () Bool)

(declare-fun lt!351344 () (_ BitVec 32))

(assert (=> d!75207 (= c!11060 (bvslt lt!351344 #b00000000000000000000000001000000))))

(assert (=> d!75207 (= lt!351344 (bvadd #b00000000000000000000000000111111 #b00000000000000000000000000000001))))

(declare-fun lt!351339 () Bool)

(assert (=> d!75207 (= lt!351339 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) #b00000000000000000000000000111111))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!75207 (and (bvsge #b00000000000000000000000000111111 (bvsub (bvmul lt!351340 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle #b00000000000000000000000000111111 #b00000000000000000000000001000000) (bvslt #b00000000000000000000000000111111 #b00000000000000000000000001000000))))

(assert (=> d!75207 (= lt!351340 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!75207 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000111111 true) lt!351343)))

(declare-fun b!222403 () Bool)

(assert (=> b!222403 (= e!151034 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!351344 lt!351339))))

(declare-fun b!222404 () Bool)

(declare-fun Unit!16030 () Unit!16024)

(assert (=> b!222404 (= e!151034 (tuple3!1129 Unit!16030 lt!351344 lt!351339))))

(declare-fun b!222405 () Bool)

(assert (=> b!222405 (= e!151035 (and (bvsle (_2!10199 lt!351343) #b00000000000000000000000001000000) (bvsge (_2!10199 lt!351343) #b00000000000000000000000001000000)))))

(assert (= (and d!75207 c!11060) b!222403))

(assert (= (and d!75207 (not c!11060)) b!222404))

(assert (= (and d!75207 res!186803) b!222405))

(declare-fun m!340635 () Bool)

(assert (=> b!222403 m!340635))

(assert (=> b!222384 d!75207))

(push 1)

(assert (not b!222403))

(check-sat)

