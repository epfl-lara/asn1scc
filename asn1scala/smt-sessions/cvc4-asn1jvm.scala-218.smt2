; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!4454 () Bool)

(assert start!4454)

(declare-fun b!18196 () Bool)

(declare-fun e!11664 () Bool)

(declare-datatypes ((array!1215 0))(
  ( (array!1216 (arr!948 (Array (_ BitVec 32) (_ BitVec 8))) (size!513 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!896 0))(
  ( (BitStream!897 (buf!831 array!1215) (currentByte!2070 (_ BitVec 32)) (currentBit!2065 (_ BitVec 32))) )
))
(declare-datatypes ((tuple2!2106 0))(
  ( (tuple2!2107 (_1!1129 array!1215) (_2!1129 BitStream!896)) )
))
(declare-fun lt!26167 () tuple2!2106)

(declare-fun thiss!1917 () BitStream!896)

(declare-fun inv!12 (BitStream!896) Bool)

(assert (=> b!18196 (= e!11664 (inv!12 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))))))

(declare-fun b!18197 () Bool)

(declare-fun e!11665 () Bool)

(declare-fun array_inv!483 (array!1215) Bool)

(assert (=> b!18197 (= e!11665 (array_inv!483 (buf!831 thiss!1917)))))

(declare-fun res!16004 () Bool)

(declare-fun e!11666 () Bool)

(assert (=> start!4454 (=> (not res!16004) (not e!11666))))

(declare-fun nBits!604 () (_ BitVec 64))

(assert (=> start!4454 (= res!16004 (bvsge nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> start!4454 e!11666))

(assert (=> start!4454 true))

(assert (=> start!4454 (and (inv!12 thiss!1917) e!11665)))

(declare-fun b!18194 () Bool)

(declare-fun res!16002 () Bool)

(assert (=> b!18194 (=> (not res!16002) (not e!11666))))

(declare-fun validate_offset_bits!1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!18194 (= res!16002 (validate_offset_bits!1 ((_ sign_extend 32) (size!513 (buf!831 thiss!1917))) ((_ sign_extend 32) (currentByte!2070 thiss!1917)) ((_ sign_extend 32) (currentBit!2065 thiss!1917)) nBits!604))))

(declare-fun b!18195 () Bool)

(assert (=> b!18195 (= e!11666 (not e!11664))))

(declare-fun res!16003 () Bool)

(assert (=> b!18195 (=> res!16003 e!11664)))

(assert (=> b!18195 (= res!16003 (= (currentByte!2070 thiss!1917) (size!513 (buf!831 (_2!1129 lt!26167)))))))

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> b!18195 (invariant!0 (currentBit!2065 (_2!1129 lt!26167)) (currentByte!2070 (_2!1129 lt!26167)) (size!513 (buf!831 (_2!1129 lt!26167))))))

(declare-fun readBits!0 (BitStream!896 (_ BitVec 64)) tuple2!2106)

(assert (=> b!18195 (= lt!26167 (readBits!0 thiss!1917 nBits!604))))

(assert (= (and start!4454 res!16004) b!18194))

(assert (= (and b!18194 res!16002) b!18195))

(assert (= (and b!18195 (not res!16003)) b!18196))

(assert (= start!4454 b!18197))

(declare-fun m!24535 () Bool)

(assert (=> b!18196 m!24535))

(declare-fun m!24537 () Bool)

(assert (=> start!4454 m!24537))

(declare-fun m!24539 () Bool)

(assert (=> b!18194 m!24539))

(declare-fun m!24541 () Bool)

(assert (=> b!18197 m!24541))

(declare-fun m!24543 () Bool)

(assert (=> b!18195 m!24543))

(declare-fun m!24545 () Bool)

(assert (=> b!18195 m!24545))

(push 1)

(assert (not b!18195))

(assert (not b!18196))

(assert (not start!4454))

(assert (not b!18194))

(assert (not b!18197))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!5996 () Bool)

(assert (=> d!5996 (= (invariant!0 (currentBit!2065 (_2!1129 lt!26167)) (currentByte!2070 (_2!1129 lt!26167)) (size!513 (buf!831 (_2!1129 lt!26167)))) (and (bvsge (currentBit!2065 (_2!1129 lt!26167)) #b00000000000000000000000000000000) (bvslt (currentBit!2065 (_2!1129 lt!26167)) #b00000000000000000000000000001000) (bvsge (currentByte!2070 (_2!1129 lt!26167)) #b00000000000000000000000000000000) (or (bvslt (currentByte!2070 (_2!1129 lt!26167)) (size!513 (buf!831 (_2!1129 lt!26167)))) (and (= (currentBit!2065 (_2!1129 lt!26167)) #b00000000000000000000000000000000) (= (currentByte!2070 (_2!1129 lt!26167)) (size!513 (buf!831 (_2!1129 lt!26167))))))))))

(assert (=> b!18195 d!5996))

(declare-fun b!18238 () Bool)

(declare-fun res!16049 () Bool)

(declare-fun e!11676 () Bool)

(assert (=> b!18238 (=> (not res!16049) (not e!11676))))

(declare-fun lt!26244 () tuple2!2106)

(assert (=> b!18238 (= res!16049 (invariant!0 (currentBit!2065 (_2!1129 lt!26244)) (currentByte!2070 (_2!1129 lt!26244)) (size!513 (buf!831 (_2!1129 lt!26244)))))))

(declare-fun b!18239 () Bool)

(declare-datatypes ((List!205 0))(
  ( (Nil!202) (Cons!201 (h!320 Bool) (t!955 List!205)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!896 array!1215 (_ BitVec 64) (_ BitVec 64)) List!205)

(declare-fun bitStreamReadBitsIntoList!0 (BitStream!896 BitStream!896 (_ BitVec 64)) List!205)

(assert (=> b!18239 (= e!11676 (= (byteArrayBitContentToList!0 (_2!1129 lt!26244) (_1!1129 lt!26244) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bitStreamReadBitsIntoList!0 (_2!1129 lt!26244) thiss!1917 nBits!604)))))

(declare-fun d!6000 () Bool)

(assert (=> d!6000 e!11676))

(declare-fun res!16048 () Bool)

(assert (=> d!6000 (=> (not res!16048) (not e!11676))))

(assert (=> d!6000 (= res!16048 (= (buf!831 (_2!1129 lt!26244)) (buf!831 thiss!1917)))))

(declare-datatypes ((Unit!1616 0))(
  ( (Unit!1617) )
))
(declare-datatypes ((tuple3!142 0))(
  ( (tuple3!143 (_1!1131 Unit!1616) (_2!1131 BitStream!896) (_3!77 array!1215)) )
))
(declare-fun lt!26242 () tuple3!142)

(assert (=> d!6000 (= lt!26244 (tuple2!2107 (_3!77 lt!26242) (_2!1131 lt!26242)))))

(declare-fun readBitsLoop!0 (BitStream!896 (_ BitVec 64) array!1215 (_ BitVec 64) (_ BitVec 64)) tuple3!142)

(assert (=> d!6000 (= lt!26242 (readBitsLoop!0 thiss!1917 nBits!604 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604))))

(assert (=> d!6000 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bvsle nBits!604 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!6000 (= (readBits!0 thiss!1917 nBits!604) lt!26244)))

(declare-fun b!18240 () Bool)

(declare-fun res!16045 () Bool)

(assert (=> b!18240 (=> (not res!16045) (not e!11676))))

(declare-fun lt!26247 () (_ BitVec 64))

(declare-fun bitIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 64))

(assert (=> b!18240 (= res!16045 (= (bvadd lt!26247 nBits!604) (bitIndex!0 (size!513 (buf!831 (_2!1129 lt!26244))) (currentByte!2070 (_2!1129 lt!26244)) (currentBit!2065 (_2!1129 lt!26244)))))))

(assert (=> b!18240 (or (not (= (bvand lt!26247 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!26247 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!26247 nBits!604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!18240 (= lt!26247 (bitIndex!0 (size!513 (buf!831 thiss!1917)) (currentByte!2070 thiss!1917) (currentBit!2065 thiss!1917)))))

(declare-fun b!18241 () Bool)

(declare-fun res!16047 () Bool)

(assert (=> b!18241 (=> (not res!16047) (not e!11676))))

(declare-fun lt!26241 () (_ BitVec 64))

(assert (=> b!18241 (= res!16047 (= (size!513 (_1!1129 lt!26244)) ((_ extract 31 0) lt!26241)))))

(assert (=> b!18241 (and (bvslt lt!26241 #b0000000000000000000000000000000010000000000000000000000000000000) (bvsge lt!26241 #b1111111111111111111111111111111110000000000000000000000000000000))))

(declare-fun lt!26240 () (_ BitVec 64))

(declare-fun lt!26243 () (_ BitVec 64))

(assert (=> b!18241 (= lt!26241 (bvsdiv lt!26240 lt!26243))))

(assert (=> b!18241 (and (not (= lt!26243 #b0000000000000000000000000000000000000000000000000000000000000000)) (or (not (= lt!26240 #b1000000000000000000000000000000000000000000000000000000000000000)) (not (= lt!26243 #b1111111111111111111111111111111111111111111111111111111111111111))))))

(assert (=> b!18241 (= lt!26243 #b0000000000000000000000000000000000000000000000000000000000001000)))

(declare-fun lt!26245 () (_ BitVec 64))

(declare-fun lt!26248 () (_ BitVec 64))

(assert (=> b!18241 (= lt!26240 (bvsub lt!26245 lt!26248))))

(assert (=> b!18241 (or (= (bvand lt!26245 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!26248 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!26245 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!26245 lt!26248) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!18241 (= lt!26248 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!26246 () (_ BitVec 64))

(assert (=> b!18241 (= lt!26245 (bvadd nBits!604 lt!26246))))

(assert (=> b!18241 (or (not (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!26246 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd nBits!604 lt!26246) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!18241 (= lt!26246 #b0000000000000000000000000000000000000000000000000000000000001000)))

(declare-fun b!18242 () Bool)

(declare-fun res!16046 () Bool)

(assert (=> b!18242 (=> (not res!16046) (not e!11676))))

(assert (=> b!18242 (= res!16046 (bvsle (currentByte!2070 thiss!1917) (currentByte!2070 (_2!1129 lt!26244))))))

(assert (= (and d!6000 res!16048) b!18240))

(assert (= (and b!18240 res!16045) b!18238))

(assert (= (and b!18238 res!16049) b!18241))

(assert (= (and b!18241 res!16047) b!18242))

(assert (= (and b!18242 res!16046) b!18239))

(declare-fun m!24566 () Bool)

(assert (=> b!18238 m!24566))

(declare-fun m!24571 () Bool)

(assert (=> b!18239 m!24571))

(declare-fun m!24573 () Bool)

(assert (=> b!18239 m!24573))

(declare-fun m!24579 () Bool)

(assert (=> d!6000 m!24579))

(declare-fun m!24583 () Bool)

(assert (=> b!18240 m!24583))

(declare-fun m!24587 () Bool)

(assert (=> b!18240 m!24587))

(assert (=> b!18195 d!6000))

(declare-fun d!6013 () Bool)

(declare-fun remainingBits!0 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))

(assert (=> d!6013 (= (validate_offset_bits!1 ((_ sign_extend 32) (size!513 (buf!831 thiss!1917))) ((_ sign_extend 32) (currentByte!2070 thiss!1917)) ((_ sign_extend 32) (currentBit!2065 thiss!1917)) nBits!604) (bvsge (remainingBits!0 ((_ sign_extend 32) (size!513 (buf!831 thiss!1917))) ((_ sign_extend 32) (currentByte!2070 thiss!1917)) ((_ sign_extend 32) (currentBit!2065 thiss!1917))) nBits!604))))

(declare-fun bs!1705 () Bool)

(assert (= bs!1705 d!6013))

(declare-fun m!24591 () Bool)

(assert (=> bs!1705 m!24591))

(assert (=> b!18194 d!6013))

(declare-fun d!6018 () Bool)

(assert (=> d!6018 (= (inv!12 thiss!1917) (invariant!0 (currentBit!2065 thiss!1917) (currentByte!2070 thiss!1917) (size!513 (buf!831 thiss!1917))))))

(declare-fun bs!1707 () Bool)

(assert (= bs!1707 d!6018))

(declare-fun m!24595 () Bool)

(assert (=> bs!1707 m!24595))

(assert (=> start!4454 d!6018))

(declare-fun d!6022 () Bool)

(assert (=> d!6022 (= (array_inv!483 (buf!831 thiss!1917)) (bvsge (size!513 (buf!831 thiss!1917)) #b00000000000000000000000000000000))))

(assert (=> b!18197 d!6022))

(declare-fun d!6025 () Bool)

(assert (=> d!6025 (= (inv!12 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) (invariant!0 (currentBit!2065 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) (currentByte!2070 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) (size!513 (buf!831 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))))))))

(declare-fun bs!1708 () Bool)

(assert (= bs!1708 d!6025))

(declare-fun m!24597 () Bool)

(assert (=> bs!1708 m!24597))

(assert (=> b!18196 d!6025))

(push 1)

(assert (not b!18240))

(assert (not d!6013))

(assert (not d!6018))

(assert (not b!18239))

(assert (not b!18238))

(assert (not d!6000))

(assert (not d!6025))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!6028 () Bool)

(declare-fun e!11679 () Bool)

(assert (=> d!6028 e!11679))

(declare-fun res!16055 () Bool)

(assert (=> d!6028 (=> (not res!16055) (not e!11679))))

(declare-fun lt!26263 () (_ BitVec 64))

(declare-fun lt!26264 () (_ BitVec 64))

(declare-fun lt!26265 () (_ BitVec 64))

(assert (=> d!6028 (= res!16055 (= lt!26265 (bvsub lt!26263 lt!26264)))))

(assert (=> d!6028 (or (= (bvand lt!26263 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!26264 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!26263 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!26263 lt!26264) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!6028 (= lt!26264 (remainingBits!0 ((_ sign_extend 32) (size!513 (buf!831 (_2!1129 lt!26244)))) ((_ sign_extend 32) (currentByte!2070 (_2!1129 lt!26244))) ((_ sign_extend 32) (currentBit!2065 (_2!1129 lt!26244)))))))

(declare-fun lt!26262 () (_ BitVec 64))

(declare-fun lt!26261 () (_ BitVec 64))

(assert (=> d!6028 (= lt!26263 (bvmul lt!26262 lt!26261))))

(assert (=> d!6028 (or (= lt!26262 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!26261 (bvsdiv (bvmul lt!26262 lt!26261) lt!26262)))))

(assert (=> d!6028 (= lt!26261 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!6028 (= lt!26262 ((_ sign_extend 32) (size!513 (buf!831 (_2!1129 lt!26244)))))))

(assert (=> d!6028 (= lt!26265 (bvadd (bvmul ((_ sign_extend 32) (currentByte!2070 (_2!1129 lt!26244))) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2065 (_2!1129 lt!26244)))))))

(assert (=> d!6028 (invariant!0 (currentBit!2065 (_2!1129 lt!26244)) (currentByte!2070 (_2!1129 lt!26244)) (size!513 (buf!831 (_2!1129 lt!26244))))))

(assert (=> d!6028 (= (bitIndex!0 (size!513 (buf!831 (_2!1129 lt!26244))) (currentByte!2070 (_2!1129 lt!26244)) (currentBit!2065 (_2!1129 lt!26244))) lt!26265)))

(declare-fun b!18247 () Bool)

(declare-fun res!16054 () Bool)

(assert (=> b!18247 (=> (not res!16054) (not e!11679))))

(assert (=> b!18247 (= res!16054 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!26265))))

(declare-fun b!18248 () Bool)

(declare-fun lt!26266 () (_ BitVec 64))

(assert (=> b!18248 (= e!11679 (bvsle lt!26265 (bvmul lt!26266 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!18248 (or (= lt!26266 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!26266 #b0000000000000000000000000000000000000000000000000000000000001000) lt!26266)))))

(assert (=> b!18248 (= lt!26266 ((_ sign_extend 32) (size!513 (buf!831 (_2!1129 lt!26244)))))))

(assert (= (and d!6028 res!16055) b!18247))

(assert (= (and b!18247 res!16054) b!18248))

(declare-fun m!24601 () Bool)

(assert (=> d!6028 m!24601))

(assert (=> d!6028 m!24566))

(assert (=> b!18240 d!6028))

(declare-fun d!6030 () Bool)

(declare-fun e!11680 () Bool)

(assert (=> d!6030 e!11680))

(declare-fun res!16057 () Bool)

(assert (=> d!6030 (=> (not res!16057) (not e!11680))))

(declare-fun lt!26269 () (_ BitVec 64))

(declare-fun lt!26271 () (_ BitVec 64))

(declare-fun lt!26270 () (_ BitVec 64))

(assert (=> d!6030 (= res!16057 (= lt!26271 (bvsub lt!26269 lt!26270)))))

(assert (=> d!6030 (or (= (bvand lt!26269 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand lt!26270 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!26269 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!26269 lt!26270) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!6030 (= lt!26270 (remainingBits!0 ((_ sign_extend 32) (size!513 (buf!831 thiss!1917))) ((_ sign_extend 32) (currentByte!2070 thiss!1917)) ((_ sign_extend 32) (currentBit!2065 thiss!1917))))))

(declare-fun lt!26268 () (_ BitVec 64))

(declare-fun lt!26267 () (_ BitVec 64))

(assert (=> d!6030 (= lt!26269 (bvmul lt!26268 lt!26267))))

(assert (=> d!6030 (or (= lt!26268 #b0000000000000000000000000000000000000000000000000000000000000000) (= lt!26267 (bvsdiv (bvmul lt!26268 lt!26267) lt!26268)))))

(assert (=> d!6030 (= lt!26267 #b0000000000000000000000000000000000000000000000000000000000001000)))

(assert (=> d!6030 (= lt!26268 ((_ sign_extend 32) (size!513 (buf!831 thiss!1917))))))

(assert (=> d!6030 (= lt!26271 (bvadd (bvmul ((_ sign_extend 32) (currentByte!2070 thiss!1917)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2065 thiss!1917))))))

(assert (=> d!6030 (invariant!0 (currentBit!2065 thiss!1917) (currentByte!2070 thiss!1917) (size!513 (buf!831 thiss!1917)))))

(assert (=> d!6030 (= (bitIndex!0 (size!513 (buf!831 thiss!1917)) (currentByte!2070 thiss!1917) (currentBit!2065 thiss!1917)) lt!26271)))

(declare-fun b!18249 () Bool)

(declare-fun res!16056 () Bool)

(assert (=> b!18249 (=> (not res!16056) (not e!11680))))

(assert (=> b!18249 (= res!16056 (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 lt!26271))))

(declare-fun b!18250 () Bool)

(declare-fun lt!26272 () (_ BitVec 64))

(assert (=> b!18250 (= e!11680 (bvsle lt!26271 (bvmul lt!26272 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(assert (=> b!18250 (or (= lt!26272 #b0000000000000000000000000000000000000000000000000000000000000000) (= #b0000000000000000000000000000000000000000000000000000000000001000 (bvsdiv (bvmul lt!26272 #b0000000000000000000000000000000000000000000000000000000000001000) lt!26272)))))

(assert (=> b!18250 (= lt!26272 ((_ sign_extend 32) (size!513 (buf!831 thiss!1917))))))

(assert (= (and d!6030 res!16057) b!18249))

(assert (= (and b!18249 res!16056) b!18250))

(assert (=> d!6030 m!24591))

(assert (=> d!6030 m!24595))

(assert (=> b!18240 d!6030))

(declare-fun b!18295 () Bool)

(declare-fun e!11703 () tuple3!142)

(declare-fun lt!26395 () Unit!1616)

(assert (=> b!18295 (= e!11703 (tuple3!143 lt!26395 thiss!1917 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun lt!26405 () Unit!1616)

(declare-fun arrayBitRangesEqReflexiveLemma!0 (array!1215) Unit!1616)

(assert (=> b!18295 (= lt!26405 (arrayBitRangesEqReflexiveLemma!0 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))))))

(declare-fun call!280 () Bool)

(assert (=> b!18295 call!280))

(declare-fun lt!26400 () Unit!1616)

(assert (=> b!18295 (= lt!26400 lt!26405)))

(declare-fun lt!26382 () array!1215)

(assert (=> b!18295 (= lt!26382 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!26386 () array!1215)

(assert (=> b!18295 (= lt!26386 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun lt!26410 () (_ BitVec 64))

(assert (=> b!18295 (= lt!26410 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!26396 () (_ BitVec 64))

(assert (=> b!18295 (= lt!26396 ((_ sign_extend 32) (size!513 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!26383 () (_ BitVec 64))

(assert (=> b!18295 (= lt!26383 (bvmul lt!26396 #b0000000000000000000000000000000000000000000000000000000000001000))))

(declare-fun lt!26385 () (_ BitVec 64))

(assert (=> b!18295 (= lt!26385 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!26408 () (_ BitVec 64))

(assert (=> b!18295 (= lt!26408 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun arrayBitRangesEqSlicedLemma!0 (array!1215 array!1215 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1616)

(assert (=> b!18295 (= lt!26395 (arrayBitRangesEqSlicedLemma!0 lt!26382 lt!26386 lt!26410 lt!26383 lt!26385 lt!26408))))

(declare-fun call!281 () Bool)

(assert (=> b!18295 call!281))

(declare-fun b!18296 () Bool)

(declare-fun lt!26384 () Unit!1616)

(declare-fun lt!26389 () tuple3!142)

(assert (=> b!18296 (= e!11703 (tuple3!143 lt!26384 (_2!1131 lt!26389) (_3!77 lt!26389)))))

(declare-datatypes ((tuple2!2108 0))(
  ( (tuple2!2109 (_1!1133 Bool) (_2!1133 BitStream!896)) )
))
(declare-fun lt!26409 () tuple2!2108)

(declare-fun readBit!0 (BitStream!896) tuple2!2108)

(assert (=> b!18296 (= lt!26409 (readBit!0 thiss!1917))))

(declare-fun lt!26407 () (_ BitVec 32))

(assert (=> b!18296 (= lt!26407 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!26379 () (_ BitVec 32))

(assert (=> b!18296 (= lt!26379 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!26390 () array!1215)

(assert (=> b!18296 (= lt!26390 (array!1216 (store (arr!948 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!26407 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!948 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!26407)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!26379)))) ((_ sign_extend 24) (ite (_1!1133 lt!26409) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!26379) #b00000000))))) (size!513 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))))))

(declare-fun lt!26403 () (_ BitVec 64))

(assert (=> b!18296 (= lt!26403 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!26397 () (_ BitVec 64))

(assert (=> b!18296 (= lt!26397 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun lt!26404 () Unit!1616)

(declare-fun validateOffsetBitsIneqLemma!0 (BitStream!896 BitStream!896 (_ BitVec 64) (_ BitVec 64)) Unit!1616)

(assert (=> b!18296 (= lt!26404 (validateOffsetBitsIneqLemma!0 thiss!1917 (_2!1133 lt!26409) lt!26403 lt!26397))))

(assert (=> b!18296 (validate_offset_bits!1 ((_ sign_extend 32) (size!513 (buf!831 (_2!1133 lt!26409)))) ((_ sign_extend 32) (currentByte!2070 (_2!1133 lt!26409))) ((_ sign_extend 32) (currentBit!2065 (_2!1133 lt!26409))) (bvsub lt!26403 lt!26397))))

(declare-fun lt!26399 () Unit!1616)

(assert (=> b!18296 (= lt!26399 lt!26404)))

(assert (=> b!18296 (= lt!26389 (readBitsLoop!0 (_2!1133 lt!26409) nBits!604 lt!26390 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) nBits!604))))

(declare-fun res!16084 () Bool)

(assert (=> b!18296 (= res!16084 (= (bvsub (bvadd (bitIndex!0 (size!513 (buf!831 thiss!1917)) (currentByte!2070 thiss!1917) (currentBit!2065 thiss!1917)) nBits!604) #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!513 (buf!831 (_2!1131 lt!26389))) (currentByte!2070 (_2!1131 lt!26389)) (currentBit!2065 (_2!1131 lt!26389)))))))

(declare-fun e!11704 () Bool)

(assert (=> b!18296 (=> (not res!16084) (not e!11704))))

(assert (=> b!18296 e!11704))

(declare-fun lt!26406 () Unit!1616)

(declare-fun Unit!1620 () Unit!1616)

(assert (=> b!18296 (= lt!26406 Unit!1620)))

(declare-fun lt!26392 () (_ BitVec 32))

(assert (=> b!18296 (= lt!26392 ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!26393 () (_ BitVec 32))

(assert (=> b!18296 (= lt!26393 ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))))

(declare-fun lt!26387 () Unit!1616)

(declare-fun arrayBitRangesUpdatedAtLemma!0 (array!1215 (_ BitVec 64) Bool) Unit!1616)

(assert (=> b!18296 (= lt!26387 (arrayBitRangesUpdatedAtLemma!0 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 (_1!1133 lt!26409)))))

(assert (=> b!18296 call!281))

(declare-fun lt!26394 () Unit!1616)

(assert (=> b!18296 (= lt!26394 lt!26387)))

(declare-fun lt!26411 () (_ BitVec 64))

(assert (=> b!18296 (= lt!26411 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!26381 () Unit!1616)

(declare-fun arrayBitRangesEqTransitive!0 (array!1215 array!1215 array!1215 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1616)

(assert (=> b!18296 (= lt!26381 (arrayBitRangesEqTransitive!0 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!26390 (_3!77 lt!26389) lt!26411 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(assert (=> b!18296 call!280))

(declare-fun lt!26378 () Unit!1616)

(assert (=> b!18296 (= lt!26378 lt!26381)))

(declare-fun arrayBitRangesEq!0 (array!1215 array!1215 (_ BitVec 64) (_ BitVec 64)) Bool)

(assert (=> b!18296 (arrayBitRangesEq!0 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!77 lt!26389) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!26391 () Unit!1616)

(declare-fun Unit!1621 () Unit!1616)

(assert (=> b!18296 (= lt!26391 Unit!1621)))

(declare-fun lt!26402 () Unit!1616)

(declare-fun arrayBitRangesEqImpliesEq!0 (array!1215 array!1215 (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Unit!1616)

(assert (=> b!18296 (= lt!26402 (arrayBitRangesEqImpliesEq!0 lt!26390 (_3!77 lt!26389) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000 (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001)))))

(declare-fun bitAt!0 (array!1215 (_ BitVec 64)) Bool)

(assert (=> b!18296 (= (bitAt!0 lt!26390 #b0000000000000000000000000000000000000000000000000000000000000000) (bitAt!0 (_3!77 lt!26389) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!26401 () Unit!1616)

(assert (=> b!18296 (= lt!26401 lt!26402)))

(declare-fun lt!26398 () Unit!1616)

(declare-fun Unit!1622 () Unit!1616)

(assert (=> b!18296 (= lt!26398 Unit!1622)))

(declare-fun lt!26413 () Bool)

(assert (=> b!18296 (= lt!26413 (= (bitAt!0 (_3!77 lt!26389) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!1133 lt!26409)))))

(declare-fun Unit!1623 () Unit!1616)

(assert (=> b!18296 (= lt!26384 Unit!1623)))

(assert (=> b!18296 lt!26413))

(declare-fun e!11705 () Bool)

(declare-fun b!18297 () Bool)

(declare-fun lt!26412 () tuple3!142)

(assert (=> b!18297 (= e!11705 (= (byteArrayBitContentToList!0 (_2!1131 lt!26412) (_3!77 lt!26412) #b0000000000000000000000000000000000000000000000000000000000000000 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000)) (bitStreamReadBitsIntoList!0 (_2!1131 lt!26412) thiss!1917 (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!18297 (or (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!18297 (or (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!6032 () Bool)

(assert (=> d!6032 e!11705))

(declare-fun res!16082 () Bool)

(assert (=> d!6032 (=> (not res!16082) (not e!11705))))

(declare-fun lt!26380 () (_ BitVec 64))

(assert (=> d!6032 (= res!16082 (= (bvsub lt!26380 #b0000000000000000000000000000000000000000000000000000000000000000) (bitIndex!0 (size!513 (buf!831 (_2!1131 lt!26412))) (currentByte!2070 (_2!1131 lt!26412)) (currentBit!2065 (_2!1131 lt!26412)))))))

(assert (=> d!6032 (or (= (bvand lt!26380 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvand lt!26380 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvsub lt!26380 #b0000000000000000000000000000000000000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!26388 () (_ BitVec 64))

(assert (=> d!6032 (= lt!26380 (bvadd lt!26388 nBits!604))))

(assert (=> d!6032 (or (not (= (bvand lt!26388 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!604 #b1000000000000000000000000000000000000000000000000000000000000000))) (= (bvand lt!26388 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd lt!26388 nBits!604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!6032 (= lt!26388 (bitIndex!0 (size!513 (buf!831 thiss!1917)) (currentByte!2070 thiss!1917) (currentBit!2065 thiss!1917)))))

(assert (=> d!6032 (= lt!26412 e!11703)))

(declare-fun c!1363 () Bool)

(assert (=> d!6032 (= c!1363 (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604))))

(assert (=> d!6032 (and (bvsle #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) (bvsle nBits!604 #b0000000000000000000000000000001111111111111111111111111111111000))))

(assert (=> d!6032 (= (readBitsLoop!0 thiss!1917 nBits!604 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) lt!26412)))

(declare-fun b!18298 () Bool)

(declare-fun e!11702 () Bool)

(declare-datatypes ((tuple2!2110 0))(
  ( (tuple2!2111 (_1!1134 BitStream!896) (_2!1134 Bool)) )
))
(declare-fun readBitPure!0 (BitStream!896) tuple2!2110)

(assert (=> b!18298 (= e!11702 (= (bitAt!0 (_3!77 lt!26412) #b0000000000000000000000000000000000000000000000000000000000000000) (_2!1134 (readBitPure!0 thiss!1917))))))

(declare-fun bm!277 () Bool)

(assert (=> bm!277 (= call!281 (arrayBitRangesEq!0 (ite c!1363 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) lt!26382) (ite c!1363 (array!1216 (store (arr!948 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!26392 ((_ extract 7 0) (bvor (bvand ((_ sign_extend 24) (select (arr!948 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) lt!26392)) (bvnot ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!26393)))) ((_ sign_extend 24) (ite (_1!1133 lt!26409) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) lt!26393) #b00000000))))) (size!513 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))) lt!26386) (ite c!1363 #b0000000000000000000000000000000000000000000000000000000000000000 lt!26385) (ite c!1363 #b0000000000000000000000000000000000000000000000000000000000000000 lt!26408)))))

(declare-fun b!18299 () Bool)

(assert (=> b!18299 (= e!11704 (and (= (buf!831 thiss!1917) (buf!831 (_2!1131 lt!26389))) (= (size!513 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!513 (_3!77 lt!26389)))))))

(declare-fun bm!278 () Bool)

(assert (=> bm!278 (= call!280 (arrayBitRangesEq!0 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (ite c!1363 (_3!77 lt!26389) (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (ite c!1363 lt!26411 #b0000000000000000000000000000000000000000000000000000000000000000) (ite c!1363 #b0000000000000000000000000000000000000000000000000000000000000000 (bvmul ((_ sign_extend 32) (size!513 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b0000000000000000000000000000000000000000000000000000000000001000))))))

(declare-fun b!18300 () Bool)

(declare-fun res!16081 () Bool)

(assert (=> b!18300 (=> (not res!16081) (not e!11705))))

(assert (=> b!18300 (= res!16081 (and (= (buf!831 thiss!1917) (buf!831 (_2!1131 lt!26412))) (= (size!513 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000)))) (size!513 (_3!77 lt!26412)))))))

(declare-fun b!18301 () Bool)

(declare-fun res!16086 () Bool)

(assert (=> b!18301 (=> (not res!16086) (not e!11705))))

(assert (=> b!18301 (= res!16086 e!11702)))

(declare-fun res!16085 () Bool)

(assert (=> b!18301 (=> res!16085 e!11702)))

(assert (=> b!18301 (= res!16085 (not (bvslt #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604)))))

(declare-fun b!18302 () Bool)

(declare-fun res!16080 () Bool)

(assert (=> b!18302 (=> (not res!16080) (not e!11705))))

(assert (=> b!18302 (= res!16080 (invariant!0 (currentBit!2065 (_2!1131 lt!26412)) (currentByte!2070 (_2!1131 lt!26412)) (size!513 (buf!831 (_2!1131 lt!26412)))))))

(declare-fun b!18303 () Bool)

(declare-fun res!16083 () Bool)

(assert (=> b!18303 (=> (not res!16083) (not e!11705))))

(assert (=> b!18303 (= res!16083 (arrayBitRangesEq!0 (array!1216 ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) ((_ extract 31 0) (bvsdiv (bvsub (bvadd nBits!604 #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000001000))) (_3!77 lt!26412) #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!6032 c!1363) b!18296))

(assert (= (and d!6032 (not c!1363)) b!18295))

(assert (= (and b!18296 res!16084) b!18299))

(assert (= (or b!18296 b!18295) bm!278))

(assert (= (or b!18296 b!18295) bm!277))

(assert (= (and d!6032 res!16082) b!18300))

(assert (= (and b!18300 res!16081) b!18303))

(assert (= (and b!18303 res!16083) b!18301))

(assert (= (and b!18301 (not res!16085)) b!18298))

(assert (= (and b!18301 res!16086) b!18302))

(assert (= (and b!18302 res!16080) b!18297))

(declare-fun m!24619 () Bool)

(assert (=> b!18303 m!24619))

(declare-fun m!24621 () Bool)

(assert (=> b!18296 m!24621))

(declare-fun m!24623 () Bool)

(assert (=> b!18296 m!24623))

(declare-fun m!24625 () Bool)

(assert (=> b!18296 m!24625))

(assert (=> b!18296 m!24587))

(declare-fun m!24627 () Bool)

(assert (=> b!18296 m!24627))

(declare-fun m!24629 () Bool)

(assert (=> b!18296 m!24629))

(declare-fun m!24631 () Bool)

(assert (=> b!18296 m!24631))

(declare-fun m!24633 () Bool)

(assert (=> b!18296 m!24633))

(declare-fun m!24635 () Bool)

(assert (=> b!18296 m!24635))

(declare-fun m!24637 () Bool)

(assert (=> b!18296 m!24637))

(declare-fun m!24639 () Bool)

(assert (=> b!18296 m!24639))

(declare-fun m!24641 () Bool)

(assert (=> b!18296 m!24641))

(declare-fun m!24643 () Bool)

(assert (=> b!18296 m!24643))

(declare-fun m!24645 () Bool)

(assert (=> b!18296 m!24645))

(declare-fun m!24647 () Bool)

(assert (=> b!18296 m!24647))

(declare-fun m!24649 () Bool)

(assert (=> bm!278 m!24649))

(declare-fun m!24651 () Bool)

(assert (=> bm!277 m!24651))

(declare-fun m!24653 () Bool)

(assert (=> bm!277 m!24653))

(declare-fun m!24655 () Bool)

(assert (=> bm!277 m!24655))

(declare-fun m!24657 () Bool)

(assert (=> bm!277 m!24657))

(declare-fun m!24659 () Bool)

(assert (=> d!6032 m!24659))

(assert (=> d!6032 m!24587))

(declare-fun m!24661 () Bool)

(assert (=> b!18297 m!24661))

(declare-fun m!24663 () Bool)

(assert (=> b!18297 m!24663))

(declare-fun m!24665 () Bool)

(assert (=> b!18295 m!24665))

(declare-fun m!24667 () Bool)

(assert (=> b!18295 m!24667))

(declare-fun m!24669 () Bool)

(assert (=> b!18302 m!24669))

(declare-fun m!24671 () Bool)

(assert (=> b!18298 m!24671))

(declare-fun m!24673 () Bool)

(assert (=> b!18298 m!24673))

(assert (=> d!6000 d!6032))

(declare-fun d!6050 () Bool)

(declare-fun c!1366 () Bool)

(assert (=> d!6050 (= c!1366 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!11708 () List!205)

(assert (=> d!6050 (= (byteArrayBitContentToList!0 (_2!1129 lt!26244) (_1!1129 lt!26244) #b0000000000000000000000000000000000000000000000000000000000000000 nBits!604) e!11708)))

(declare-fun b!18308 () Bool)

(assert (=> b!18308 (= e!11708 Nil!202)))

(declare-fun b!18309 () Bool)

(assert (=> b!18309 (= e!11708 (Cons!201 (not (= (bvand ((_ sign_extend 24) (select (arr!948 (_1!1129 lt!26244)) ((_ extract 31 0) (bvsdiv #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 (_2!1129 lt!26244) (_1!1129 lt!26244) (bvadd #b0000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub nBits!604 #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!6050 c!1366) b!18308))

(assert (= (and d!6050 (not c!1366)) b!18309))

(declare-fun m!24675 () Bool)

(assert (=> b!18309 m!24675))

(declare-fun m!24677 () Bool)

(assert (=> b!18309 m!24677))

(declare-fun m!24679 () Bool)

(assert (=> b!18309 m!24679))

(assert (=> b!18239 d!6050))

(declare-fun b!18319 () Bool)

(declare-fun lt!26421 () tuple2!2108)

(declare-datatypes ((tuple2!2112 0))(
  ( (tuple2!2113 (_1!1135 List!205) (_2!1135 BitStream!896)) )
))
(declare-fun e!11713 () tuple2!2112)

(declare-fun lt!26422 () (_ BitVec 64))

(assert (=> b!18319 (= e!11713 (tuple2!2113 (Cons!201 (_1!1133 lt!26421) (bitStreamReadBitsIntoList!0 (_2!1129 lt!26244) (_2!1133 lt!26421) (bvsub nBits!604 lt!26422))) (_2!1133 lt!26421)))))

(assert (=> b!18319 (= lt!26421 (readBit!0 thiss!1917))))

(assert (=> b!18319 (= lt!26422 #b0000000000000000000000000000000000000000000000000000000000000001)))

(declare-fun b!18318 () Bool)

(assert (=> b!18318 (= e!11713 (tuple2!2113 Nil!202 thiss!1917))))

(declare-fun b!18320 () Bool)

(declare-fun e!11714 () Bool)

(declare-fun lt!26420 () List!205)

(declare-fun isEmpty!46 (List!205) Bool)

(assert (=> b!18320 (= e!11714 (isEmpty!46 lt!26420))))

(declare-fun b!18321 () Bool)

(declare-fun length!41 (List!205) Int)

(assert (=> b!18321 (= e!11714 (> (length!41 lt!26420) 0))))

(declare-fun d!6052 () Bool)

(assert (=> d!6052 e!11714))

(declare-fun c!1372 () Bool)

(assert (=> d!6052 (= c!1372 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!6052 (= lt!26420 (_1!1135 e!11713))))

(declare-fun c!1371 () Bool)

(assert (=> d!6052 (= c!1371 (= nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!6052 (bvsge nBits!604 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> d!6052 (= (bitStreamReadBitsIntoList!0 (_2!1129 lt!26244) thiss!1917 nBits!604) lt!26420)))

(assert (= (and d!6052 c!1371) b!18318))

(assert (= (and d!6052 (not c!1371)) b!18319))

(assert (= (and d!6052 c!1372) b!18320))

(assert (= (and d!6052 (not c!1372)) b!18321))

(declare-fun m!24681 () Bool)

(assert (=> b!18319 m!24681))

(assert (=> b!18319 m!24639))

(declare-fun m!24683 () Bool)

(assert (=> b!18320 m!24683))

(declare-fun m!24685 () Bool)

(assert (=> b!18321 m!24685))

(assert (=> b!18239 d!6052))

(declare-fun d!6054 () Bool)

(assert (=> d!6054 (= (invariant!0 (currentBit!2065 thiss!1917) (currentByte!2070 thiss!1917) (size!513 (buf!831 thiss!1917))) (and (bvsge (currentBit!2065 thiss!1917) #b00000000000000000000000000000000) (bvslt (currentBit!2065 thiss!1917) #b00000000000000000000000000001000) (bvsge (currentByte!2070 thiss!1917) #b00000000000000000000000000000000) (or (bvslt (currentByte!2070 thiss!1917) (size!513 (buf!831 thiss!1917))) (and (= (currentBit!2065 thiss!1917) #b00000000000000000000000000000000) (= (currentByte!2070 thiss!1917) (size!513 (buf!831 thiss!1917)))))))))

(assert (=> d!6018 d!6054))

(declare-fun d!6056 () Bool)

(assert (=> d!6056 (= (invariant!0 (currentBit!2065 (_2!1129 lt!26244)) (currentByte!2070 (_2!1129 lt!26244)) (size!513 (buf!831 (_2!1129 lt!26244)))) (and (bvsge (currentBit!2065 (_2!1129 lt!26244)) #b00000000000000000000000000000000) (bvslt (currentBit!2065 (_2!1129 lt!26244)) #b00000000000000000000000000001000) (bvsge (currentByte!2070 (_2!1129 lt!26244)) #b00000000000000000000000000000000) (or (bvslt (currentByte!2070 (_2!1129 lt!26244)) (size!513 (buf!831 (_2!1129 lt!26244)))) (and (= (currentBit!2065 (_2!1129 lt!26244)) #b00000000000000000000000000000000) (= (currentByte!2070 (_2!1129 lt!26244)) (size!513 (buf!831 (_2!1129 lt!26244))))))))))

(assert (=> b!18238 d!6056))

(declare-fun d!6058 () Bool)

(assert (=> d!6058 (= (invariant!0 (currentBit!2065 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) (currentByte!2070 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) (size!513 (buf!831 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))))) (and (bvsge (currentBit!2065 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) #b00000000000000000000000000000000) (bvslt (currentBit!2065 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) #b00000000000000000000000000001000) (bvsge (currentByte!2070 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) #b00000000000000000000000000000000) (or (bvslt (currentByte!2070 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) (size!513 (buf!831 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))))) (and (= (currentBit!2065 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) #b00000000000000000000000000000000) (= (currentByte!2070 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167)))) (size!513 (buf!831 (BitStream!897 (buf!831 (_2!1129 lt!26167)) (currentByte!2070 thiss!1917) (currentBit!2065 (_2!1129 lt!26167))))))))))))

(assert (=> d!6025 d!6058))

(declare-fun d!6060 () Bool)

(assert (=> d!6060 (= (remainingBits!0 ((_ sign_extend 32) (size!513 (buf!831 thiss!1917))) ((_ sign_extend 32) (currentByte!2070 thiss!1917)) ((_ sign_extend 32) (currentBit!2065 thiss!1917))) (bvsub (bvmul ((_ sign_extend 32) (size!513 (buf!831 thiss!1917))) #b0000000000000000000000000000000000000000000000000000000000001000) (bvadd (bvmul ((_ sign_extend 32) (currentByte!2070 thiss!1917)) #b0000000000000000000000000000000000000000000000000000000000001000) ((_ sign_extend 32) (currentBit!2065 thiss!1917)))))))

(assert (=> d!6013 d!6060))

(push 1)

(assert (not b!18319))

(assert (not b!18297))

(assert (not d!6028))

(assert (not b!18295))

(assert (not bm!278))

(assert (not b!18298))

(assert (not b!18296))

(assert (not b!18309))

(assert (not bm!277))

(assert (not b!18320))

(assert (not d!6032))

(assert (not b!18302))

(assert (not d!6030))

(assert (not b!18303))

(assert (not b!18321))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

