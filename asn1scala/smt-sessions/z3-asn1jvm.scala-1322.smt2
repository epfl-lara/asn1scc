; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!37332 () Bool)

(assert start!37332)

(declare-fun nBits!499 () (_ BitVec 64))

(declare-fun fromArr1!3 () (_ BitVec 64))

(declare-datatypes ((array!8969 0))(
  ( (array!8970 (arr!4895 (Array (_ BitVec 32) (_ BitVec 8))) (size!3971 (_ BitVec 32))) )
))
(declare-fun arr1!28 () array!8969)

(declare-fun fromArr2!3 () (_ BitVec 64))

(assert (=> start!37332 (and (bvsge fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge nBits!499 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt fromArr1!3 (bvsub #b0111111111111111111111111111111111111111111111111111111111111111 nBits!499)) (bvslt fromArr2!3 (bvsub #b0111111111111111111111111111111111111111111111111111111111111111 nBits!499)) (bvsle (bvadd fromArr1!3 nBits!499) (bvmul #b0000000000000000000000000000000000000000000000000000000000001000 ((_ sign_extend 32) (size!3971 arr1!28)))) (= (bvand fromArr2!3 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand nBits!499 #b1000000000000000000000000000000000000000000000000000000000000000)) (not (= (bvand fromArr2!3 #b1000000000000000000000000000000000000000000000000000000000000000) (bvand (bvadd fromArr2!3 nBits!499) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> start!37332 true))

(declare-fun array_inv!3712 (array!8969) Bool)

(assert (=> start!37332 (array_inv!3712 arr1!28)))

(declare-fun bs!14878 () Bool)

(assert (= bs!14878 start!37332))

(declare-fun m!269171 () Bool)

(assert (=> bs!14878 m!269171))

(check-sat (not start!37332))
(check-sat)
