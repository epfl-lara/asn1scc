; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!45920 () Bool)

(assert start!45920)

(declare-fun res!186526 () Bool)

(declare-fun e!150571 () Bool)

(assert (=> start!45920 (=> (not res!186526) (not e!150571))))

(declare-fun v!298 () (_ BitVec 64))

(assert (=> start!45920 (= res!186526 (and (bvslt v!298 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111111111110000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111000000000000000) (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000)))))

(assert (=> start!45920 e!150571))

(assert (=> start!45920 true))

(declare-fun b!221754 () Bool)

(declare-datatypes ((Unit!15817 0))(
  ( (Unit!15818) )
))
(declare-datatypes ((tuple3!1072 0))(
  ( (tuple3!1073 (_1!10171 Unit!15817) (_2!10171 (_ BitVec 32)) (_3!678 Bool)) )
))
(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1072)

(assert (=> b!221754 (= e!150571 (not (_3!678 (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000010111 true))))))

(assert (= (and start!45920 res!186526) b!221754))

(declare-fun m!340269 () Bool)

(assert (=> b!221754 m!340269))

(push 1)

(assert (not b!221754))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!74875 () Bool)

(declare-fun e!150583 () Bool)

(assert (=> d!74875 e!150583))

(declare-fun res!186531 () Bool)

(assert (=> d!74875 (=> (not res!186531) (not e!150583))))

(declare-fun lt!350213 () tuple3!1072)

(declare-fun lt!350210 () (_ BitVec 32))

(assert (=> d!74875 (= res!186531 (bvsge (_2!10171 lt!350213) (bvsub lt!350210 #b00000000000000000000000000000001)))))

(assert (=> d!74875 (or (= (bvand lt!350210 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!350210 #b10000000000000000000000000000000) (bvand (bvsub lt!350210 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!350211 () (_ BitVec 32))

(declare-fun lt!350212 () (_ BitVec 32))

(assert (=> d!74875 (= lt!350210 (bvmul lt!350211 lt!350212))))

(assert (=> d!74875 (or (= lt!350211 #b00000000000000000000000000000000) (= lt!350212 (bvsdiv (bvmul lt!350211 lt!350212) lt!350211)))))

(assert (=> d!74875 (= lt!350212 #b00000000000000000000000000001000)))

(declare-fun e!150582 () tuple3!1072)

(assert (=> d!74875 (= lt!350213 e!150582)))

(declare-fun c!10880 () Bool)

(declare-fun lt!350215 () (_ BitVec 32))

(assert (=> d!74875 (= c!10880 (bvslt lt!350215 #b00000000000000000000000001000000))))

(assert (=> d!74875 (= lt!350215 (bvadd #b00000000000000000000000000010111 #b00000000000000000000000000000001))))

(declare-fun lt!350214 () Bool)

(assert (=> d!74875 (= lt!350214 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) #b00000000000000000000000000010111))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!74875 (and (bvsge #b00000000000000000000000000010111 (bvsub (bvmul lt!350211 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle #b00000000000000000000000000010111 #b00000000000000000000000001000000) (bvslt #b00000000000000000000000000010111 #b00000000000000000000000001000000))))

(assert (=> d!74875 (= lt!350211 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!74875 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000010111 true) lt!350213)))

(declare-fun b!221771 () Bool)

(assert (=> b!221771 (= e!150582 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350215 lt!350214))))

(declare-fun b!221772 () Bool)

(declare-fun Unit!15820 () Unit!15817)

(assert (=> b!221772 (= e!150582 (tuple3!1073 Unit!15820 lt!350215 lt!350214))))

(declare-fun b!221773 () Bool)

(assert (=> b!221773 (= e!150583 (and (bvsle (_2!10171 lt!350213) #b00000000000000000000000001000000) (bvsge (_2!10171 lt!350213) #b00000000000000000000000001000000)))))

(assert (= (and d!74875 c!10880) b!221771))

(assert (= (and d!74875 (not c!10880)) b!221772))

(assert (= (and d!74875 res!186531) b!221773))

(declare-fun m!340271 () Bool)

(assert (=> b!221771 m!340271))

(assert (=> b!221754 d!74875))

(push 1)

(assert (not b!221771))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!74897 () Bool)

(declare-fun e!150611 () Bool)

(assert (=> d!74897 e!150611))

(declare-fun res!186546 () Bool)

(assert (=> d!74897 (=> (not res!186546) (not e!150611))))

(declare-fun lt!350295 () tuple3!1072)

(declare-fun lt!350292 () (_ BitVec 32))

(assert (=> d!74897 (= res!186546 (bvsge (_2!10171 lt!350295) (bvsub lt!350292 #b00000000000000000000000000000001)))))

(assert (=> d!74897 (or (= (bvand lt!350292 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!350292 #b10000000000000000000000000000000) (bvand (bvsub lt!350292 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!350293 () (_ BitVec 32))

(declare-fun lt!350294 () (_ BitVec 32))

(assert (=> d!74897 (= lt!350292 (bvmul lt!350293 lt!350294))))

(assert (=> d!74897 (or (= lt!350293 #b00000000000000000000000000000000) (= lt!350294 (bvsdiv (bvmul lt!350293 lt!350294) lt!350293)))))

(assert (=> d!74897 (= lt!350294 #b00000000000000000000000000001000)))

(declare-fun e!150610 () tuple3!1072)

(assert (=> d!74897 (= lt!350295 e!150610)))

(declare-fun c!10893 () Bool)

(declare-fun lt!350297 () (_ BitVec 32))

(assert (=> d!74897 (= c!10893 (bvslt lt!350297 #b00000000000000000000000001000000))))

(assert (=> d!74897 (= lt!350297 (bvadd lt!350215 #b00000000000000000000000000000001))))

(declare-fun lt!350296 () Bool)

(assert (=> d!74897 (= lt!350296 (and lt!350214 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) lt!350215))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!74897 (and (bvsge lt!350215 (bvsub (bvmul lt!350293 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle lt!350215 #b00000000000000000000000001000000) (bvslt lt!350215 #b00000000000000000000000001000000))))

(assert (=> d!74897 (= lt!350293 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!74897 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350215 lt!350214) lt!350295)))

(declare-fun b!221812 () Bool)

(assert (=> b!221812 (= e!150610 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350297 lt!350296))))

(declare-fun b!221813 () Bool)

(declare-fun Unit!15832 () Unit!15817)

(assert (=> b!221813 (= e!150610 (tuple3!1073 Unit!15832 lt!350297 lt!350296))))

(declare-fun b!221814 () Bool)

(assert (=> b!221814 (= e!150611 (and (bvsle (_2!10171 lt!350295) #b00000000000000000000000001000000) (bvsge (_2!10171 lt!350295) #b00000000000000000000000001000000)))))

(assert (= (and d!74897 c!10893) b!221812))

(assert (= (and d!74897 (not c!10893)) b!221813))

(assert (= (and d!74897 res!186546) b!221814))

(declare-fun m!340297 () Bool)

(assert (=> b!221812 m!340297))

(assert (=> b!221771 d!74897))

(push 1)

(assert (not b!221812))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!74923 () Bool)

(declare-fun e!150637 () Bool)

(assert (=> d!74923 e!150637))

(declare-fun res!186559 () Bool)

(assert (=> d!74923 (=> (not res!186559) (not e!150637))))

(declare-fun lt!350373 () tuple3!1072)

(declare-fun lt!350370 () (_ BitVec 32))

(assert (=> d!74923 (= res!186559 (bvsge (_2!10171 lt!350373) (bvsub lt!350370 #b00000000000000000000000000000001)))))

(assert (=> d!74923 (or (= (bvand lt!350370 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!350370 #b10000000000000000000000000000000) (bvand (bvsub lt!350370 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!350371 () (_ BitVec 32))

(declare-fun lt!350372 () (_ BitVec 32))

(assert (=> d!74923 (= lt!350370 (bvmul lt!350371 lt!350372))))

(assert (=> d!74923 (or (= lt!350371 #b00000000000000000000000000000000) (= lt!350372 (bvsdiv (bvmul lt!350371 lt!350372) lt!350371)))))

(assert (=> d!74923 (= lt!350372 #b00000000000000000000000000001000)))

(declare-fun e!150636 () tuple3!1072)

(assert (=> d!74923 (= lt!350373 e!150636)))

(declare-fun c!10906 () Bool)

(declare-fun lt!350375 () (_ BitVec 32))

(assert (=> d!74923 (= c!10906 (bvslt lt!350375 #b00000000000000000000000001000000))))

(assert (=> d!74923 (= lt!350375 (bvadd lt!350297 #b00000000000000000000000000000001))))

(declare-fun lt!350374 () Bool)

(assert (=> d!74923 (= lt!350374 (and lt!350296 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) lt!350297))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!74923 (and (bvsge lt!350297 (bvsub (bvmul lt!350371 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle lt!350297 #b00000000000000000000000001000000) (bvslt lt!350297 #b00000000000000000000000001000000))))

(assert (=> d!74923 (= lt!350371 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!74923 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350297 lt!350296) lt!350373)))

(declare-fun b!221851 () Bool)

(assert (=> b!221851 (= e!150636 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350375 lt!350374))))

(declare-fun b!221852 () Bool)

(declare-fun Unit!15845 () Unit!15817)

(assert (=> b!221852 (= e!150636 (tuple3!1073 Unit!15845 lt!350375 lt!350374))))

(declare-fun b!221853 () Bool)

(assert (=> b!221853 (= e!150637 (and (bvsle (_2!10171 lt!350373) #b00000000000000000000000001000000) (bvsge (_2!10171 lt!350373) #b00000000000000000000000001000000)))))

(assert (= (and d!74923 c!10906) b!221851))

(assert (= (and d!74923 (not c!10906)) b!221852))

(assert (= (and d!74923 res!186559) b!221853))

(declare-fun m!340323 () Bool)

(assert (=> b!221851 m!340323))

(assert (=> b!221812 d!74923))

(push 1)

(assert (not b!221851))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!74949 () Bool)

(declare-fun e!150663 () Bool)

(assert (=> d!74949 e!150663))

(declare-fun res!186572 () Bool)

(assert (=> d!74949 (=> (not res!186572) (not e!150663))))

(declare-fun lt!350451 () tuple3!1072)

(declare-fun lt!350448 () (_ BitVec 32))

(assert (=> d!74949 (= res!186572 (bvsge (_2!10171 lt!350451) (bvsub lt!350448 #b00000000000000000000000000000001)))))

(assert (=> d!74949 (or (= (bvand lt!350448 #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand lt!350448 #b10000000000000000000000000000000) (bvand (bvsub lt!350448 #b00000000000000000000000000000001) #b10000000000000000000000000000000)))))

(declare-fun lt!350449 () (_ BitVec 32))

(declare-fun lt!350450 () (_ BitVec 32))

(assert (=> d!74949 (= lt!350448 (bvmul lt!350449 lt!350450))))

(assert (=> d!74949 (or (= lt!350449 #b00000000000000000000000000000000) (= lt!350450 (bvsdiv (bvmul lt!350449 lt!350450) lt!350449)))))

(assert (=> d!74949 (= lt!350450 #b00000000000000000000000000001000)))

(declare-fun e!150662 () tuple3!1072)

(assert (=> d!74949 (= lt!350451 e!150662)))

(declare-fun c!10919 () Bool)

(declare-fun lt!350453 () (_ BitVec 32))

(assert (=> d!74949 (= c!10919 (bvslt lt!350453 #b00000000000000000000000001000000))))

(assert (=> d!74949 (= lt!350453 (bvadd lt!350375 #b00000000000000000000000000000001))))

(declare-fun lt!350452 () Bool)

(assert (=> d!74949 (= lt!350452 (and lt!350374 (not (= (bvand v!298 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) lt!350375))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!74949 (and (bvsge lt!350375 (bvsub (bvmul lt!350449 #b00000000000000000000000000001000) #b00000000000000000000000000000001)) (bvsle lt!350375 #b00000000000000000000000001000000) (bvslt lt!350375 #b00000000000000000000000001000000))))

(assert (=> d!74949 (= lt!350449 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!298 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!298 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!298 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!298 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!298 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000))))))))))

(assert (=> d!74949 (= (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350375 lt!350374) lt!350451)))

(declare-fun b!221890 () Bool)

(assert (=> b!221890 (= e!150662 (GetBytesNeededForNegativeNumberWhile!0 v!298 lt!350453 lt!350452))))

(declare-fun b!221891 () Bool)

(declare-fun Unit!15858 () Unit!15817)

(assert (=> b!221891 (= e!150662 (tuple3!1073 Unit!15858 lt!350453 lt!350452))))

(declare-fun b!221892 () Bool)

(assert (=> b!221892 (= e!150663 (and (bvsle (_2!10171 lt!350451) #b00000000000000000000000001000000) (bvsge (_2!10171 lt!350451) #b00000000000000000000000001000000)))))

(assert (= (and d!74949 c!10919) b!221890))

(assert (= (and d!74949 (not c!10919)) b!221891))

(assert (= (and d!74949 res!186572) b!221892))

(declare-fun m!340349 () Bool)

(assert (=> b!221890 m!340349))

(assert (=> b!221851 d!74949))

(push 1)

(assert (not b!221890))

(check-sat)

(pop 1)

(push 1)

(check-sat)

