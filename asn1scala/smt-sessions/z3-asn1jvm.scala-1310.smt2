; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!37242 () Bool)

(assert start!37242)

(declare-fun b!169179 () Bool)

(declare-fun e!117712 () Bool)

(declare-datatypes ((array!8912 0))(
  ( (array!8913 (arr!4865 (Array (_ BitVec 32) (_ BitVec 8))) (size!3944 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!7044 0))(
  ( (BitStream!7045 (buf!4396 array!8912) (currentByte!8380 (_ BitVec 32)) (currentBit!8375 (_ BitVec 32))) )
))
(declare-fun thiss!1565 () BitStream!7044)

(declare-fun array_inv!3685 (array!8912) Bool)

(assert (=> b!169179 (= e!117712 (array_inv!3685 (buf!4396 thiss!1565)))))

(declare-fun res!140689 () Bool)

(declare-fun e!117714 () Bool)

(assert (=> start!37242 (=> (not res!140689) (not e!117714))))

(declare-fun nBits!499 () (_ BitVec 64))

(declare-fun fromArr1!3 () (_ BitVec 64))

(declare-fun arr1!28 () array!8912)

(declare-fun arr2!28 () array!8912)

(declare-fun fromArr2!3 () (_ BitVec 64))

(assert (=> start!37242 (= res!140689 (and (bvsge fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge nBits!499 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt fromArr1!3 (bvsub #b0111111111111111111111111111111111111111111111111111111111111111 nBits!499)) (bvslt fromArr2!3 (bvsub #b0111111111111111111111111111111111111111111111111111111111111111 nBits!499)) (bvsle (bvadd fromArr1!3 nBits!499) (bvmul #b0000000000000000000000000000000000000000000000000000000000001000 ((_ sign_extend 32) (size!3944 arr1!28)))) (bvsle (bvadd fromArr2!3 nBits!499) (bvmul #b0000000000000000000000000000000000000000000000000000000000001000 ((_ sign_extend 32) (size!3944 arr2!28))))))))

(assert (=> start!37242 e!117714))

(assert (=> start!37242 true))

(assert (=> start!37242 (array_inv!3685 arr2!28)))

(assert (=> start!37242 (array_inv!3685 arr1!28)))

(declare-fun inv!12 (BitStream!7044) Bool)

(assert (=> start!37242 (and (inv!12 thiss!1565) e!117712)))

(declare-fun b!169176 () Bool)

(declare-fun res!140690 () Bool)

(assert (=> b!169176 (=> (not res!140690) (not e!117714))))

(declare-datatypes ((List!909 0))(
  ( (Nil!906) (Cons!905 (h!1024 Bool) (t!1728 List!909)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!7044 array!8912 (_ BitVec 64) (_ BitVec 64)) List!909)

(assert (=> b!169176 (= res!140690 (= (byteArrayBitContentToList!0 thiss!1565 arr2!28 fromArr2!3 nBits!499) (byteArrayBitContentToList!0 thiss!1565 arr1!28 fromArr1!3 nBits!499)))))

(declare-fun b!169178 () Bool)

(assert (=> b!169178 (= e!117714 (not (= (byteArrayBitContentToList!0 thiss!1565 arr2!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001)) (byteArrayBitContentToList!0 thiss!1565 arr1!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001)))))))

(declare-fun b!169177 () Bool)

(declare-fun res!140688 () Bool)

(assert (=> b!169177 (=> (not res!140688) (not e!117714))))

(assert (=> b!169177 (= res!140688 (and (bvsgt nBits!499 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and start!37242 res!140689) b!169176))

(assert (= (and b!169176 res!140690) b!169177))

(assert (= (and b!169177 res!140688) b!169178))

(assert (= start!37242 b!169179))

(declare-fun m!268759 () Bool)

(assert (=> b!169179 m!268759))

(declare-fun m!268761 () Bool)

(assert (=> start!37242 m!268761))

(declare-fun m!268763 () Bool)

(assert (=> start!37242 m!268763))

(declare-fun m!268765 () Bool)

(assert (=> start!37242 m!268765))

(declare-fun m!268767 () Bool)

(assert (=> b!169176 m!268767))

(declare-fun m!268769 () Bool)

(assert (=> b!169176 m!268769))

(declare-fun m!268771 () Bool)

(assert (=> b!169178 m!268771))

(declare-fun m!268773 () Bool)

(assert (=> b!169178 m!268773))

(check-sat (not start!37242) (not b!169176) (not b!169179) (not b!169178))
(check-sat)
(get-model)

(declare-fun d!59805 () Bool)

(assert (=> d!59805 (= (array_inv!3685 arr2!28) (bvsge (size!3944 arr2!28) #b00000000000000000000000000000000))))

(assert (=> start!37242 d!59805))

(declare-fun d!59807 () Bool)

(assert (=> d!59807 (= (array_inv!3685 arr1!28) (bvsge (size!3944 arr1!28) #b00000000000000000000000000000000))))

(assert (=> start!37242 d!59807))

(declare-fun d!59811 () Bool)

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> d!59811 (= (inv!12 thiss!1565) (invariant!0 (currentBit!8375 thiss!1565) (currentByte!8380 thiss!1565) (size!3944 (buf!4396 thiss!1565))))))

(declare-fun bs!14836 () Bool)

(assert (= bs!14836 d!59811))

(declare-fun m!268793 () Bool)

(assert (=> bs!14836 m!268793))

(assert (=> start!37242 d!59811))

(declare-fun d!59821 () Bool)

(declare-fun c!8735 () Bool)

(assert (=> d!59821 (= c!8735 (= nBits!499 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!117741 () List!909)

(assert (=> d!59821 (= (byteArrayBitContentToList!0 thiss!1565 arr2!28 fromArr2!3 nBits!499) e!117741)))

(declare-fun b!169214 () Bool)

(assert (=> b!169214 (= e!117741 Nil!906)))

(declare-fun b!169215 () Bool)

(assert (=> b!169215 (= e!117741 (Cons!905 (not (= (bvand ((_ sign_extend 24) (select (arr!4865 arr2!28) ((_ extract 31 0) (bvsdiv fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 thiss!1565 arr2!28 (bvadd fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!59821 c!8735) b!169214))

(assert (= (and d!59821 (not c!8735)) b!169215))

(declare-fun m!268825 () Bool)

(assert (=> b!169215 m!268825))

(declare-fun m!268829 () Bool)

(assert (=> b!169215 m!268829))

(declare-fun m!268833 () Bool)

(assert (=> b!169215 m!268833))

(assert (=> b!169176 d!59821))

(declare-fun d!59835 () Bool)

(declare-fun c!8737 () Bool)

(assert (=> d!59835 (= c!8737 (= nBits!499 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!117743 () List!909)

(assert (=> d!59835 (= (byteArrayBitContentToList!0 thiss!1565 arr1!28 fromArr1!3 nBits!499) e!117743)))

(declare-fun b!169218 () Bool)

(assert (=> b!169218 (= e!117743 Nil!906)))

(declare-fun b!169219 () Bool)

(assert (=> b!169219 (= e!117743 (Cons!905 (not (= (bvand ((_ sign_extend 24) (select (arr!4865 arr1!28) ((_ extract 31 0) (bvsdiv fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 thiss!1565 arr1!28 (bvadd fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!59835 c!8737) b!169218))

(assert (= (and d!59835 (not c!8737)) b!169219))

(declare-fun m!268837 () Bool)

(assert (=> b!169219 m!268837))

(declare-fun m!268839 () Bool)

(assert (=> b!169219 m!268839))

(declare-fun m!268841 () Bool)

(assert (=> b!169219 m!268841))

(assert (=> b!169176 d!59835))

(declare-fun d!59841 () Bool)

(assert (=> d!59841 (= (array_inv!3685 (buf!4396 thiss!1565)) (bvsge (size!3944 (buf!4396 thiss!1565)) #b00000000000000000000000000000000))))

(assert (=> b!169179 d!59841))

(declare-fun d!59843 () Bool)

(declare-fun c!8738 () Bool)

(assert (=> d!59843 (= c!8738 (= (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!117744 () List!909)

(assert (=> d!59843 (= (byteArrayBitContentToList!0 thiss!1565 arr2!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001)) e!117744)))

(declare-fun b!169220 () Bool)

(assert (=> b!169220 (= e!117744 Nil!906)))

(declare-fun b!169221 () Bool)

(assert (=> b!169221 (= e!117744 (Cons!905 (not (= (bvand ((_ sign_extend 24) (select (arr!4865 arr2!28) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 thiss!1565 arr2!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!59843 c!8738) b!169220))

(assert (= (and d!59843 (not c!8738)) b!169221))

(declare-fun m!268843 () Bool)

(assert (=> b!169221 m!268843))

(declare-fun m!268845 () Bool)

(assert (=> b!169221 m!268845))

(declare-fun m!268847 () Bool)

(assert (=> b!169221 m!268847))

(assert (=> b!169178 d!59843))

(declare-fun d!59845 () Bool)

(declare-fun c!8739 () Bool)

(assert (=> d!59845 (= c!8739 (= (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!117745 () List!909)

(assert (=> d!59845 (= (byteArrayBitContentToList!0 thiss!1565 arr1!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001)) e!117745)))

(declare-fun b!169222 () Bool)

(assert (=> b!169222 (= e!117745 Nil!906)))

(declare-fun b!169223 () Bool)

(assert (=> b!169223 (= e!117745 (Cons!905 (not (= (bvand ((_ sign_extend 24) (select (arr!4865 arr1!28) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 thiss!1565 arr1!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!59845 c!8739) b!169222))

(assert (= (and d!59845 (not c!8739)) b!169223))

(declare-fun m!268849 () Bool)

(assert (=> b!169223 m!268849))

(declare-fun m!268851 () Bool)

(assert (=> b!169223 m!268851))

(declare-fun m!268855 () Bool)

(assert (=> b!169223 m!268855))

(assert (=> b!169178 d!59845))

(check-sat (not b!169215) (not d!59811) (not b!169219) (not b!169223) (not b!169221))
(check-sat)
