; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!46008 () Bool)

(assert start!46008)

(declare-fun res!186750 () Bool)

(declare-fun e!150959 () Bool)

(assert (=> start!46008 (=> (not res!186750) (not e!150959))))

(declare-fun v!298 () (_ BitVec 64))

(assert (=> start!46008 (= res!186750 (and (bvslt v!298 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111111111110000000) (bvslt v!298 #b1111111111111111111111111111111111111111111111111000000000000000) (bvslt v!298 #b1111111111111111111111111111111111111111100000000000000000000000) (bvslt v!298 #b1111111111111111111111111111111110000000000000000000000000000000) (bvslt v!298 #b1111111111111111111111111000000000000000000000000000000000000000) (bvslt v!298 #b1111111111111111100000000000000000000000000000000000000000000000) (bvsge v!298 #b1111111110000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!46008 e!150959))

(assert (=> start!46008 true))

(declare-fun b!222306 () Bool)

(assert (=> b!222306 (= e!150959 false)))

(declare-datatypes ((Unit!15996 0))(
  ( (Unit!15997) )
))
(declare-datatypes ((tuple3!1112 0))(
  ( (tuple3!1113 (_1!10191 Unit!15996) (_2!10191 (_ BitVec 32)) (_3!698 Bool)) )
))
(declare-fun lt!351194 () tuple3!1112)

(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1112)

(assert (=> b!222306 (= lt!351194 (GetBytesNeededForNegativeNumberWhile!0 v!298 #b00000000000000000000000000110111 true))))

(assert (= (and start!46008 res!186750) b!222306))

(declare-fun m!340589 () Bool)

(assert (=> b!222306 m!340589))

(check-sat (not b!222306))
