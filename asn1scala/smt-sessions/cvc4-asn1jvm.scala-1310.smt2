; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!37244 () Bool)

(assert start!37244)

(declare-fun b!169191 () Bool)

(declare-fun e!117725 () Bool)

(declare-datatypes ((array!8914 0))(
  ( (array!8915 (arr!4866 (Array (_ BitVec 32) (_ BitVec 8))) (size!3945 (_ BitVec 32))) )
))
(declare-datatypes ((BitStream!7046 0))(
  ( (BitStream!7047 (buf!4397 array!8914) (currentByte!8381 (_ BitVec 32)) (currentBit!8376 (_ BitVec 32))) )
))
(declare-fun thiss!1565 () BitStream!7046)

(declare-fun array_inv!3686 (array!8914) Bool)

(assert (=> b!169191 (= e!117725 (array_inv!3686 (buf!4397 thiss!1565)))))

(declare-fun e!117726 () Bool)

(declare-fun nBits!499 () (_ BitVec 64))

(declare-fun fromArr1!3 () (_ BitVec 64))

(declare-fun arr2!28 () array!8914)

(declare-fun b!169190 () Bool)

(declare-fun fromArr2!3 () (_ BitVec 64))

(declare-fun arr1!28 () array!8914)

(declare-datatypes ((List!910 0))(
  ( (Nil!907) (Cons!906 (h!1025 Bool) (t!1729 List!910)) )
))
(declare-fun byteArrayBitContentToList!0 (BitStream!7046 array!8914 (_ BitVec 64) (_ BitVec 64)) List!910)

(assert (=> b!169190 (= e!117726 (not (= (byteArrayBitContentToList!0 thiss!1565 arr2!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001)) (byteArrayBitContentToList!0 thiss!1565 arr1!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001)))))))

(declare-fun res!140697 () Bool)

(assert (=> start!37244 (=> (not res!140697) (not e!117726))))

(assert (=> start!37244 (= res!140697 (and (bvsge fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge nBits!499 #b0000000000000000000000000000000000000000000000000000000000000000) (bvslt fromArr1!3 (bvsub #b0111111111111111111111111111111111111111111111111111111111111111 nBits!499)) (bvslt fromArr2!3 (bvsub #b0111111111111111111111111111111111111111111111111111111111111111 nBits!499)) (bvsle (bvadd fromArr1!3 nBits!499) (bvmul #b0000000000000000000000000000000000000000000000000000000000001000 ((_ sign_extend 32) (size!3945 arr1!28)))) (bvsle (bvadd fromArr2!3 nBits!499) (bvmul #b0000000000000000000000000000000000000000000000000000000000001000 ((_ sign_extend 32) (size!3945 arr2!28))))))))

(assert (=> start!37244 e!117726))

(assert (=> start!37244 true))

(assert (=> start!37244 (array_inv!3686 arr2!28)))

(assert (=> start!37244 (array_inv!3686 arr1!28)))

(declare-fun inv!12 (BitStream!7046) Bool)

(assert (=> start!37244 (and (inv!12 thiss!1565) e!117725)))

(declare-fun b!169188 () Bool)

(declare-fun res!140699 () Bool)

(assert (=> b!169188 (=> (not res!140699) (not e!117726))))

(assert (=> b!169188 (= res!140699 (= (byteArrayBitContentToList!0 thiss!1565 arr2!28 fromArr2!3 nBits!499) (byteArrayBitContentToList!0 thiss!1565 arr1!28 fromArr1!3 nBits!499)))))

(declare-fun b!169189 () Bool)

(declare-fun res!140698 () Bool)

(assert (=> b!169189 (=> (not res!140698) (not e!117726))))

(assert (=> b!169189 (= res!140698 (and (bvsgt nBits!499 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) #b0000000000000000000000000000000000000000000000000000000000000000) (bvsge (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and start!37244 res!140697) b!169188))

(assert (= (and b!169188 res!140699) b!169189))

(assert (= (and b!169189 res!140698) b!169190))

(assert (= start!37244 b!169191))

(declare-fun m!268775 () Bool)

(assert (=> b!169191 m!268775))

(declare-fun m!268777 () Bool)

(assert (=> b!169190 m!268777))

(declare-fun m!268779 () Bool)

(assert (=> b!169190 m!268779))

(declare-fun m!268781 () Bool)

(assert (=> start!37244 m!268781))

(declare-fun m!268783 () Bool)

(assert (=> start!37244 m!268783))

(declare-fun m!268785 () Bool)

(assert (=> start!37244 m!268785))

(declare-fun m!268787 () Bool)

(assert (=> b!169188 m!268787))

(declare-fun m!268789 () Bool)

(assert (=> b!169188 m!268789))

(push 1)

(assert (not b!169188))

(assert (not start!37244))

(assert (not b!169190))

(assert (not b!169191))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!59825 () Bool)

(declare-fun c!8734 () Bool)

(assert (=> d!59825 (= c!8734 (= nBits!499 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!117740 () List!910)

(assert (=> d!59825 (= (byteArrayBitContentToList!0 thiss!1565 arr2!28 fromArr2!3 nBits!499) e!117740)))

(declare-fun b!169212 () Bool)

(assert (=> b!169212 (= e!117740 Nil!907)))

(declare-fun b!169213 () Bool)

(assert (=> b!169213 (= e!117740 (Cons!906 (not (= (bvand ((_ sign_extend 24) (select (arr!4866 arr2!28) ((_ extract 31 0) (bvsdiv fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 thiss!1565 arr2!28 (bvadd fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!59825 c!8734) b!169212))

(assert (= (and d!59825 (not c!8734)) b!169213))

(declare-fun m!268819 () Bool)

(assert (=> b!169213 m!268819))

(declare-fun m!268821 () Bool)

(assert (=> b!169213 m!268821))

(declare-fun m!268823 () Bool)

(assert (=> b!169213 m!268823))

(assert (=> b!169188 d!59825))

(declare-fun d!59831 () Bool)

(declare-fun c!8736 () Bool)

(assert (=> d!59831 (= c!8736 (= nBits!499 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!117742 () List!910)

(assert (=> d!59831 (= (byteArrayBitContentToList!0 thiss!1565 arr1!28 fromArr1!3 nBits!499) e!117742)))

(declare-fun b!169216 () Bool)

(assert (=> b!169216 (= e!117742 Nil!907)))

(declare-fun b!169217 () Bool)

(assert (=> b!169217 (= e!117742 (Cons!906 (not (= (bvand ((_ sign_extend 24) (select (arr!4866 arr1!28) ((_ extract 31 0) (bvsdiv fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 thiss!1565 arr1!28 (bvadd fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!59831 c!8736) b!169216))

(assert (= (and d!59831 (not c!8736)) b!169217))

(declare-fun m!268827 () Bool)

(assert (=> b!169217 m!268827))

(declare-fun m!268831 () Bool)

(assert (=> b!169217 m!268831))

(declare-fun m!268835 () Bool)

(assert (=> b!169217 m!268835))

(assert (=> b!169188 d!59831))

(declare-fun d!59833 () Bool)

(assert (=> d!59833 (= (array_inv!3686 arr2!28) (bvsge (size!3945 arr2!28) #b00000000000000000000000000000000))))

(assert (=> start!37244 d!59833))

(declare-fun d!59837 () Bool)

(assert (=> d!59837 (= (array_inv!3686 arr1!28) (bvsge (size!3945 arr1!28) #b00000000000000000000000000000000))))

(assert (=> start!37244 d!59837))

(declare-fun d!59839 () Bool)

(declare-fun invariant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> d!59839 (= (inv!12 thiss!1565) (invariant!0 (currentBit!8376 thiss!1565) (currentByte!8381 thiss!1565) (size!3945 (buf!4397 thiss!1565))))))

(declare-fun bs!14837 () Bool)

(assert (= bs!14837 d!59839))

(declare-fun m!268853 () Bool)

(assert (=> bs!14837 m!268853))

(assert (=> start!37244 d!59839))

(declare-fun d!59847 () Bool)

(declare-fun c!8740 () Bool)

(assert (=> d!59847 (= c!8740 (= (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!117746 () List!910)

(assert (=> d!59847 (= (byteArrayBitContentToList!0 thiss!1565 arr2!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001)) e!117746)))

(declare-fun b!169224 () Bool)

(assert (=> b!169224 (= e!117746 Nil!907)))

(declare-fun b!169225 () Bool)

(assert (=> b!169225 (= e!117746 (Cons!906 (not (= (bvand ((_ sign_extend 24) (select (arr!4866 arr2!28) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 thiss!1565 arr2!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr2!3 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!59847 c!8740) b!169224))

(assert (= (and d!59847 (not c!8740)) b!169225))

(declare-fun m!268857 () Bool)

(assert (=> b!169225 m!268857))

(declare-fun m!268859 () Bool)

(assert (=> b!169225 m!268859))

(declare-fun m!268861 () Bool)

(assert (=> b!169225 m!268861))

(assert (=> b!169190 d!59847))

(declare-fun d!59849 () Bool)

(declare-fun c!8741 () Bool)

(assert (=> d!59849 (= c!8741 (= (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!117747 () List!910)

(assert (=> d!59849 (= (byteArrayBitContentToList!0 thiss!1565 arr1!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001)) e!117747)))

(declare-fun b!169226 () Bool)

(assert (=> b!169226 (= e!117747 Nil!907)))

(declare-fun b!169227 () Bool)

(assert (=> b!169227 (= e!117747 (Cons!906 (not (= (bvand ((_ sign_extend 24) (select (arr!4866 arr1!28) ((_ extract 31 0) (bvsdiv (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) #b0000000000000000000000000000000000000000000000000000000000001000)))) ((_ sign_extend 24) (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #b00000000) #b00000000000000000000000000000000 #b10000000) #b00000000000000000000000000000001 #b01000000) #b00000000000000000000000000000010 #b00100000) #b00000000000000000000000000000011 #b00010000) #b00000000000000000000000000000100 #b00001000) #b00000000000000000000000000000101 #b00000100) #b00000000000000000000000000000110 #b00000010) #b00000000000000000000000000000111 #b00000001) ((_ extract 31 0) (bvsrem (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3) #b0000000000000000000000000000000000000000000000000000000000001000))))) #b00000000000000000000000000000000)) (byteArrayBitContentToList!0 thiss!1565 arr1!28 (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 fromArr1!3 #b0000000000000000000000000000000000000000000000000000000000000001) (bvsub (bvsub nBits!499 #b0000000000000000000000000000000000000000000000000000000000000001) #b0000000000000000000000000000000000000000000000000000000000000001))))))

(assert (= (and d!59849 c!8741) b!169226))

(assert (= (and d!59849 (not c!8741)) b!169227))

(declare-fun m!268863 () Bool)

(assert (=> b!169227 m!268863))

(declare-fun m!268865 () Bool)

(assert (=> b!169227 m!268865))

(declare-fun m!268867 () Bool)

(assert (=> b!169227 m!268867))

(assert (=> b!169190 d!59849))

(declare-fun d!59851 () Bool)

(assert (=> d!59851 (= (array_inv!3686 (buf!4397 thiss!1565)) (bvsge (size!3945 (buf!4397 thiss!1565)) #b00000000000000000000000000000000))))

(assert (=> b!169191 d!59851))

(push 1)

(assert (not b!169225))

(assert (not b!169217))

(assert (not b!169227))

(assert (not b!169213))

(assert (not d!59839))

(check-sat)

(pop 1)

(push 1)

(check-sat)

