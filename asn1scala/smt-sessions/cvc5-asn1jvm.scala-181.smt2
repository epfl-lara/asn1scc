; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!3866 () Bool)

(assert start!3866)

(declare-fun res!15281 () Bool)

(declare-fun e!10644 () Bool)

(assert (=> start!3866 (=> (not res!15281) (not e!10644))))

(declare-fun lt!25188 () Bool)

(declare-fun i!803 () (_ BitVec 32))

(declare-fun v!291 () (_ BitVec 64))

(assert (=> start!3866 (= res!15281 (and (bvsge i!803 #b00000000000000000000000000000001) (bvsle i!803 #b00000000000000000000000001000000) (bvsge i!803 #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub i!803 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25188) (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub i!803 #b00000000000000000000000000000011)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25188)))))

(assert (=> start!3866 (= lt!25188 (not (= (bvand v!291 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!3866 e!10644))

(assert (=> start!3866 true))

(declare-fun b!16928 () Bool)

(declare-datatypes ((Unit!1553 0))(
  ( (Unit!1554) )
))
(declare-datatypes ((tuple2!2034 0))(
  ( (tuple2!2035 (_1!1078 Unit!1553) (_2!1078 (_ BitVec 32))) )
))
(declare-fun lt!25189 () tuple2!2034)

(assert (=> b!16928 (= e!10644 (and (bvsge (_2!1078 lt!25189) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub (_2!1078 lt!25189) #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25188)))))

(declare-fun GetBitCountSignedWhile!0 ((_ BitVec 64) (_ BitVec 32)) tuple2!2034)

(assert (=> b!16928 (= lt!25189 (GetBitCountSignedWhile!0 v!291 (bvsub i!803 #b00000000000000000000000000000001)))))

(assert (= (and start!3866 res!15281) b!16928))

(declare-fun m!23149 () Bool)

(assert (=> b!16928 m!23149))

(push 1)

(assert (not b!16928))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!5498 () Bool)

(declare-fun e!10676 () Bool)

(assert (=> d!5498 e!10676))

(declare-fun res!15305 () Bool)

(assert (=> d!5498 (=> (not res!15305) (not e!10676))))

(declare-fun lt!25236 () tuple2!2034)

(assert (=> d!5498 (= res!15305 (and (bvsge (_2!1078 lt!25236) #b00000000000000000000000000000001) (bvsle (_2!1078 lt!25236) #b00000000000000000000000001000000)))))

(declare-fun e!10677 () tuple2!2034)

(assert (=> d!5498 (= lt!25236 e!10677)))

(declare-fun c!1309 () Bool)

(declare-fun lt!25235 () (_ BitVec 32))

(declare-fun lt!25237 () Bool)

(assert (=> d!5498 (= c!1309 (and (bvsge lt!25235 #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub lt!25235 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25237)))))

(assert (=> d!5498 (= lt!25235 (bvsub (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000001))))

(assert (=> d!5498 (and (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000001) (bvsle (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000001000000) (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25237))))

(assert (=> d!5498 (= lt!25237 (not (= (bvand v!291 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5498 (= (GetBitCountSignedWhile!0 v!291 (bvsub i!803 #b00000000000000000000000000000001)) lt!25236)))

(declare-fun b!16967 () Bool)

(assert (=> b!16967 (= e!10677 (GetBitCountSignedWhile!0 v!291 lt!25235))))

(declare-fun lt!25234 () (_ BitVec 64))

(declare-fun e!10675 () Bool)

(declare-fun b!16970 () Bool)

(assert (=> b!16970 (= e!10675 (not (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 lt!25234)) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25237)))))

(assert (=> b!16970 (and (bvsge lt!25234 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsle lt!25234 #b0000000000000000000000000000000000000000000000000000000001000000))))

(assert (=> b!16970 (= lt!25234 ((_ sign_extend 32) (bvsub (_2!1078 lt!25236) #b00000000000000000000000000000010)))))

(assert (=> b!16970 (or (= (bvand (_2!1078 lt!25236) #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand (_2!1078 lt!25236) #b10000000000000000000000000000000) (bvand (bvsub (_2!1078 lt!25236) #b00000000000000000000000000000010) #b10000000000000000000000000000000)))))

(declare-fun b!16968 () Bool)

(declare-fun Unit!1561 () Unit!1553)

(assert (=> b!16968 (= e!10677 (tuple2!2035 Unit!1561 lt!25235))))

(declare-fun b!16969 () Bool)

(assert (=> b!16969 (= e!10676 e!10675)))

(declare-fun res!15304 () Bool)

(assert (=> b!16969 (=> res!15304 e!10675)))

(assert (=> b!16969 (= res!15304 (bvslt (_2!1078 lt!25236) #b00000000000000000000000000000010))))

(assert (= (and d!5498 c!1309) b!16967))

(assert (= (and d!5498 (not c!1309)) b!16968))

(assert (= (and d!5498 res!15305) b!16969))

(assert (= (and b!16969 (not res!15304)) b!16970))

(declare-fun m!23159 () Bool)

(assert (=> b!16967 m!23159))

(assert (=> b!16928 d!5498))

(push 1)

(assert (not b!16967))

(check-sat)

