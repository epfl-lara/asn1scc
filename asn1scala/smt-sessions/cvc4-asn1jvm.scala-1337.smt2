; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!37478 () Bool)

(assert start!37478)

(declare-fun res!141059 () Bool)

(declare-fun e!118437 () Bool)

(assert (=> start!37478 (=> (not res!141059) (not e!118437))))

(declare-fun uintSizeInBytes!5 () (_ BitVec 32))

(declare-fun v!147 () (_ BitVec 64))

(declare-fun i!474 () (_ BitVec 32))

(declare-datatypes ((Unit!11930 0))(
  ( (Unit!11931) )
))
(declare-datatypes ((ControlFlow!75 0))(
  ( (Return!74 (value!6904 (_ BitVec 64))) (Proceed!74 (value!6905 Unit!11930)) )
))
(declare-fun Unit!11932 () Unit!11930)

(assert (=> start!37478 (= res!141059 (and (bvsge uintSizeInBytes!5 #b00000000000000000000000000000001) (bvsle uintSizeInBytes!5 #b00000000000000000000000000001001) (not (is-Return!74 (ite (bvsle (bvand v!147 (bvshl #b0000000000000000000000000000000000000000000000000000000010000000 ((_ sign_extend 32) (bvmul #b00000000000000000000000000001000 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001))))) #b0000000000000000000000000000000000000000000000000000000000000000) (Return!74 v!147) (Proceed!74 Unit!11932)))) (bvsle i!474 #b00000000000000000000000000000111) (bvsge i!474 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)) (bvsge i!474 uintSizeInBytes!5) (bvsge (bvsub i!474 #b00000000000000000000000000000001) uintSizeInBytes!5)))))

(assert (=> start!37478 e!118437))

(assert (=> start!37478 true))

(declare-fun b!169752 () Bool)

(assert (=> b!169752 (= e!118437 false)))

(declare-fun vv!30 () (_ BitVec 64))

(declare-datatypes ((tuple3!982 0))(
  ( (tuple3!983 (_1!7947 Unit!11930) (_2!7947 (_ BitVec 32)) (_3!617 (_ BitVec 64))) )
))
(declare-fun lt!262273 () tuple3!982)

(declare-fun uint2intWhile!0 ((_ BitVec 32) (_ BitVec 64) (_ BitVec 32) (_ BitVec 64)) tuple3!982)

(assert (=> b!169752 (= lt!262273 (uint2intWhile!0 uintSizeInBytes!5 v!147 (bvsub i!474 #b00000000000000000000000000000001) (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474))))))

(assert (= (and start!37478 res!141059) b!169752))

(declare-fun m!269537 () Bool)

(assert (=> b!169752 m!269537))

(declare-fun m!269539 () Bool)

(assert (=> b!169752 m!269539))

(push 1)

