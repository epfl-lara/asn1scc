; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!3756 () Bool)

(assert start!3756)

(declare-fun b!16250 () Bool)

(declare-fun e!10128 () Bool)

(declare-fun lt!24516 () (_ BitVec 64))

(assert (=> b!16250 (= e!10128 (or (bvslt lt!24516 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsgt lt!24516 #b0000000000000000000000000000000000000000000000000000000001000000)))))

(declare-datatypes ((Unit!1398 0))(
  ( (Unit!1399) )
))
(declare-datatypes ((tuple2!2008 0))(
  ( (tuple2!2009 (_1!1065 Unit!1398) (_2!1065 (_ BitVec 32))) )
))
(declare-fun lt!24517 () tuple2!2008)

(assert (=> b!16250 (= lt!24516 ((_ sign_extend 32) (bvsub (_2!1065 lt!24517) #b00000000000000000000000000000001)))))

(declare-fun b!16249 () Bool)

(declare-fun res!14909 () Bool)

(assert (=> b!16249 (=> (not res!14909) (not e!10128))))

(declare-fun v!288 () (_ BitVec 64))

(declare-fun onesLSBLong!0 ((_ BitVec 32)) (_ BitVec 64))

(assert (=> b!16249 (= res!14909 (= (bvand v!288 (onesLSBLong!0 (_2!1065 lt!24517))) v!288))))

(declare-fun b!16247 () Bool)

(declare-fun e!10127 () tuple2!2008)

(declare-fun GetBitCountSignedWhile!0 ((_ BitVec 64) (_ BitVec 32)) tuple2!2008)

(assert (=> b!16247 (= e!10127 (GetBitCountSignedWhile!0 v!288 #b00000000000000000000000001000000))))

(declare-fun res!14908 () Bool)

(assert (=> start!3756 (=> (not res!14908) (not e!10128))))

(assert (=> start!3756 (= res!14908 (and (bvsle #b00000000000000000000000000000000 (_2!1065 lt!24517)) (bvsle (_2!1065 lt!24517) #b00000000000000000000000001000000) (bvsge v!288 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!3756 (= lt!24517 e!10127)))

(declare-fun c!1147 () Bool)

(assert (=> start!3756 (= c!1147 (= (not (= (bvand v!288 #b0100000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (bvand v!288 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> start!3756 e!10128))

(assert (=> start!3756 true))

(declare-fun b!16248 () Bool)

(declare-fun Unit!1400 () Unit!1398)

(assert (=> b!16248 (= e!10127 (tuple2!2009 Unit!1400 #b00000000000000000000000001000000))))

(assert (= (and start!3756 c!1147) b!16247))

(assert (= (and start!3756 (not c!1147)) b!16248))

(assert (= (and start!3756 res!14908) b!16249))

(assert (= (and b!16249 res!14909) b!16250))

(declare-fun m!22859 () Bool)

(assert (=> b!16249 m!22859))

(declare-fun m!22861 () Bool)

(assert (=> b!16247 m!22861))

(push 1)

(assert (not b!16247))

(assert (not b!16249))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun b!16272 () Bool)

(declare-fun e!10146 () tuple2!2008)

(declare-fun lt!24538 () (_ BitVec 32))

(declare-fun Unit!1401 () Unit!1398)

(assert (=> b!16272 (= e!10146 (tuple2!2009 Unit!1401 lt!24538))))

(declare-fun b!16271 () Bool)

(assert (=> b!16271 (= e!10146 (GetBitCountSignedWhile!0 v!288 lt!24538))))

(declare-fun b!16273 () Bool)

(declare-fun e!10144 () Bool)

(declare-fun e!10145 () Bool)

(assert (=> b!16273 (= e!10144 e!10145)))

(declare-fun res!14920 () Bool)

(assert (=> b!16273 (=> res!14920 e!10145)))

(declare-fun lt!24541 () tuple2!2008)

(assert (=> b!16273 (= res!14920 (bvslt (_2!1065 lt!24541) #b00000000000000000000000000000010))))

(declare-fun d!5204 () Bool)

(assert (=> d!5204 e!10144))

(declare-fun res!14921 () Bool)

(assert (=> d!5204 (=> (not res!14921) (not e!10144))))

(assert (=> d!5204 (= res!14921 (and (bvsge (_2!1065 lt!24541) #b00000000000000000000000000000001) (bvsle (_2!1065 lt!24541) #b00000000000000000000000001000000)))))

(assert (=> d!5204 (= lt!24541 e!10146)))

(declare-fun c!1153 () Bool)

(declare-fun lt!24539 () Bool)

(assert (=> d!5204 (= c!1153 (and (bvsge lt!24538 #b00000000000000000000000000000010) (= (not (= (bvand v!288 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub lt!24538 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24539)))))

(assert (=> d!5204 (= lt!24538 (bvsub #b00000000000000000000000001000000 #b00000000000000000000000000000001))))

(assert (=> d!5204 (and (bvsge #b00000000000000000000000001000000 #b00000000000000000000000000000001) (bvsle #b00000000000000000000000001000000 #b00000000000000000000000001000000) (bvsge #b00000000000000000000000001000000 #b00000000000000000000000000000010) (= (not (= (bvand v!288 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub #b00000000000000000000000001000000 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24539))))

(assert (=> d!5204 (= lt!24539 (not (= (bvand v!288 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5204 (= (GetBitCountSignedWhile!0 v!288 #b00000000000000000000000001000000) lt!24541)))

(declare-fun b!16274 () Bool)

(declare-fun lt!24540 () (_ BitVec 64))

(assert (=> b!16274 (= e!10145 (not (= (not (= (bvand v!288 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 lt!24540)) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!24539)))))

(assert (=> b!16274 (and (bvsge lt!24540 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsle lt!24540 #b0000000000000000000000000000000000000000000000000000000001000000))))

(assert (=> b!16274 (= lt!24540 ((_ sign_extend 32) (bvsub (_2!1065 lt!24541) #b00000000000000000000000000000010)))))

(assert (=> b!16274 (or (= (bvand (_2!1065 lt!24541) #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand (_2!1065 lt!24541) #b10000000000000000000000000000000) (bvand (bvsub (_2!1065 lt!24541) #b00000000000000000000000000000010) #b10000000000000000000000000000000)))))

(assert (= (and d!5204 c!1153) b!16271))

(assert (= (and d!5204 (not c!1153)) b!16272))

(assert (= (and d!5204 res!14921) b!16273))

(assert (= (and b!16273 (not res!14920)) b!16274))

(declare-fun m!22865 () Bool)

(assert (=> b!16271 m!22865))

(assert (=> b!16247 d!5204))

(declare-fun d!5208 () Bool)

(assert (=> d!5208 (= (onesLSBLong!0 (_2!1065 lt!24517)) (bvlshr #b1111111111111111111111111111111111111111111111111111111111111111 ((_ sign_extend 32) (bvsub #b00000000000000000000000001000000 (_2!1065 lt!24517)))))))

(assert (=> b!16249 d!5208))

(push 1)

(assert (not b!16271))

(check-sat)

