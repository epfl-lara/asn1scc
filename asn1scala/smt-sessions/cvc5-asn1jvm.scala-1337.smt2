; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!37474 () Bool)

(assert start!37474)

(declare-fun res!141053 () Bool)

(declare-fun e!118431 () Bool)

(assert (=> start!37474 (=> (not res!141053) (not e!118431))))

(declare-fun uintSizeInBytes!5 () (_ BitVec 32))

(declare-fun v!147 () (_ BitVec 64))

(declare-fun i!474 () (_ BitVec 32))

(declare-datatypes ((Unit!11924 0))(
  ( (Unit!11925) )
))
(declare-datatypes ((ControlFlow!73 0))(
  ( (Return!72 (value!6900 (_ BitVec 64))) (Proceed!72 (value!6901 Unit!11924)) )
))
(declare-fun Unit!11926 () Unit!11924)

(assert (=> start!37474 (= res!141053 (and (bvsge uintSizeInBytes!5 #b00000000000000000000000000000001) (bvsle uintSizeInBytes!5 #b00000000000000000000000000001001) (not (is-Return!72 (ite (bvsle (bvand v!147 (bvshl #b0000000000000000000000000000000000000000000000000000000010000000 ((_ sign_extend 32) (bvmul #b00000000000000000000000000001000 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001))))) #b0000000000000000000000000000000000000000000000000000000000000000) (Return!72 v!147) (Proceed!72 Unit!11926)))) (bvsle i!474 #b00000000000000000000000000000111) (bvsge i!474 (bvsub uintSizeInBytes!5 #b00000000000000000000000000000001)) (bvsge i!474 uintSizeInBytes!5) (bvsge (bvsub i!474 #b00000000000000000000000000000001) uintSizeInBytes!5)))))

(assert (=> start!37474 e!118431))

(assert (=> start!37474 true))

(declare-fun b!169746 () Bool)

(assert (=> b!169746 (= e!118431 false)))

(declare-fun vv!30 () (_ BitVec 64))

(declare-datatypes ((tuple3!978 0))(
  ( (tuple3!979 (_1!7945 Unit!11924) (_2!7945 (_ BitVec 32)) (_3!615 (_ BitVec 64))) )
))
(declare-fun lt!262267 () tuple3!978)

(declare-fun uint2intWhile!0 ((_ BitVec 32) (_ BitVec 64) (_ BitVec 32) (_ BitVec 64)) tuple3!978)

(assert (=> b!169746 (= lt!262267 (uint2intWhile!0 uintSizeInBytes!5 v!147 (bvsub i!474 #b00000000000000000000000000000001) (bvor vv!30 (select (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000011111111) #b00000000000000000000000000000001 #b0000000000000000000000000000000000000000000000001111111100000000) #b00000000000000000000000000000010 #b0000000000000000000000000000000000000000111111110000000000000000) #b00000000000000000000000000000011 #b0000000000000000000000000000000011111111000000000000000000000000) #b00000000000000000000000000000100 #b0000000000000000000000001111111100000000000000000000000000000000) #b00000000000000000000000000000101 #b0000000000000000111111110000000000000000000000000000000000000000) #b00000000000000000000000000000110 #b0000000011111111000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b1111111100000000000000000000000000000000000000000000000000000000) i!474))))))

(assert (= (and start!37474 res!141053) b!169746))

(declare-fun m!269529 () Bool)

(assert (=> b!169746 m!269529))

(declare-fun m!269531 () Bool)

(assert (=> b!169746 m!269531))

(push 1)

(assert (not b!169746))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

