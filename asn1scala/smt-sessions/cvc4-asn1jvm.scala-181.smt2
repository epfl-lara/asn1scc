; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!3870 () Bool)

(assert start!3870)

(declare-fun res!15287 () Bool)

(declare-fun e!10650 () Bool)

(assert (=> start!3870 (=> (not res!15287) (not e!10650))))

(declare-fun lt!25200 () Bool)

(declare-fun v!291 () (_ BitVec 64))

(declare-fun i!803 () (_ BitVec 32))

(assert (=> start!3870 (= res!15287 (and (bvsge i!803 #b00000000000000000000000000000001) (bvsle i!803 #b00000000000000000000000001000000) (bvsge i!803 #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub i!803 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25200) (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub i!803 #b00000000000000000000000000000011)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25200)))))

(assert (=> start!3870 (= lt!25200 (not (= (bvand v!291 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> start!3870 e!10650))

(assert (=> start!3870 true))

(declare-fun b!16934 () Bool)

(declare-datatypes ((Unit!1557 0))(
  ( (Unit!1558) )
))
(declare-datatypes ((tuple2!2038 0))(
  ( (tuple2!2039 (_1!1080 Unit!1557) (_2!1080 (_ BitVec 32))) )
))
(declare-fun lt!25201 () tuple2!2038)

(assert (=> b!16934 (= e!10650 (and (bvsge (_2!1080 lt!25201) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub (_2!1080 lt!25201) #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25200)))))

(declare-fun GetBitCountSignedWhile!0 ((_ BitVec 64) (_ BitVec 32)) tuple2!2038)

(assert (=> b!16934 (= lt!25201 (GetBitCountSignedWhile!0 v!291 (bvsub i!803 #b00000000000000000000000000000001)))))

(assert (= (and start!3870 res!15287) b!16934))

(declare-fun m!23153 () Bool)

(assert (=> b!16934 m!23153))

(push 1)

(assert (not b!16934))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun b!16965 () Bool)

(declare-fun e!10673 () Bool)

(declare-fun e!10672 () Bool)

(assert (=> b!16965 (= e!10673 e!10672)))

(declare-fun res!15303 () Bool)

(assert (=> b!16965 (=> res!15303 e!10672)))

(declare-fun lt!25232 () tuple2!2038)

(assert (=> b!16965 (= res!15303 (bvslt (_2!1080 lt!25232) #b00000000000000000000000000000010))))

(declare-fun b!16964 () Bool)

(declare-fun e!10674 () tuple2!2038)

(declare-fun lt!25231 () (_ BitVec 32))

(declare-fun Unit!1560 () Unit!1557)

(assert (=> b!16964 (= e!10674 (tuple2!2039 Unit!1560 lt!25231))))

(declare-fun d!5500 () Bool)

(assert (=> d!5500 e!10673))

(declare-fun res!15302 () Bool)

(assert (=> d!5500 (=> (not res!15302) (not e!10673))))

(assert (=> d!5500 (= res!15302 (and (bvsge (_2!1080 lt!25232) #b00000000000000000000000000000001) (bvsle (_2!1080 lt!25232) #b00000000000000000000000001000000)))))

(assert (=> d!5500 (= lt!25232 e!10674)))

(declare-fun lt!25233 () Bool)

(declare-fun c!1308 () Bool)

(assert (=> d!5500 (= c!1308 (and (bvsge lt!25231 #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub lt!25231 #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25233)))))

(assert (=> d!5500 (= lt!25231 (bvsub (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000001))))

(assert (=> d!5500 (and (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000001) (bvsle (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000001000000) (bvsge (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010) (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) (bvsub (bvsub i!803 #b00000000000000000000000000000001) #b00000000000000000000000000000010)))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25233))))

(assert (=> d!5500 (= lt!25233 (not (= (bvand v!291 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!5500 (= (GetBitCountSignedWhile!0 v!291 (bvsub i!803 #b00000000000000000000000000000001)) lt!25232)))

(declare-fun lt!25230 () (_ BitVec 64))

(declare-fun b!16966 () Bool)

(assert (=> b!16966 (= e!10672 (not (= (not (= (bvand v!291 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 lt!25230)) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25233)))))

(assert (=> b!16966 (and (bvsge lt!25230 #b0000000000000000000000000000000000000000000000000000000000000000) (bvsle lt!25230 #b0000000000000000000000000000000000000000000000000000000001000000))))

(assert (=> b!16966 (= lt!25230 ((_ sign_extend 32) (bvsub (_2!1080 lt!25232) #b00000000000000000000000000000010)))))

(assert (=> b!16966 (or (= (bvand (_2!1080 lt!25232) #b10000000000000000000000000000000) #b00000000000000000000000000000000) (= (bvand (_2!1080 lt!25232) #b10000000000000000000000000000000) (bvand (bvsub (_2!1080 lt!25232) #b00000000000000000000000000000010) #b10000000000000000000000000000000)))))

(declare-fun b!16963 () Bool)

(assert (=> b!16963 (= e!10674 (GetBitCountSignedWhile!0 v!291 lt!25231))))

(assert (= (and d!5500 c!1308) b!16963))

(assert (= (and d!5500 (not c!1308)) b!16964))

(assert (= (and d!5500 res!15302) b!16965))

(assert (= (and b!16965 (not res!15303)) b!16966))

(declare-fun m!23157 () Bool)

(assert (=> b!16963 m!23157))

(assert (=> b!16934 d!5500))

(push 1)

(assert (not b!16963))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(pop 1)

