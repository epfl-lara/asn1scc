; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!51100 () Bool)

(assert start!51100)

(declare-fun res!199731 () Bool)

(declare-fun e!165070 () Bool)

(assert (=> start!51100 (=> (not res!199731) (not e!165070))))

(declare-fun v!315 () (_ BitVec 64))

(assert (=> start!51100 (= res!199731 (bvslt v!315 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> start!51100 e!165070))

(assert (=> start!51100 true))

(declare-fun b!238933 () Bool)

(declare-fun e!165071 () Bool)

(assert (=> b!238933 (= e!165070 e!165071)))

(declare-fun res!199730 () Bool)

(assert (=> b!238933 (=> (not res!199730) (not e!165071))))

(declare-fun i!888 () (_ BitVec 32))

(declare-fun lt!373771 () (_ BitVec 32))

(assert (=> b!238933 (= res!199730 (and (bvsge i!888 lt!373771) (bvsle i!888 #b00000000000000000000000001000000) (bvslt i!888 #b00000000000000000000000001000000) (bvslt (bvadd #b00000000000000000000000000000001 i!888) #b00000000000000000000000001000000)))))

(declare-fun lt!373770 () (_ BitVec 32))

(assert (=> b!238933 (= lt!373771 (bvsub lt!373770 #b00000000000000000000000000000001))))

(assert (=> b!238933 (= lt!373770 (bvmul #b00000000000000000000000000001000 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111111111110000000) #b00000000000000000000000000000001 (ite (bvsge v!315 #b1111111111111111111111111111111111111111111111111000000000000000) #b00000000000000000000000000000010 (ite (bvsge v!315 #b1111111111111111111111111111111111111111100000000000000000000000) #b00000000000000000000000000000011 (ite (bvsge v!315 #b1111111111111111111111111111111110000000000000000000000000000000) #b00000000000000000000000000000100 (ite (bvsge v!315 #b1111111111111111111111111000000000000000000000000000000000000000) #b00000000000000000000000000000101 (ite (bvsge v!315 #b1111111111111111100000000000000000000000000000000000000000000000) #b00000000000000000000000000000110 (ite (bvsge v!315 #b1111111110000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000111 #b00000000000000000000000000001000)))))))))))

(declare-fun b!238934 () Bool)

(declare-fun lt!373773 () (_ BitVec 32))

(assert (=> b!238934 (= e!165071 (and (not (= lt!373773 #b00000000000000000000000000000000)) (not (= lt!373773 (bvand lt!373771 #b10000000000000000000000000000000)))))))

(assert (=> b!238934 (= lt!373773 (bvand lt!373770 #b10000000000000000000000000000000))))

(declare-datatypes ((Unit!17415 0))(
  ( (Unit!17416) )
))
(declare-datatypes ((tuple3!1532 0))(
  ( (tuple3!1533 (_1!11015 Unit!17415) (_2!11015 (_ BitVec 32)) (_3!908 Bool)) )
))
(declare-fun lt!373772 () tuple3!1532)

(declare-fun allOnes!72 () Bool)

(declare-fun GetBytesNeededForNegativeNumberWhile!0 ((_ BitVec 64) (_ BitVec 32) Bool) tuple3!1532)

(assert (=> b!238934 (= lt!373772 (GetBytesNeededForNegativeNumberWhile!0 v!315 (bvadd #b00000000000000000000000000000001 i!888) (and allOnes!72 (not (= (bvand v!315 (bvshl #b0000000000000000000000000000000000000000000000000000000000000001 ((_ sign_extend 32) i!888))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and start!51100 res!199731) b!238933))

(assert (= (and b!238933 res!199730) b!238934))

(declare-fun m!360977 () Bool)

(assert (=> b!238934 m!360977))

(check-sat (not b!238934))
(check-sat)
